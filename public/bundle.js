/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 86);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(105)
var ieee754 = __webpack_require__(106)
var isArray = __webpack_require__(50)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(1)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = __webpack_require__(147).Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(146)(module)))

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var out_of_memory = /* tuple */[
  "Out_of_memory",
  0
];

var sys_error = /* tuple */[
  "Sys_error",
  -1
];

var failure = /* tuple */[
  "Failure",
  -2
];

var invalid_argument = /* tuple */[
  "Invalid_argument",
  -3
];

var end_of_file = /* tuple */[
  "End_of_file",
  -4
];

var division_by_zero = /* tuple */[
  "Division_by_zero",
  -5
];

var not_found = /* tuple */[
  "Not_found",
  -6
];

var match_failure = /* tuple */[
  "Match_failure",
  -7
];

var stack_overflow = /* tuple */[
  "Stack_overflow",
  -8
];

var sys_blocked_io = /* tuple */[
  "Sys_blocked_io",
  -9
];

var assert_failure = /* tuple */[
  "Assert_failure",
  -10
];

var undefined_recursive_module = /* tuple */[
  "Undefined_recursive_module",
  -11
];

out_of_memory.tag = 248;

sys_error.tag = 248;

failure.tag = 248;

invalid_argument.tag = 248;

end_of_file.tag = 248;

division_by_zero.tag = 248;

not_found.tag = 248;

match_failure.tag = 248;

stack_overflow.tag = 248;

sys_blocked_io.tag = 248;

assert_failure.tag = 248;

undefined_recursive_module.tag = 248;

exports.out_of_memory              = out_of_memory;
exports.sys_error                  = sys_error;
exports.failure                    = failure;
exports.invalid_argument           = invalid_argument;
exports.end_of_file                = end_of_file;
exports.division_by_zero           = division_by_zero;
exports.not_found                  = not_found;
exports.match_failure              = match_failure;
exports.stack_overflow             = stack_overflow;
exports.sys_blocked_io             = sys_blocked_io;
exports.assert_failure             = assert_failure;
exports.undefined_recursive_module = undefined_recursive_module;
/*  Not a pure module */


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(153).version;
elliptic.utils = __webpack_require__(154);
elliptic.rand = __webpack_require__(73);
elliptic.curve = __webpack_require__(28);
elliptic.curves = __webpack_require__(159);

// Protocols
elliptic.ec = __webpack_require__(167);
elliptic.eddsa = __webpack_require__(171);


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(6);
var inherits = __webpack_require__(0);

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_array = __webpack_require__(47);

function app(_f, _args) {
  while(true) {
    var args = _args;
    var f = _f;
    var arity = f.length;
    var arity$1 = arity ? arity : 1;
    var len = args.length;
    var d = arity$1 - len | 0;
    if (d) {
      if (d < 0) {
        _args = Caml_array.caml_array_sub(args, arity$1, -d | 0);
        _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity$1));
        continue ;
        
      } else {
        return (function(f,args){
        return function (x) {
          return app(f, args.concat(/* array */[x]));
        }
        }(f,args));
      }
    } else {
      return f.apply(null, args);
    }
  };
}

function curry_1(o, a0, arity) {
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[a0]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          return o(a0);
      case 2 : 
          return (function (param) {
              return o(a0, param);
            });
      case 3 : 
          return (function (param, param$1) {
              return o(a0, param, param$1);
            });
      case 4 : 
          return (function (param, param$1, param$2) {
              return o(a0, param, param$1, param$2);
            });
      case 5 : 
          return (function (param, param$1, param$2, param$3) {
              return o(a0, param, param$1, param$2, param$3);
            });
      case 6 : 
          return (function (param, param$1, param$2, param$3, param$4) {
              return o(a0, param, param$1, param$2, param$3, param$4);
            });
      case 7 : 
          return (function (param, param$1, param$2, param$3, param$4, param$5) {
              return o(a0, param, param$1, param$2, param$3, param$4, param$5);
            });
      
    }
  }
}

function _1(o, a0) {
  var arity = o.length;
  if (arity === 1) {
    return o(a0);
  } else {
    return curry_1(o, a0, arity);
  }
}

function __1(o) {
  var arity = o.length;
  if (arity === 1) {
    return o;
  } else {
    return (function (a0) {
        return _1(o, a0);
      });
  }
}

function curry_2(o, a0, a1, arity) {
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          return app(o(a0), /* array */[a1]);
      case 2 : 
          return o(a0, a1);
      case 3 : 
          return (function (param) {
              return o(a0, a1, param);
            });
      case 4 : 
          return (function (param, param$1) {
              return o(a0, a1, param, param$1);
            });
      case 5 : 
          return (function (param, param$1, param$2) {
              return o(a0, a1, param, param$1, param$2);
            });
      case 6 : 
          return (function (param, param$1, param$2, param$3) {
              return o(a0, a1, param, param$1, param$2, param$3);
            });
      case 7 : 
          return (function (param, param$1, param$2, param$3, param$4) {
              return o(a0, a1, param, param$1, param$2, param$3, param$4);
            });
      
    }
  }
}

function _2(o, a0, a1) {
  var arity = o.length;
  if (arity === 2) {
    return o(a0, a1);
  } else {
    return curry_2(o, a0, a1, arity);
  }
}

function __2(o) {
  var arity = o.length;
  if (arity === 2) {
    return o;
  } else {
    return (function (a0, a1) {
        return _2(o, a0, a1);
      });
  }
}

function curry_3(o, a0, a1, a2, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[a2]);
      case 3 : 
          return o(a0, a1, a2);
      case 4 : 
          return (function (param) {
              return o(a0, a1, a2, param);
            });
      case 5 : 
          return (function (param, param$1) {
              return o(a0, a1, a2, param, param$1);
            });
      case 6 : 
          return (function (param, param$1, param$2) {
              return o(a0, a1, a2, param, param$1, param$2);
            });
      case 7 : 
          return (function (param, param$1, param$2, param$3) {
              return o(a0, a1, a2, param, param$1, param$2, param$3);
            });
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2
              ]);
  }
  
}

function _3(o, a0, a1, a2) {
  var arity = o.length;
  if (arity === 3) {
    return o(a0, a1, a2);
  } else {
    return curry_3(o, a0, a1, a2, arity);
  }
}

function __3(o) {
  var arity = o.length;
  if (arity === 3) {
    return o;
  } else {
    return (function (a0, a1, a2) {
        return _3(o, a0, a1, a2);
      });
  }
}

function curry_4(o, a0, a1, a2, a3, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2,
                a3
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[
                      a2,
                      a3
                    ]);
      case 3 : 
          return app(o(a0, a1, a2), /* array */[a3]);
      case 4 : 
          return o(a0, a1, a2, a3);
      case 5 : 
          return (function (param) {
              return o(a0, a1, a2, a3, param);
            });
      case 6 : 
          return (function (param, param$1) {
              return o(a0, a1, a2, a3, param, param$1);
            });
      case 7 : 
          return (function (param, param$1, param$2) {
              return o(a0, a1, a2, a3, param, param$1, param$2);
            });
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2,
                a3
              ]);
  }
  
}

function _4(o, a0, a1, a2, a3) {
  var arity = o.length;
  if (arity === 4) {
    return o(a0, a1, a2, a3);
  } else {
    return curry_4(o, a0, a1, a2, a3, arity);
  }
}

function __4(o) {
  var arity = o.length;
  if (arity === 4) {
    return o;
  } else {
    return (function (a0, a1, a2, a3) {
        return _4(o, a0, a1, a2, a3);
      });
  }
}

function curry_5(o, a0, a1, a2, a3, a4, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2,
                a3,
                a4
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[
                      a2,
                      a3,
                      a4
                    ]);
      case 3 : 
          return app(o(a0, a1, a2), /* array */[
                      a3,
                      a4
                    ]);
      case 4 : 
          return app(o(a0, a1, a2, a3), /* array */[a4]);
      case 5 : 
          return o(a0, a1, a2, a3, a4);
      case 6 : 
          return (function (param) {
              return o(a0, a1, a2, a3, a4, param);
            });
      case 7 : 
          return (function (param, param$1) {
              return o(a0, a1, a2, a3, a4, param, param$1);
            });
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2,
                a3,
                a4
              ]);
  }
  
}

function _5(o, a0, a1, a2, a3, a4) {
  var arity = o.length;
  if (arity === 5) {
    return o(a0, a1, a2, a3, a4);
  } else {
    return curry_5(o, a0, a1, a2, a3, a4, arity);
  }
}

function __5(o) {
  var arity = o.length;
  if (arity === 5) {
    return o;
  } else {
    return (function (a0, a1, a2, a3, a4) {
        return _5(o, a0, a1, a2, a3, a4);
      });
  }
}

function curry_6(o, a0, a1, a2, a3, a4, a5, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2,
                a3,
                a4,
                a5
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[
                      a2,
                      a3,
                      a4,
                      a5
                    ]);
      case 3 : 
          return app(o(a0, a1, a2), /* array */[
                      a3,
                      a4,
                      a5
                    ]);
      case 4 : 
          return app(o(a0, a1, a2, a3), /* array */[
                      a4,
                      a5
                    ]);
      case 5 : 
          return app(o(a0, a1, a2, a3, a4), /* array */[a5]);
      case 6 : 
          return o(a0, a1, a2, a3, a4, a5);
      case 7 : 
          return (function (param) {
              return o(a0, a1, a2, a3, a4, a5, param);
            });
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2,
                a3,
                a4,
                a5
              ]);
  }
  
}

function _6(o, a0, a1, a2, a3, a4, a5) {
  var arity = o.length;
  if (arity === 6) {
    return o(a0, a1, a2, a3, a4, a5);
  } else {
    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);
  }
}

function __6(o) {
  var arity = o.length;
  if (arity === 6) {
    return o;
  } else {
    return (function (a0, a1, a2, a3, a4, a5) {
        return _6(o, a0, a1, a2, a3, a4, a5);
      });
  }
}

function curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2,
                a3,
                a4,
                a5,
                a6
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[
                      a2,
                      a3,
                      a4,
                      a5,
                      a6
                    ]);
      case 3 : 
          return app(o(a0, a1, a2), /* array */[
                      a3,
                      a4,
                      a5,
                      a6
                    ]);
      case 4 : 
          return app(o(a0, a1, a2, a3), /* array */[
                      a4,
                      a5,
                      a6
                    ]);
      case 5 : 
          return app(o(a0, a1, a2, a3, a4), /* array */[
                      a5,
                      a6
                    ]);
      case 6 : 
          return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);
      case 7 : 
          return o(a0, a1, a2, a3, a4, a5, a6);
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2,
                a3,
                a4,
                a5,
                a6
              ]);
  }
  
}

function _7(o, a0, a1, a2, a3, a4, a5, a6) {
  var arity = o.length;
  if (arity === 7) {
    return o(a0, a1, a2, a3, a4, a5, a6);
  } else {
    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);
  }
}

function __7(o) {
  var arity = o.length;
  if (arity === 7) {
    return o;
  } else {
    return (function (a0, a1, a2, a3, a4, a5, a6) {
        return _7(o, a0, a1, a2, a3, a4, a5, a6);
      });
  }
}

function curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {
  var exit = 0;
  if (arity > 7 || arity < 0) {
    return app(o, /* array */[
                a0,
                a1,
                a2,
                a3,
                a4,
                a5,
                a6,
                a7
              ]);
  } else {
    switch (arity) {
      case 0 : 
      case 1 : 
          exit = 1;
          break;
      case 2 : 
          return app(o(a0, a1), /* array */[
                      a2,
                      a3,
                      a4,
                      a5,
                      a6,
                      a7
                    ]);
      case 3 : 
          return app(o(a0, a1, a2), /* array */[
                      a3,
                      a4,
                      a5,
                      a6,
                      a7
                    ]);
      case 4 : 
          return app(o(a0, a1, a2, a3), /* array */[
                      a4,
                      a5,
                      a6,
                      a7
                    ]);
      case 5 : 
          return app(o(a0, a1, a2, a3, a4), /* array */[
                      a5,
                      a6,
                      a7
                    ]);
      case 6 : 
          return app(o(a0, a1, a2, a3, a4, a5), /* array */[
                      a6,
                      a7
                    ]);
      case 7 : 
          return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);
      
    }
  }
  if (exit === 1) {
    return app(o(a0), /* array */[
                a1,
                a2,
                a3,
                a4,
                a5,
                a6,
                a7
              ]);
  }
  
}

function _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {
  var arity = o.length;
  if (arity === 8) {
    return o(a0, a1, a2, a3, a4, a5, a6, a7);
  } else {
    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);
  }
}

function __8(o) {
  var arity = o.length;
  if (arity === 8) {
    return o;
  } else {
    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);
      });
  }
}

exports.app     = app;
exports.curry_1 = curry_1;
exports._1      = _1;
exports.__1     = __1;
exports.curry_2 = curry_2;
exports._2      = _2;
exports.__2     = __2;
exports.curry_3 = curry_3;
exports._3      = _3;
exports.__3     = __3;
exports.curry_4 = curry_4;
exports._4      = _4;
exports.__4     = __4;
exports.curry_5 = curry_5;
exports._5      = _5;
exports.__5     = __5;
exports.curry_6 = curry_6;
exports._6      = _6;
exports.__6     = __6;
exports.curry_7 = curry_7;
exports._7      = _7;
exports.__7     = __7;
exports.curry_8 = curry_8;
exports._8      = _8;
exports.__8     = __8;
/* No side effect */


/***/ }),
/* 10 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer
var Transform = __webpack_require__(24).Transform
var StringDecoder = __webpack_require__(39).StringDecoder
var inherits = __webpack_require__(0)

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var processNextTick = __webpack_require__(25);
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(16);
util.inherits = __webpack_require__(0);
/*</replacement>*/

var Readable = __webpack_require__(54);
var Writable = __webpack_require__(38);

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = bits & 0xffffffff
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}

var Buffer = __webpack_require__(2).Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(7)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var inherits = __webpack_require__(0)
var md5 = __webpack_require__(34)
var RIPEMD160 = __webpack_require__(35)
var sha = __webpack_require__(40)

var Base = __webpack_require__(11)

function HashNoConstructor (hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new HashNoConstructor(md5)
  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())

  return new Hash(sha(alg))
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var assert = __webpack_require__(6);

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = exports;

asn1.bignum = __webpack_require__(3);

asn1.define = __webpack_require__(175).define;
asn1.base = __webpack_require__(20);
asn1.constants = __webpack_require__(79);
asn1.decoders = __webpack_require__(181);
asn1.encoders = __webpack_require__(183);


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var base = exports;

base.Reporter = __webpack_require__(178).Reporter;
base.DecoderBuffer = __webpack_require__(78).DecoderBuffer;
base.EncoderBuffer = __webpack_require__(78).EncoderBuffer;
base.Node = __webpack_require__(179);


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Block                   = __webpack_require__(31);
var Caml_builtin_exceptions = __webpack_require__(4);

function caml_obj_dup(x) {
  var len = x.length | 0;
  var v = new Array(len);
  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
    v[i] = x[i];
  }
  v.tag = x.tag | 0;
  return v;
}

function caml_obj_truncate(x, new_size) {
  var len = x.length | 0;
  if (new_size <= 0 || new_size > len) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Obj.truncate"
        ];
  } else if (len !== new_size) {
    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){
      x[i] = 0;
    }
    x.length = new_size;
    return /* () */0;
  } else {
    return 0;
  }
}

function caml_lazy_make_forward(x) {
  return Block.__(250, [x]);
}

function caml_update_dummy(x, y) {
  var len = y.length | 0;
  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
    x[i] = y[i];
  }
  var y_tag = y.tag | 0;
  if (y_tag !== 0) {
    x.tag = y_tag;
    return /* () */0;
  } else {
    return 0;
  }
}

function caml_int_compare(x, y) {
  if (x < y) {
    return -1;
  } else if (x === y) {
    return 0;
  } else {
    return 1;
  }
}

function caml_compare(_a, _b) {
  while(true) {
    var b = _b;
    var a = _a;
    var a_type = typeof a;
    var b_type = typeof b;
    if (a_type === "string") {
      var x = a;
      var y = b;
      if (x < y) {
        return -1;
      } else if (x === y) {
        return 0;
      } else {
        return 1;
      }
    } else {
      var is_a_number = +(a_type === "number");
      var is_b_number = +(b_type === "number");
      if (is_a_number !== 0) {
        if (is_b_number !== 0) {
          return caml_int_compare(a, b);
        } else {
          return -1;
        }
      } else if (is_b_number !== 0) {
        return 1;
      } else if (a_type === "boolean" || a_type === "undefined" || a === null) {
        var x$1 = a;
        var y$1 = b;
        if (x$1 === y$1) {
          return 0;
        } else if (x$1 < y$1) {
          return -1;
        } else {
          return 1;
        }
      } else if (a_type === "function" || b_type === "function") {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "compare: functional value"
            ];
      } else {
        var tag_a = a.tag | 0;
        var tag_b = b.tag | 0;
        if (tag_a === 250) {
          _a = a[0];
          continue ;
          
        } else if (tag_b === 250) {
          _b = b[0];
          continue ;
          
        } else if (tag_a === 248) {
          return caml_int_compare(a[1], b[1]);
        } else if (tag_a === 251) {
          throw [
                Caml_builtin_exceptions.invalid_argument,
                "equal: abstract value"
              ];
        } else if (tag_a !== tag_b) {
          if (tag_a < tag_b) {
            return -1;
          } else {
            return 1;
          }
        } else {
          var len_a = a.length | 0;
          var len_b = b.length | 0;
          if (len_a === len_b) {
            var a$1 = a;
            var b$1 = b;
            var _i = 0;
            var same_length = len_a;
            while(true) {
              var i = _i;
              if (i === same_length) {
                return 0;
              } else {
                var res = caml_compare(a$1[i], b$1[i]);
                if (res !== 0) {
                  return res;
                } else {
                  _i = i + 1 | 0;
                  continue ;
                  
                }
              }
            };
          } else if (len_a < len_b) {
            var a$2 = a;
            var b$2 = b;
            var _i$1 = 0;
            var short_length = len_a;
            while(true) {
              var i$1 = _i$1;
              if (i$1 === short_length) {
                return -1;
              } else {
                var res$1 = caml_compare(a$2[i$1], b$2[i$1]);
                if (res$1 !== 0) {
                  return res$1;
                } else {
                  _i$1 = i$1 + 1 | 0;
                  continue ;
                  
                }
              }
            };
          } else {
            var a$3 = a;
            var b$3 = b;
            var _i$2 = 0;
            var short_length$1 = len_b;
            while(true) {
              var i$2 = _i$2;
              if (i$2 === short_length$1) {
                return 1;
              } else {
                var res$2 = caml_compare(a$3[i$2], b$3[i$2]);
                if (res$2 !== 0) {
                  return res$2;
                } else {
                  _i$2 = i$2 + 1 | 0;
                  continue ;
                  
                }
              }
            };
          }
        }
      }
    }
  };
}

function caml_equal(_a, _b) {
  while(true) {
    var b = _b;
    var a = _a;
    if (a === b) {
      return /* true */1;
    } else {
      var a_type = typeof a;
      if (a_type === "string" || a_type === "number" || a_type === "boolean" || a_type === "undefined" || a === null) {
        return /* false */0;
      } else {
        var b_type = typeof b;
        if (a_type === "function" || b_type === "function") {
          throw [
                Caml_builtin_exceptions.invalid_argument,
                "equal: functional value"
              ];
        } else if (b_type === "number" || b_type === "undefined" || b === null) {
          return /* false */0;
        } else {
          var tag_a = a.tag | 0;
          var tag_b = b.tag | 0;
          if (tag_a === 250) {
            _a = a[0];
            continue ;
            
          } else if (tag_b === 250) {
            _b = b[0];
            continue ;
            
          } else if (tag_a === 248) {
            return +(a[1] === b[1]);
          } else if (tag_a === 251) {
            throw [
                  Caml_builtin_exceptions.invalid_argument,
                  "equal: abstract value"
                ];
          } else if (tag_a !== tag_b) {
            return /* false */0;
          } else {
            var len_a = a.length | 0;
            var len_b = b.length | 0;
            if (len_a === len_b) {
              var a$1 = a;
              var b$1 = b;
              var _i = 0;
              var same_length = len_a;
              while(true) {
                var i = _i;
                if (i === same_length) {
                  return /* true */1;
                } else if (caml_equal(a$1[i], b$1[i])) {
                  _i = i + 1 | 0;
                  continue ;
                  
                } else {
                  return /* false */0;
                }
              };
            } else {
              return /* false */0;
            }
          }
        }
      }
    }
  };
}

function caml_notequal(a, b) {
  return 1 - caml_equal(a, b);
}

function caml_greaterequal(a, b) {
  return +(caml_compare(a, b) >= 0);
}

function caml_greaterthan(a, b) {
  return +(caml_compare(a, b) > 0);
}

function caml_lessequal(a, b) {
  return +(caml_compare(a, b) <= 0);
}

function caml_lessthan(a, b) {
  return +(caml_compare(a, b) < 0);
}

var caml_int32_compare = caml_int_compare;

var caml_nativeint_compare = caml_int_compare;

exports.caml_obj_dup           = caml_obj_dup;
exports.caml_obj_truncate      = caml_obj_truncate;
exports.caml_lazy_make_forward = caml_lazy_make_forward;
exports.caml_update_dummy      = caml_update_dummy;
exports.caml_int_compare       = caml_int_compare;
exports.caml_int32_compare     = caml_int32_compare;
exports.caml_nativeint_compare = caml_nativeint_compare;
exports.caml_compare           = caml_compare;
exports.caml_equal             = caml_equal;
exports.caml_notequal          = caml_notequal;
exports.caml_greaterequal      = caml_greaterequal;
exports.caml_greaterthan       = caml_greaterthan;
exports.caml_lessthan          = caml_lessthan;
exports.caml_lessequal         = caml_lessequal;
/* No side effect */


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_builtin_exceptions = __webpack_require__(4);

function div(x, y) {
  if (y === 0) {
    throw Caml_builtin_exceptions.division_by_zero;
  } else {
    return x / y | 0;
  }
}

function mod_(x, y) {
  if (y === 0) {
    throw Caml_builtin_exceptions.division_by_zero;
  } else {
    return x % y;
  }
}

function caml_bswap16(x) {
  return ((x & 255) << 8) | ((x & 65280) >>> 8);
}

function caml_int32_bswap(x) {
  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);
}

var imul = ( Math.imul || function (x,y) {
  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; 
}
);

var caml_nativeint_bswap = caml_int32_bswap;

exports.div                  = div;
exports.mod_                 = mod_;
exports.caml_bswap16         = caml_bswap16;
exports.caml_int32_bswap     = caml_int32_bswap;
exports.caml_nativeint_bswap = caml_nativeint_bswap;
exports.imul                 = imul;
/* imul Not a pure module */


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_builtin_exceptions = __webpack_require__(4);

function string_of_char(prim) {
  return String.fromCharCode(prim);
}

function caml_string_get(s, i) {
  if (i >= s.length || i < 0) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "index out of bounds"
        ];
  } else {
    return s.charCodeAt(i);
  }
}

function caml_create_string(len) {
  if (len < 0) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.create"
        ];
  } else {
    return new Array(len);
  }
}

function caml_string_compare(s1, s2) {
  if (s1 === s2) {
    return 0;
  } else if (s1 < s2) {
    return -1;
  } else {
    return 1;
  }
}

function caml_fill_string(s, i, l, c) {
  if (l > 0) {
    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){
      s[k] = c;
    }
    return /* () */0;
  } else {
    return 0;
  }
}

function caml_blit_string(s1, i1, s2, i2, len) {
  if (len > 0) {
    var off1 = s1.length - i1 | 0;
    if (len <= off1) {
      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);
      }
      return /* () */0;
    } else {
      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){
        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);
      }
      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){
        s2[i2 + i$2 | 0] = /* "\000" */0;
      }
      return /* () */0;
    }
  } else {
    return 0;
  }
}

function caml_blit_bytes(s1, i1, s2, i2, len) {
  if (len > 0) {
    if (s1 === s2) {
      var s1$1 = s1;
      var i1$1 = i1;
      var i2$1 = i2;
      var len$1 = len;
      if (i1$1 < i2$1) {
        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;
        var range_b = len$1 - 1 | 0;
        var range = range_a > range_b ? range_b : range_a;
        for(var j = range; j >= 0; --j){
          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];
        }
        return /* () */0;
      } else if (i1$1 > i2$1) {
        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;
        var range_b$1 = len$1 - 1 | 0;
        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;
        for(var k = 0; k <= range$1; ++k){
          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];
        }
        return /* () */0;
      } else {
        return 0;
      }
    } else {
      var off1 = s1.length - i1 | 0;
      if (len <= off1) {
        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
          s2[i2 + i | 0] = s1[i1 + i | 0];
        }
        return /* () */0;
      } else {
        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){
          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];
        }
        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){
          s2[i2 + i$2 | 0] = /* "\000" */0;
        }
        return /* () */0;
      }
    }
  } else {
    return 0;
  }
}

function bytes_of_string(s) {
  var len = s.length;
  var res = new Array(len);
  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
    res[i] = s.charCodeAt(i);
  }
  return res;
}

function bytes_to_string(a) {
  var bytes = a;
  var i = 0;
  var len = a.length;
  var s = "";
  var s_len = len;
  if (i === 0 && len <= 4096 && len === bytes.length) {
    return String.fromCharCode.apply(null,bytes);
  } else {
    var offset = 0;
    while(s_len > 0) {
      var next = s_len < 1024 ? s_len : 1024;
      var tmp_bytes = new Array(next);
      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);
      s = s + String.fromCharCode.apply(null,tmp_bytes);
      s_len = s_len - next | 0;
      offset = offset + next | 0;
    };
    return s;
  }
}

function caml_string_of_char_array(chars) {
  var len = chars.length;
  var bytes = new Array(len);
  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
    bytes[i] = chars[i];
  }
  return bytes_to_string(bytes);
}

function caml_is_printable(c) {
  if (c > 31) {
    return +(c < 127);
  } else {
    return /* false */0;
  }
}

function caml_string_get16(s, i) {
  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;
}

function caml_string_get32(s, i) {
  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;
}

function get(s, i) {
  if (i < 0 || i >= s.length) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "index out of bounds"
        ];
  } else {
    return s.charCodeAt(i);
  }
}

exports.bytes_of_string           = bytes_of_string;
exports.bytes_to_string           = bytes_to_string;
exports.caml_is_printable         = caml_is_printable;
exports.caml_string_of_char_array = caml_string_of_char_array;
exports.caml_string_get           = caml_string_get;
exports.caml_string_compare       = caml_string_compare;
exports.caml_create_string        = caml_create_string;
exports.caml_fill_string          = caml_fill_string;
exports.caml_blit_string          = caml_blit_string;
exports.caml_blit_bytes           = caml_blit_bytes;
exports.caml_string_get16         = caml_string_get16;
exports.caml_string_get32         = caml_string_get32;
exports.string_of_char            = string_of_char;
exports.get                       = get;
/* No side effect */


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = __webpack_require__(36).EventEmitter;
var inherits = __webpack_require__(0);

inherits(Stream, EE);
Stream.Readable = __webpack_require__(37);
Stream.Writable = __webpack_require__(115);
Stream.Duplex = __webpack_require__(116);
Stream.Transform = __webpack_require__(117);
Stream.PassThrough = __webpack_require__(118);

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = nextTick;
} else {
  module.exports = process.nextTick;
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer
var MD5 = __webpack_require__(127)

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = __webpack_require__(2).Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = exports;

curve.base = __webpack_require__(155);
curve.short = __webpack_require__(156);
curve.mont = __webpack_require__(157);
curve.edwards = __webpack_require__(158);


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var asn1 = __webpack_require__(174)
var aesid = __webpack_require__(186)
var fixProc = __webpack_require__(187)
var ciphers = __webpack_require__(41)
var compat = __webpack_require__(62)
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Curry                   = __webpack_require__(9);
var Caml_obj                = __webpack_require__(21);
var Pervasives              = __webpack_require__(32);
var Caml_builtin_exceptions = __webpack_require__(4);

function length(l) {
  var _len = 0;
  var _param = l;
  while(true) {
    var param = _param;
    var len = _len;
    if (param) {
      _param = param[1];
      _len = len + 1 | 0;
      continue ;
      
    } else {
      return len;
    }
  };
}

function hd(param) {
  if (param) {
    return param[0];
  } else {
    throw [
          Caml_builtin_exceptions.failure,
          "hd"
        ];
  }
}

function tl(param) {
  if (param) {
    return param[1];
  } else {
    throw [
          Caml_builtin_exceptions.failure,
          "tl"
        ];
  }
}

function nth(l, n) {
  if (n < 0) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "List.nth"
        ];
  } else {
    var _l = l;
    var _n = n;
    while(true) {
      var n$1 = _n;
      var l$1 = _l;
      if (l$1) {
        if (n$1) {
          _n = n$1 - 1 | 0;
          _l = l$1[1];
          continue ;
          
        } else {
          return l$1[0];
        }
      } else {
        throw [
              Caml_builtin_exceptions.failure,
              "nth"
            ];
      }
    };
  }
}

function rev_append(_l1, _l2) {
  while(true) {
    var l2 = _l2;
    var l1 = _l1;
    if (l1) {
      _l2 = /* :: */[
        l1[0],
        l2
      ];
      _l1 = l1[1];
      continue ;
      
    } else {
      return l2;
    }
  };
}

function rev(l) {
  return rev_append(l, /* [] */0);
}

function flatten(param) {
  if (param) {
    return Pervasives.$at(param[0], flatten(param[1]));
  } else {
    return /* [] */0;
  }
}

function map(f, param) {
  if (param) {
    var r = Curry._1(f, param[0]);
    return /* :: */[
            r,
            map(f, param[1])
          ];
  } else {
    return /* [] */0;
  }
}

function mapi(i, f, param) {
  if (param) {
    var r = Curry._2(f, i, param[0]);
    return /* :: */[
            r,
            mapi(i + 1 | 0, f, param[1])
          ];
  } else {
    return /* [] */0;
  }
}

function mapi$1(f, l) {
  return mapi(0, f, l);
}

function rev_map(f, l) {
  var _accu = /* [] */0;
  var _param = l;
  while(true) {
    var param = _param;
    var accu = _accu;
    if (param) {
      _param = param[1];
      _accu = /* :: */[
        Curry._1(f, param[0]),
        accu
      ];
      continue ;
      
    } else {
      return accu;
    }
  };
}

function iter(f, _param) {
  while(true) {
    var param = _param;
    if (param) {
      Curry._1(f, param[0]);
      _param = param[1];
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function iteri(f, l) {
  var _i = 0;
  var f$1 = f;
  var _param = l;
  while(true) {
    var param = _param;
    var i = _i;
    if (param) {
      Curry._2(f$1, i, param[0]);
      _param = param[1];
      _i = i + 1 | 0;
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function fold_left(f, _accu, _l) {
  while(true) {
    var l = _l;
    var accu = _accu;
    if (l) {
      _l = l[1];
      _accu = Curry._2(f, accu, l[0]);
      continue ;
      
    } else {
      return accu;
    }
  };
}

function fold_right(f, l, accu) {
  if (l) {
    return Curry._2(f, l[0], fold_right(f, l[1], accu));
  } else {
    return accu;
  }
}

function map2(f, l1, l2) {
  if (l1) {
    if (l2) {
      var r = Curry._2(f, l1[0], l2[0]);
      return /* :: */[
              r,
              map2(f, l1[1], l2[1])
            ];
    } else {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.map2"
          ];
    }
  } else if (l2) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "List.map2"
        ];
  } else {
    return /* [] */0;
  }
}

function rev_map2(f, l1, l2) {
  var _accu = /* [] */0;
  var _l1 = l1;
  var _l2 = l2;
  while(true) {
    var l2$1 = _l2;
    var l1$1 = _l1;
    var accu = _accu;
    if (l1$1) {
      if (l2$1) {
        _l2 = l2$1[1];
        _l1 = l1$1[1];
        _accu = /* :: */[
          Curry._2(f, l1$1[0], l2$1[0]),
          accu
        ];
        continue ;
        
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "List.rev_map2"
            ];
      }
    } else if (l2$1) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.rev_map2"
          ];
    } else {
      return accu;
    }
  };
}

function iter2(f, _l1, _l2) {
  while(true) {
    var l2 = _l2;
    var l1 = _l1;
    if (l1) {
      if (l2) {
        Curry._2(f, l1[0], l2[0]);
        _l2 = l2[1];
        _l1 = l1[1];
        continue ;
        
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "List.iter2"
            ];
      }
    } else if (l2) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.iter2"
          ];
    } else {
      return /* () */0;
    }
  };
}

function fold_left2(f, _accu, _l1, _l2) {
  while(true) {
    var l2 = _l2;
    var l1 = _l1;
    var accu = _accu;
    if (l1) {
      if (l2) {
        _l2 = l2[1];
        _l1 = l1[1];
        _accu = Curry._3(f, accu, l1[0], l2[0]);
        continue ;
        
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "List.fold_left2"
            ];
      }
    } else if (l2) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.fold_left2"
          ];
    } else {
      return accu;
    }
  };
}

function fold_right2(f, l1, l2, accu) {
  if (l1) {
    if (l2) {
      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));
    } else {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.fold_right2"
          ];
    }
  } else if (l2) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "List.fold_right2"
        ];
  } else {
    return accu;
  }
}

function for_all(p, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (Curry._1(p, param[0])) {
        _param = param[1];
        continue ;
        
      } else {
        return /* false */0;
      }
    } else {
      return /* true */1;
    }
  };
}

function exists(p, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (Curry._1(p, param[0])) {
        return /* true */1;
      } else {
        _param = param[1];
        continue ;
        
      }
    } else {
      return /* false */0;
    }
  };
}

function for_all2(p, _l1, _l2) {
  while(true) {
    var l2 = _l2;
    var l1 = _l1;
    if (l1) {
      if (l2) {
        if (Curry._2(p, l1[0], l2[0])) {
          _l2 = l2[1];
          _l1 = l1[1];
          continue ;
          
        } else {
          return /* false */0;
        }
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "List.for_all2"
            ];
      }
    } else if (l2) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.for_all2"
          ];
    } else {
      return /* true */1;
    }
  };
}

function exists2(p, _l1, _l2) {
  while(true) {
    var l2 = _l2;
    var l1 = _l1;
    if (l1) {
      if (l2) {
        if (Curry._2(p, l1[0], l2[0])) {
          return /* true */1;
        } else {
          _l2 = l2[1];
          _l1 = l1[1];
          continue ;
          
        }
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "List.exists2"
            ];
      }
    } else if (l2) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.exists2"
          ];
    } else {
      return /* false */0;
    }
  };
}

function mem(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (Caml_obj.caml_compare(param[0], x)) {
        _param = param[1];
        continue ;
        
      } else {
        return /* true */1;
      }
    } else {
      return /* false */0;
    }
  };
}

function memq(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (param[0] === x) {
        return /* true */1;
      } else {
        _param = param[1];
        continue ;
        
      }
    } else {
      return /* false */0;
    }
  };
}

function assoc(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      var match = param[0];
      if (Caml_obj.caml_compare(match[0], x)) {
        _param = param[1];
        continue ;
        
      } else {
        return match[1];
      }
    } else {
      throw Caml_builtin_exceptions.not_found;
    }
  };
}

function assq(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      var match = param[0];
      if (match[0] === x) {
        return match[1];
      } else {
        _param = param[1];
        continue ;
        
      }
    } else {
      throw Caml_builtin_exceptions.not_found;
    }
  };
}

function mem_assoc(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (Caml_obj.caml_compare(param[0][0], x)) {
        _param = param[1];
        continue ;
        
      } else {
        return /* true */1;
      }
    } else {
      return /* false */0;
    }
  };
}

function mem_assq(x, _param) {
  while(true) {
    var param = _param;
    if (param) {
      if (param[0][0] === x) {
        return /* true */1;
      } else {
        _param = param[1];
        continue ;
        
      }
    } else {
      return /* false */0;
    }
  };
}

function remove_assoc(x, param) {
  if (param) {
    var l = param[1];
    var pair = param[0];
    if (Caml_obj.caml_compare(pair[0], x)) {
      return /* :: */[
              pair,
              remove_assoc(x, l)
            ];
    } else {
      return l;
    }
  } else {
    return /* [] */0;
  }
}

function remove_assq(x, param) {
  if (param) {
    var l = param[1];
    var pair = param[0];
    if (pair[0] === x) {
      return l;
    } else {
      return /* :: */[
              pair,
              remove_assq(x, l)
            ];
    }
  } else {
    return /* [] */0;
  }
}

function find(p, _param) {
  while(true) {
    var param = _param;
    if (param) {
      var x = param[0];
      if (Curry._1(p, x)) {
        return x;
      } else {
        _param = param[1];
        continue ;
        
      }
    } else {
      throw Caml_builtin_exceptions.not_found;
    }
  };
}

function find_all(p) {
  return (function (param) {
      var _accu = /* [] */0;
      var _param = param;
      while(true) {
        var param$1 = _param;
        var accu = _accu;
        if (param$1) {
          var l = param$1[1];
          var x = param$1[0];
          if (Curry._1(p, x)) {
            _param = l;
            _accu = /* :: */[
              x,
              accu
            ];
            continue ;
            
          } else {
            _param = l;
            continue ;
            
          }
        } else {
          return rev_append(accu, /* [] */0);
        }
      };
    });
}

function partition(p, l) {
  var _yes = /* [] */0;
  var _no = /* [] */0;
  var _param = l;
  while(true) {
    var param = _param;
    var no = _no;
    var yes = _yes;
    if (param) {
      var l$1 = param[1];
      var x = param[0];
      if (Curry._1(p, x)) {
        _param = l$1;
        _yes = /* :: */[
          x,
          yes
        ];
        continue ;
        
      } else {
        _param = l$1;
        _no = /* :: */[
          x,
          no
        ];
        continue ;
        
      }
    } else {
      return /* tuple */[
              rev_append(yes, /* [] */0),
              rev_append(no, /* [] */0)
            ];
    }
  };
}

function split(param) {
  if (param) {
    var match = param[0];
    var match$1 = split(param[1]);
    return /* tuple */[
            /* :: */[
              match[0],
              match$1[0]
            ],
            /* :: */[
              match[1],
              match$1[1]
            ]
          ];
  } else {
    return /* tuple */[
            /* [] */0,
            /* [] */0
          ];
  }
}

function combine(l1, l2) {
  if (l1) {
    if (l2) {
      return /* :: */[
              /* tuple */[
                l1[0],
                l2[0]
              ],
              combine(l1[1], l2[1])
            ];
    } else {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "List.combine"
          ];
    }
  } else if (l2) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "List.combine"
        ];
  } else {
    return /* [] */0;
  }
}

function merge(cmp, l1, l2) {
  if (l1) {
    if (l2) {
      var h2 = l2[0];
      var h1 = l1[0];
      if (Curry._2(cmp, h1, h2) <= 0) {
        return /* :: */[
                h1,
                merge(cmp, l1[1], l2)
              ];
      } else {
        return /* :: */[
                h2,
                merge(cmp, l1, l2[1])
              ];
      }
    } else {
      return l1;
    }
  } else {
    return l2;
  }
}

function chop(_k, _l) {
  while(true) {
    var l = _l;
    var k = _k;
    if (k) {
      if (l) {
        _l = l[1];
        _k = k - 1 | 0;
        continue ;
        
      } else {
        throw [
              Caml_builtin_exceptions.assert_failure,
              [
                "list.ml",
                223,
                11
              ]
            ];
      }
    } else {
      return l;
    }
  };
}

function stable_sort(cmp, l) {
  var sort = function (n, l) {
    var exit = 0;
    if (n !== 2) {
      if (n !== 3) {
        exit = 1;
      } else if (l) {
        var match = l[1];
        if (match) {
          var match$1 = match[1];
          if (match$1) {
            var x3 = match$1[0];
            var x2 = match[0];
            var x1 = l[0];
            if (Curry._2(cmp, x1, x2) <= 0) {
              if (Curry._2(cmp, x2, x3) <= 0) {
                return /* :: */[
                        x1,
                        /* :: */[
                          x2,
                          /* :: */[
                            x3,
                            /* [] */0
                          ]
                        ]
                      ];
              } else if (Curry._2(cmp, x1, x3) <= 0) {
                return /* :: */[
                        x1,
                        /* :: */[
                          x3,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ]
                      ];
              } else {
                return /* :: */[
                        x3,
                        /* :: */[
                          x1,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ]
                      ];
              }
            } else if (Curry._2(cmp, x1, x3) <= 0) {
              return /* :: */[
                      x2,
                      /* :: */[
                        x1,
                        /* :: */[
                          x3,
                          /* [] */0
                        ]
                      ]
                    ];
            } else if (Curry._2(cmp, x2, x3) <= 0) {
              return /* :: */[
                      x2,
                      /* :: */[
                        x3,
                        /* :: */[
                          x1,
                          /* [] */0
                        ]
                      ]
                    ];
            } else {
              return /* :: */[
                      x3,
                      /* :: */[
                        x2,
                        /* :: */[
                          x1,
                          /* [] */0
                        ]
                      ]
                    ];
            }
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
      } else {
        exit = 1;
      }
    } else if (l) {
      var match$2 = l[1];
      if (match$2) {
        var x2$1 = match$2[0];
        var x1$1 = l[0];
        if (Curry._2(cmp, x1$1, x2$1) <= 0) {
          return /* :: */[
                  x1$1,
                  /* :: */[
                    x2$1,
                    /* [] */0
                  ]
                ];
        } else {
          return /* :: */[
                  x2$1,
                  /* :: */[
                    x1$1,
                    /* [] */0
                  ]
                ];
        }
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      var n1 = (n >> 1);
      var n2 = n - n1 | 0;
      var l2 = chop(n1, l);
      var s1 = rev_sort(n1, l);
      var s2 = rev_sort(n2, l2);
      var _l1 = s1;
      var _l2 = s2;
      var _accu = /* [] */0;
      while(true) {
        var accu = _accu;
        var l2$1 = _l2;
        var l1 = _l1;
        if (l1) {
          if (l2$1) {
            var h2 = l2$1[0];
            var h1 = l1[0];
            if (Curry._2(cmp, h1, h2) > 0) {
              _accu = /* :: */[
                h1,
                accu
              ];
              _l1 = l1[1];
              continue ;
              
            } else {
              _accu = /* :: */[
                h2,
                accu
              ];
              _l2 = l2$1[1];
              continue ;
              
            }
          } else {
            return rev_append(l1, accu);
          }
        } else {
          return rev_append(l2$1, accu);
        }
      };
    }
    
  };
  var rev_sort = function (n, l) {
    var exit = 0;
    if (n !== 2) {
      if (n !== 3) {
        exit = 1;
      } else if (l) {
        var match = l[1];
        if (match) {
          var match$1 = match[1];
          if (match$1) {
            var x3 = match$1[0];
            var x2 = match[0];
            var x1 = l[0];
            if (Curry._2(cmp, x1, x2) > 0) {
              if (Curry._2(cmp, x2, x3) > 0) {
                return /* :: */[
                        x1,
                        /* :: */[
                          x2,
                          /* :: */[
                            x3,
                            /* [] */0
                          ]
                        ]
                      ];
              } else if (Curry._2(cmp, x1, x3) > 0) {
                return /* :: */[
                        x1,
                        /* :: */[
                          x3,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ]
                      ];
              } else {
                return /* :: */[
                        x3,
                        /* :: */[
                          x1,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ]
                      ];
              }
            } else if (Curry._2(cmp, x1, x3) > 0) {
              return /* :: */[
                      x2,
                      /* :: */[
                        x1,
                        /* :: */[
                          x3,
                          /* [] */0
                        ]
                      ]
                    ];
            } else if (Curry._2(cmp, x2, x3) > 0) {
              return /* :: */[
                      x2,
                      /* :: */[
                        x3,
                        /* :: */[
                          x1,
                          /* [] */0
                        ]
                      ]
                    ];
            } else {
              return /* :: */[
                      x3,
                      /* :: */[
                        x2,
                        /* :: */[
                          x1,
                          /* [] */0
                        ]
                      ]
                    ];
            }
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
      } else {
        exit = 1;
      }
    } else if (l) {
      var match$2 = l[1];
      if (match$2) {
        var x2$1 = match$2[0];
        var x1$1 = l[0];
        if (Curry._2(cmp, x1$1, x2$1) > 0) {
          return /* :: */[
                  x1$1,
                  /* :: */[
                    x2$1,
                    /* [] */0
                  ]
                ];
        } else {
          return /* :: */[
                  x2$1,
                  /* :: */[
                    x1$1,
                    /* [] */0
                  ]
                ];
        }
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      var n1 = (n >> 1);
      var n2 = n - n1 | 0;
      var l2 = chop(n1, l);
      var s1 = sort(n1, l);
      var s2 = sort(n2, l2);
      var _l1 = s1;
      var _l2 = s2;
      var _accu = /* [] */0;
      while(true) {
        var accu = _accu;
        var l2$1 = _l2;
        var l1 = _l1;
        if (l1) {
          if (l2$1) {
            var h2 = l2$1[0];
            var h1 = l1[0];
            if (Curry._2(cmp, h1, h2) <= 0) {
              _accu = /* :: */[
                h1,
                accu
              ];
              _l1 = l1[1];
              continue ;
              
            } else {
              _accu = /* :: */[
                h2,
                accu
              ];
              _l2 = l2$1[1];
              continue ;
              
            }
          } else {
            return rev_append(l1, accu);
          }
        } else {
          return rev_append(l2$1, accu);
        }
      };
    }
    
  };
  var len = length(l);
  if (len < 2) {
    return l;
  } else {
    return sort(len, l);
  }
}

function sort_uniq(cmp, l) {
  var sort = function (n, l) {
    var exit = 0;
    if (n !== 2) {
      if (n !== 3) {
        exit = 1;
      } else if (l) {
        var match = l[1];
        if (match) {
          var match$1 = match[1];
          if (match$1) {
            var x3 = match$1[0];
            var x2 = match[0];
            var x1 = l[0];
            var c = Curry._2(cmp, x1, x2);
            if (c) {
              if (c < 0) {
                var c$1 = Curry._2(cmp, x2, x3);
                if (c$1) {
                  if (c$1 < 0) {
                    return /* :: */[
                            x1,
                            /* :: */[
                              x2,
                              /* :: */[
                                x3,
                                /* [] */0
                              ]
                            ]
                          ];
                  } else {
                    var c$2 = Curry._2(cmp, x1, x3);
                    if (c$2) {
                      if (c$2 < 0) {
                        return /* :: */[
                                x1,
                                /* :: */[
                                  x3,
                                  /* :: */[
                                    x2,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      } else {
                        return /* :: */[
                                x3,
                                /* :: */[
                                  x1,
                                  /* :: */[
                                    x2,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      }
                    } else {
                      return /* :: */[
                              x1,
                              /* :: */[
                                x2,
                                /* [] */0
                              ]
                            ];
                    }
                  }
                } else {
                  return /* :: */[
                          x1,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ];
                }
              } else {
                var c$3 = Curry._2(cmp, x1, x3);
                if (c$3) {
                  if (c$3 < 0) {
                    return /* :: */[
                            x2,
                            /* :: */[
                              x1,
                              /* :: */[
                                x3,
                                /* [] */0
                              ]
                            ]
                          ];
                  } else {
                    var c$4 = Curry._2(cmp, x2, x3);
                    if (c$4) {
                      if (c$4 < 0) {
                        return /* :: */[
                                x2,
                                /* :: */[
                                  x3,
                                  /* :: */[
                                    x1,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      } else {
                        return /* :: */[
                                x3,
                                /* :: */[
                                  x2,
                                  /* :: */[
                                    x1,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      }
                    } else {
                      return /* :: */[
                              x2,
                              /* :: */[
                                x1,
                                /* [] */0
                              ]
                            ];
                    }
                  }
                } else {
                  return /* :: */[
                          x2,
                          /* :: */[
                            x1,
                            /* [] */0
                          ]
                        ];
                }
              }
            } else {
              var c$5 = Curry._2(cmp, x2, x3);
              if (c$5) {
                if (c$5 < 0) {
                  return /* :: */[
                          x2,
                          /* :: */[
                            x3,
                            /* [] */0
                          ]
                        ];
                } else {
                  return /* :: */[
                          x3,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ];
                }
              } else {
                return /* :: */[
                        x2,
                        /* [] */0
                      ];
              }
            }
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
      } else {
        exit = 1;
      }
    } else if (l) {
      var match$2 = l[1];
      if (match$2) {
        var x2$1 = match$2[0];
        var x1$1 = l[0];
        var c$6 = Curry._2(cmp, x1$1, x2$1);
        if (c$6) {
          if (c$6 < 0) {
            return /* :: */[
                    x1$1,
                    /* :: */[
                      x2$1,
                      /* [] */0
                    ]
                  ];
          } else {
            return /* :: */[
                    x2$1,
                    /* :: */[
                      x1$1,
                      /* [] */0
                    ]
                  ];
          }
        } else {
          return /* :: */[
                  x1$1,
                  /* [] */0
                ];
        }
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      var n1 = (n >> 1);
      var n2 = n - n1 | 0;
      var l2 = chop(n1, l);
      var s1 = rev_sort(n1, l);
      var s2 = rev_sort(n2, l2);
      var _l1 = s1;
      var _l2 = s2;
      var _accu = /* [] */0;
      while(true) {
        var accu = _accu;
        var l2$1 = _l2;
        var l1 = _l1;
        if (l1) {
          if (l2$1) {
            var t2 = l2$1[1];
            var h2 = l2$1[0];
            var t1 = l1[1];
            var h1 = l1[0];
            var c$7 = Curry._2(cmp, h1, h2);
            if (c$7) {
              if (c$7 > 0) {
                _accu = /* :: */[
                  h1,
                  accu
                ];
                _l1 = t1;
                continue ;
                
              } else {
                _accu = /* :: */[
                  h2,
                  accu
                ];
                _l2 = t2;
                continue ;
                
              }
            } else {
              _accu = /* :: */[
                h1,
                accu
              ];
              _l2 = t2;
              _l1 = t1;
              continue ;
              
            }
          } else {
            return rev_append(l1, accu);
          }
        } else {
          return rev_append(l2$1, accu);
        }
      };
    }
    
  };
  var rev_sort = function (n, l) {
    var exit = 0;
    if (n !== 2) {
      if (n !== 3) {
        exit = 1;
      } else if (l) {
        var match = l[1];
        if (match) {
          var match$1 = match[1];
          if (match$1) {
            var x3 = match$1[0];
            var x2 = match[0];
            var x1 = l[0];
            var c = Curry._2(cmp, x1, x2);
            if (c) {
              if (c > 0) {
                var c$1 = Curry._2(cmp, x2, x3);
                if (c$1) {
                  if (c$1 > 0) {
                    return /* :: */[
                            x1,
                            /* :: */[
                              x2,
                              /* :: */[
                                x3,
                                /* [] */0
                              ]
                            ]
                          ];
                  } else {
                    var c$2 = Curry._2(cmp, x1, x3);
                    if (c$2) {
                      if (c$2 > 0) {
                        return /* :: */[
                                x1,
                                /* :: */[
                                  x3,
                                  /* :: */[
                                    x2,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      } else {
                        return /* :: */[
                                x3,
                                /* :: */[
                                  x1,
                                  /* :: */[
                                    x2,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      }
                    } else {
                      return /* :: */[
                              x1,
                              /* :: */[
                                x2,
                                /* [] */0
                              ]
                            ];
                    }
                  }
                } else {
                  return /* :: */[
                          x1,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ];
                }
              } else {
                var c$3 = Curry._2(cmp, x1, x3);
                if (c$3) {
                  if (c$3 > 0) {
                    return /* :: */[
                            x2,
                            /* :: */[
                              x1,
                              /* :: */[
                                x3,
                                /* [] */0
                              ]
                            ]
                          ];
                  } else {
                    var c$4 = Curry._2(cmp, x2, x3);
                    if (c$4) {
                      if (c$4 > 0) {
                        return /* :: */[
                                x2,
                                /* :: */[
                                  x3,
                                  /* :: */[
                                    x1,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      } else {
                        return /* :: */[
                                x3,
                                /* :: */[
                                  x2,
                                  /* :: */[
                                    x1,
                                    /* [] */0
                                  ]
                                ]
                              ];
                      }
                    } else {
                      return /* :: */[
                              x2,
                              /* :: */[
                                x1,
                                /* [] */0
                              ]
                            ];
                    }
                  }
                } else {
                  return /* :: */[
                          x2,
                          /* :: */[
                            x1,
                            /* [] */0
                          ]
                        ];
                }
              }
            } else {
              var c$5 = Curry._2(cmp, x2, x3);
              if (c$5) {
                if (c$5 > 0) {
                  return /* :: */[
                          x2,
                          /* :: */[
                            x3,
                            /* [] */0
                          ]
                        ];
                } else {
                  return /* :: */[
                          x3,
                          /* :: */[
                            x2,
                            /* [] */0
                          ]
                        ];
                }
              } else {
                return /* :: */[
                        x2,
                        /* [] */0
                      ];
              }
            }
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
      } else {
        exit = 1;
      }
    } else if (l) {
      var match$2 = l[1];
      if (match$2) {
        var x2$1 = match$2[0];
        var x1$1 = l[0];
        var c$6 = Curry._2(cmp, x1$1, x2$1);
        if (c$6) {
          if (c$6 > 0) {
            return /* :: */[
                    x1$1,
                    /* :: */[
                      x2$1,
                      /* [] */0
                    ]
                  ];
          } else {
            return /* :: */[
                    x2$1,
                    /* :: */[
                      x1$1,
                      /* [] */0
                    ]
                  ];
          }
        } else {
          return /* :: */[
                  x1$1,
                  /* [] */0
                ];
        }
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      var n1 = (n >> 1);
      var n2 = n - n1 | 0;
      var l2 = chop(n1, l);
      var s1 = sort(n1, l);
      var s2 = sort(n2, l2);
      var _l1 = s1;
      var _l2 = s2;
      var _accu = /* [] */0;
      while(true) {
        var accu = _accu;
        var l2$1 = _l2;
        var l1 = _l1;
        if (l1) {
          if (l2$1) {
            var t2 = l2$1[1];
            var h2 = l2$1[0];
            var t1 = l1[1];
            var h1 = l1[0];
            var c$7 = Curry._2(cmp, h1, h2);
            if (c$7) {
              if (c$7 < 0) {
                _accu = /* :: */[
                  h1,
                  accu
                ];
                _l1 = t1;
                continue ;
                
              } else {
                _accu = /* :: */[
                  h2,
                  accu
                ];
                _l2 = t2;
                continue ;
                
              }
            } else {
              _accu = /* :: */[
                h1,
                accu
              ];
              _l2 = t2;
              _l1 = t1;
              continue ;
              
            }
          } else {
            return rev_append(l1, accu);
          }
        } else {
          return rev_append(l2$1, accu);
        }
      };
    }
    
  };
  var len = length(l);
  if (len < 2) {
    return l;
  } else {
    return sort(len, l);
  }
}

var append = Pervasives.$at;

var concat = flatten;

var filter = find_all;

var sort = stable_sort;

var fast_sort = stable_sort;

exports.length       = length;
exports.hd           = hd;
exports.tl           = tl;
exports.nth          = nth;
exports.rev          = rev;
exports.append       = append;
exports.rev_append   = rev_append;
exports.concat       = concat;
exports.flatten      = flatten;
exports.iter         = iter;
exports.iteri        = iteri;
exports.map          = map;
exports.mapi         = mapi$1;
exports.rev_map      = rev_map;
exports.fold_left    = fold_left;
exports.fold_right   = fold_right;
exports.iter2        = iter2;
exports.map2         = map2;
exports.rev_map2     = rev_map2;
exports.fold_left2   = fold_left2;
exports.fold_right2  = fold_right2;
exports.for_all      = for_all;
exports.exists       = exists;
exports.for_all2     = for_all2;
exports.exists2      = exists2;
exports.mem          = mem;
exports.memq         = memq;
exports.find         = find;
exports.filter       = filter;
exports.find_all     = find_all;
exports.partition    = partition;
exports.assoc        = assoc;
exports.assq         = assq;
exports.mem_assoc    = mem_assoc;
exports.mem_assq     = mem_assq;
exports.remove_assoc = remove_assoc;
exports.remove_assq  = remove_assq;
exports.split        = split;
exports.combine      = combine;
exports.sort         = sort;
exports.stable_sort  = stable_sort;
exports.fast_sort    = fast_sort;
exports.sort_uniq    = sort_uniq;
exports.merge        = merge;
/* No side effect */


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



function __(tag, block) {
  block.tag = tag;
  return block;
}

exports.__ = __;
/* No side effect */


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Curry                    = __webpack_require__(9);
var Caml_io                  = __webpack_require__(89);
var Caml_obj                 = __webpack_require__(21);
var Caml_sys                 = __webpack_require__(90);
var Caml_format              = __webpack_require__(91);
var Caml_string              = __webpack_require__(23);
var Caml_exceptions          = __webpack_require__(33);
var Caml_missing_polyfill    = __webpack_require__(93);
var Caml_builtin_exceptions  = __webpack_require__(4);
var CamlinternalFormatBasics = __webpack_require__(94);

function failwith(s) {
  throw [
        Caml_builtin_exceptions.failure,
        s
      ];
}

function invalid_arg(s) {
  throw [
        Caml_builtin_exceptions.invalid_argument,
        s
      ];
}

var Exit = Caml_exceptions.create("Pervasives.Exit");

function min(x, y) {
  if (Caml_obj.caml_lessequal(x, y)) {
    return x;
  } else {
    return y;
  }
}

function max(x, y) {
  if (Caml_obj.caml_greaterequal(x, y)) {
    return x;
  } else {
    return y;
  }
}

function abs(x) {
  if (x >= 0) {
    return x;
  } else {
    return -x | 0;
  }
}

function lnot(x) {
  return x ^ -1;
}

var min_int = -2147483648;

function $caret(a, b) {
  return a + b;
}

function char_of_int(n) {
  if (n < 0 || n > 255) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "char_of_int"
        ];
  } else {
    return n;
  }
}

function string_of_bool(b) {
  if (b) {
    return "true";
  } else {
    return "false";
  }
}

function bool_of_string(param) {
  switch (param) {
    case "false" : 
        return /* false */0;
    case "true" : 
        return /* true */1;
    default:
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "bool_of_string"
          ];
  }
}

function string_of_int(param) {
  return "" + param;
}

function valid_float_lexem(s) {
  var l = s.length;
  var _i = 0;
  while(true) {
    var i = _i;
    if (i >= l) {
      return $caret(s, ".");
    } else {
      var match = Caml_string.get(s, i);
      if (match >= 48) {
        if (match >= 58) {
          return s;
        } else {
          _i = i + 1 | 0;
          continue ;
          
        }
      } else if (match !== 45) {
        return s;
      } else {
        _i = i + 1 | 0;
        continue ;
        
      }
    }
  };
}

function string_of_float(f) {
  return valid_float_lexem(Caml_format.caml_format_float("%.12g", f));
}

function $at(l1, l2) {
  if (l1) {
    return /* :: */[
            l1[0],
            $at(l1[1], l2)
          ];
  } else {
    return l2;
  }
}

var stdin = Caml_io.stdin;

var stdout = Caml_io.stdout;

var stderr = Caml_io.stderr;

function open_out_gen(_, _$1, _$2) {
  return Caml_io.caml_ml_open_descriptor_out(Caml_missing_polyfill.not_implemented("caml_sys_open not implemented by bucklescript yet\n"));
}

function open_out(name) {
  return open_out_gen(/* :: */[
              /* Open_wronly */1,
              /* :: */[
                /* Open_creat */3,
                /* :: */[
                  /* Open_trunc */4,
                  /* :: */[
                    /* Open_text */7,
                    /* [] */0
                  ]
                ]
              ]
            ], 438, name);
}

function open_out_bin(name) {
  return open_out_gen(/* :: */[
              /* Open_wronly */1,
              /* :: */[
                /* Open_creat */3,
                /* :: */[
                  /* Open_trunc */4,
                  /* :: */[
                    /* Open_binary */6,
                    /* [] */0
                  ]
                ]
              ]
            ], 438, name);
}

function flush_all() {
  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);
  while(true) {
    var param = _param;
    if (param) {
      try {
        Caml_io.caml_ml_flush(param[0]);
      }
      catch (exn){
        
      }
      _param = param[1];
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function output_bytes(oc, s) {
  return Caml_io.caml_ml_output(oc, s, 0, s.length);
}

function output_string(oc, s) {
  return Caml_io.caml_ml_output(oc, s, 0, s.length);
}

function output(oc, s, ofs, len) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "output"
        ];
  } else {
    return Caml_io.caml_ml_output(oc, s, ofs, len);
  }
}

function output_substring(oc, s, ofs, len) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "output_substring"
        ];
  } else {
    return Caml_io.caml_ml_output(oc, s, ofs, len);
  }
}

function output_value(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_output_value not implemented by bucklescript yet\n");
}

function close_out(oc) {
  Caml_io.caml_ml_flush(oc);
  return Caml_missing_polyfill.not_implemented("caml_ml_close_channel not implemented by bucklescript yet\n");
}

function close_out_noerr(oc) {
  try {
    Caml_io.caml_ml_flush(oc);
  }
  catch (exn){
    
  }
  try {
    return Caml_missing_polyfill.not_implemented("caml_ml_close_channel not implemented by bucklescript yet\n");
  }
  catch (exn$1){
    return /* () */0;
  }
}

function open_in_gen(_, _$1, _$2) {
  return Caml_io.caml_ml_open_descriptor_in(Caml_missing_polyfill.not_implemented("caml_sys_open not implemented by bucklescript yet\n"));
}

function open_in(name) {
  return open_in_gen(/* :: */[
              /* Open_rdonly */0,
              /* :: */[
                /* Open_text */7,
                /* [] */0
              ]
            ], 0, name);
}

function open_in_bin(name) {
  return open_in_gen(/* :: */[
              /* Open_rdonly */0,
              /* :: */[
                /* Open_binary */6,
                /* [] */0
              ]
            ], 0, name);
}

function input(_, s, ofs, len) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "input"
        ];
  } else {
    return Caml_missing_polyfill.not_implemented("caml_ml_input not implemented by bucklescript yet\n");
  }
}

function unsafe_really_input(_, _$1, _ofs, _len) {
  while(true) {
    var len = _len;
    var ofs = _ofs;
    if (len <= 0) {
      return /* () */0;
    } else {
      var r = Caml_missing_polyfill.not_implemented("caml_ml_input not implemented by bucklescript yet\n");
      if (r) {
        _len = len - r | 0;
        _ofs = ofs + r | 0;
        continue ;
        
      } else {
        throw Caml_builtin_exceptions.end_of_file;
      }
    }
  };
}

function really_input(ic, s, ofs, len) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "really_input"
        ];
  } else {
    return unsafe_really_input(ic, s, ofs, len);
  }
}

function really_input_string(ic, len) {
  var s = Caml_string.caml_create_string(len);
  really_input(ic, s, 0, len);
  return Caml_string.bytes_to_string(s);
}

function input_line(chan) {
  var build_result = function (buf, _pos, _param) {
    while(true) {
      var param = _param;
      var pos = _pos;
      if (param) {
        var hd = param[0];
        var len = hd.length;
        Caml_string.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);
        _param = param[1];
        _pos = pos - len | 0;
        continue ;
        
      } else {
        return buf;
      }
    };
  };
  var scan = function (_accu, _len) {
    while(true) {
      var len = _len;
      var accu = _accu;
      var n = Caml_missing_polyfill.not_implemented("caml_ml_input_scan_line not implemented by bucklescript yet\n");
      if (n) {
        if (n > 0) {
          var res = Caml_string.caml_create_string(n - 1 | 0);
          Caml_missing_polyfill.not_implemented("caml_ml_input not implemented by bucklescript yet\n");
          Caml_io.caml_ml_input_char(chan);
          if (accu) {
            var len$1 = (len + n | 0) - 1 | 0;
            return build_result(Caml_string.caml_create_string(len$1), len$1, /* :: */[
                        res,
                        accu
                      ]);
          } else {
            return res;
          }
        } else {
          var beg = Caml_string.caml_create_string(-n | 0);
          Caml_missing_polyfill.not_implemented("caml_ml_input not implemented by bucklescript yet\n");
          _len = len - n | 0;
          _accu = /* :: */[
            beg,
            accu
          ];
          continue ;
          
        }
      } else if (accu) {
        return build_result(Caml_string.caml_create_string(len), len, accu);
      } else {
        throw Caml_builtin_exceptions.end_of_file;
      }
    };
  };
  return Caml_string.bytes_to_string(scan(/* [] */0, 0));
}

function close_in_noerr() {
  try {
    return Caml_missing_polyfill.not_implemented("caml_ml_close_channel not implemented by bucklescript yet\n");
  }
  catch (exn){
    return /* () */0;
  }
}

function print_char(c) {
  return Caml_io.caml_ml_output_char(stdout, c);
}

function print_string(s) {
  return output_string(stdout, s);
}

function print_bytes(s) {
  return output_bytes(stdout, s);
}

function print_int(i) {
  return output_string(stdout, "" + i);
}

function print_float(f) {
  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float("%.12g", f)));
}

function print_endline(param) {
  console.log(param);
  return 0;
}

function print_newline() {
  Caml_io.caml_ml_output_char(stdout, /* "\n" */10);
  return Caml_io.caml_ml_flush(stdout);
}

function prerr_char(c) {
  return Caml_io.caml_ml_output_char(stderr, c);
}

function prerr_string(s) {
  return output_string(stderr, s);
}

function prerr_bytes(s) {
  return output_bytes(stderr, s);
}

function prerr_int(i) {
  return output_string(stderr, "" + i);
}

function prerr_float(f) {
  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float("%.12g", f)));
}

function prerr_endline(param) {
  console.error(param);
  return 0;
}

function prerr_newline() {
  Caml_io.caml_ml_output_char(stderr, /* "\n" */10);
  return Caml_io.caml_ml_flush(stderr);
}

function read_line() {
  Caml_io.caml_ml_flush(stdout);
  return input_line(stdin);
}

function read_int() {
  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));
}

function read_float() {
  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));
}

function string_of_format(param) {
  return param[1];
}

function $caret$caret(param, param$1) {
  return /* Format */[
          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),
          $caret(param[1], $caret("%,", param$1[1]))
        ];
}

var exit_function = [flush_all];

function at_exit(f) {
  var g = exit_function[0];
  exit_function[0] = (function () {
      Curry._1(f, /* () */0);
      return Curry._1(g, /* () */0);
    });
  return /* () */0;
}

function do_at_exit() {
  return Curry._1(exit_function[0], /* () */0);
}

function exit(retcode) {
  do_at_exit(/* () */0);
  return Caml_sys.caml_sys_exit(retcode);
}

var max_int = 2147483647;

var infinity = Infinity;

var neg_infinity = -Infinity;

var nan = NaN;

var max_float = Number.MAX_VALUE;

var min_float = Number.MIN_VALUE;

var epsilon_float = 2.220446049250313e-16;

var flush = Caml_io.caml_ml_flush;

var output_char = Caml_io.caml_ml_output_char;

var output_byte = Caml_io.caml_ml_output_char;

function output_binary_int(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_output_int not implemented by bucklescript yet\n");
}

function seek_out(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_seek_out not implemented by bucklescript yet\n");
}

function pos_out() {
  return Caml_missing_polyfill.not_implemented("caml_ml_pos_out not implemented by bucklescript yet\n");
}

function out_channel_length() {
  return Caml_missing_polyfill.not_implemented("caml_ml_channel_size not implemented by bucklescript yet\n");
}

function set_binary_mode_out(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_set_binary_mode not implemented by bucklescript yet\n");
}

var input_char = Caml_io.caml_ml_input_char;

var input_byte = Caml_io.caml_ml_input_char;

function input_binary_int() {
  return Caml_missing_polyfill.not_implemented("caml_ml_input_int not implemented by bucklescript yet\n");
}

function input_value() {
  return Caml_missing_polyfill.not_implemented("caml_input_value not implemented by bucklescript yet\n");
}

function seek_in(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_seek_in not implemented by bucklescript yet\n");
}

function pos_in() {
  return Caml_missing_polyfill.not_implemented("caml_ml_pos_in not implemented by bucklescript yet\n");
}

function in_channel_length() {
  return Caml_missing_polyfill.not_implemented("caml_ml_channel_size not implemented by bucklescript yet\n");
}

function close_in() {
  return Caml_missing_polyfill.not_implemented("caml_ml_close_channel not implemented by bucklescript yet\n");
}

function set_binary_mode_in(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_set_binary_mode not implemented by bucklescript yet\n");
}

function LargeFile_000(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_seek_out_64 not implemented by bucklescript yet\n");
}

function LargeFile_001() {
  return Caml_missing_polyfill.not_implemented("caml_ml_pos_out_64 not implemented by bucklescript yet\n");
}

function LargeFile_002() {
  return Caml_missing_polyfill.not_implemented("caml_ml_channel_size_64 not implemented by bucklescript yet\n");
}

function LargeFile_003(_, _$1) {
  return Caml_missing_polyfill.not_implemented("caml_ml_seek_in_64 not implemented by bucklescript yet\n");
}

function LargeFile_004() {
  return Caml_missing_polyfill.not_implemented("caml_ml_pos_in_64 not implemented by bucklescript yet\n");
}

function LargeFile_005() {
  return Caml_missing_polyfill.not_implemented("caml_ml_channel_size_64 not implemented by bucklescript yet\n");
}

var LargeFile = [
  LargeFile_000,
  LargeFile_001,
  LargeFile_002,
  LargeFile_003,
  LargeFile_004,
  LargeFile_005
];

exports.invalid_arg         = invalid_arg;
exports.failwith            = failwith;
exports.Exit                = Exit;
exports.min                 = min;
exports.max                 = max;
exports.abs                 = abs;
exports.max_int             = max_int;
exports.min_int             = min_int;
exports.lnot                = lnot;
exports.infinity            = infinity;
exports.neg_infinity        = neg_infinity;
exports.nan                 = nan;
exports.max_float           = max_float;
exports.min_float           = min_float;
exports.epsilon_float       = epsilon_float;
exports.$caret              = $caret;
exports.char_of_int         = char_of_int;
exports.string_of_bool      = string_of_bool;
exports.bool_of_string      = bool_of_string;
exports.string_of_int       = string_of_int;
exports.string_of_float     = string_of_float;
exports.$at                 = $at;
exports.stdin               = stdin;
exports.stdout              = stdout;
exports.stderr              = stderr;
exports.print_char          = print_char;
exports.print_string        = print_string;
exports.print_bytes         = print_bytes;
exports.print_int           = print_int;
exports.print_float         = print_float;
exports.print_endline       = print_endline;
exports.print_newline       = print_newline;
exports.prerr_char          = prerr_char;
exports.prerr_string        = prerr_string;
exports.prerr_bytes         = prerr_bytes;
exports.prerr_int           = prerr_int;
exports.prerr_float         = prerr_float;
exports.prerr_endline       = prerr_endline;
exports.prerr_newline       = prerr_newline;
exports.read_line           = read_line;
exports.read_int            = read_int;
exports.read_float          = read_float;
exports.open_out            = open_out;
exports.open_out_bin        = open_out_bin;
exports.open_out_gen        = open_out_gen;
exports.flush               = flush;
exports.flush_all           = flush_all;
exports.output_char         = output_char;
exports.output_string       = output_string;
exports.output_bytes        = output_bytes;
exports.output              = output;
exports.output_substring    = output_substring;
exports.output_byte         = output_byte;
exports.output_binary_int   = output_binary_int;
exports.output_value        = output_value;
exports.seek_out            = seek_out;
exports.pos_out             = pos_out;
exports.out_channel_length  = out_channel_length;
exports.close_out           = close_out;
exports.close_out_noerr     = close_out_noerr;
exports.set_binary_mode_out = set_binary_mode_out;
exports.open_in             = open_in;
exports.open_in_bin         = open_in_bin;
exports.open_in_gen         = open_in_gen;
exports.input_char          = input_char;
exports.input_line          = input_line;
exports.input               = input;
exports.really_input        = really_input;
exports.really_input_string = really_input_string;
exports.input_byte          = input_byte;
exports.input_binary_int    = input_binary_int;
exports.input_value         = input_value;
exports.seek_in             = seek_in;
exports.pos_in              = pos_in;
exports.in_channel_length   = in_channel_length;
exports.close_in            = close_in;
exports.close_in_noerr      = close_in_noerr;
exports.set_binary_mode_in  = set_binary_mode_in;
exports.LargeFile           = LargeFile;
exports.string_of_format    = string_of_format;
exports.$caret$caret        = $caret$caret;
exports.exit                = exit;
exports.at_exit             = at_exit;
exports.valid_float_lexem   = valid_float_lexem;
exports.unsafe_really_input = unsafe_really_input;
exports.do_at_exit          = do_at_exit;
/* No side effect */


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var id = [0];

function caml_set_oo_id(b) {
  b[1] = id[0];
  id[0] += 1;
  return b;
}

function get_id() {
  id[0] += 1;
  return id[0];
}

function create(str) {
  var v_001 = get_id(/* () */0);
  var v = /* tuple */[
    str,
    v_001
  ];
  v.tag = 248;
  return v;
}

function isCamlExceptionOrOpenVariant(e) {
  if (e === undefined) {
    return /* false */0;
  } else if (e.tag === 248) {
    return /* true */1;
  } else {
    var slot = e[0];
    if (slot !== undefined) {
      return +(slot.tag === 248);
    } else {
      return /* false */0;
    }
  }
}

exports.caml_set_oo_id               = caml_set_oo_id;
exports.get_id                       = get_id;
exports.create                       = create;
exports.isCamlExceptionOrOpenVariant = isCamlExceptionOrOpenVariant;
/* No side effect */


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var makeHash = __webpack_require__(107)

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5 (x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32)
  x[(((len + 64) >>> 9) << 4) + 14] = len

  var a = 1732584193
  var b = -271733879
  var c = -1732584194
  var d = 271733878

  for (var i = 0; i < x.length; i += 16) {
    var olda = a
    var oldb = b
    var oldc = c
    var oldd = d

    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)
    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)
    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)
    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)
    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)
    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)
    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)
    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)
    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)
    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)
    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)
    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)
    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)
    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)
    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)
    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)

    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)
    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)
    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)
    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)
    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)
    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)
    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)
    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)
    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)
    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)
    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)
    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)
    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)
    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)
    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)
    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)

    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)
    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)
    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)
    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)
    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)
    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)
    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)
    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)
    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)
    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)
    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)
    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)
    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)
    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)
    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)
    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)

    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)
    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)
    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)
    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)
    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)
    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)
    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)
    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)
    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)
    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)
    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)
    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)
    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)
    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)
    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)
    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)

    a = safe_add(a, olda)
    b = safe_add(b, oldb)
    c = safe_add(c, oldc)
    d = safe_add(d, oldd)
  }

  return [a, b, c, d]
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn (q, a, b, x, s, t) {
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
}

function md5_ff (a, b, c, d, x, s, t) {
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)
}

function md5_gg (a, b, c, d, x, s, t) {
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)
}

function md5_hh (a, b, c, d, x, s, t) {
  return md5_cmn(b ^ c ^ d, a, b, x, s, t)
}

function md5_ii (a, b, c, d, x, s, t) {
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add (x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF)
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
  return (msw << 16) | (lsw & 0xFFFF)
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol (num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt))
}

module.exports = function md5 (buf) {
  return makeHash(buf, core_md5)
}


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var inherits = __webpack_require__(0)
var HashBase = __webpack_require__(108)

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var m = new Array(16)
  for (var i = 0; i < 16; ++i) m[i] = this._block.readInt32LE(i * 4)

  var al = this._a
  var bl = this._b
  var cl = this._c
  var dl = this._d
  var el = this._e

  // Mj = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
  // K = 0x00000000
  // Sj = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8
  al = fn1(al, bl, cl, dl, el, m[0], 0x00000000, 11); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[1], 0x00000000, 14); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[2], 0x00000000, 15); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[3], 0x00000000, 12); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[4], 0x00000000, 5); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[5], 0x00000000, 8); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[6], 0x00000000, 7); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[7], 0x00000000, 9); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[8], 0x00000000, 11); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[9], 0x00000000, 13); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[10], 0x00000000, 14); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[11], 0x00000000, 15); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[12], 0x00000000, 6); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[13], 0x00000000, 7); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[14], 0x00000000, 9); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[15], 0x00000000, 8); cl = rotl(cl, 10)

  // Mj = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8
  // K = 0x5a827999
  // Sj = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12
  el = fn2(el, al, bl, cl, dl, m[7], 0x5a827999, 7); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[4], 0x5a827999, 6); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[13], 0x5a827999, 8); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[1], 0x5a827999, 13); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[10], 0x5a827999, 11); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[6], 0x5a827999, 9); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[15], 0x5a827999, 7); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[3], 0x5a827999, 15); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[12], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[0], 0x5a827999, 12); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[9], 0x5a827999, 15); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[5], 0x5a827999, 9); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[2], 0x5a827999, 11); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[14], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[11], 0x5a827999, 13); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[8], 0x5a827999, 12); bl = rotl(bl, 10)

  // Mj = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12
  // K = 0x6ed9eba1
  // Sj = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5
  dl = fn3(dl, el, al, bl, cl, m[3], 0x6ed9eba1, 11); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[10], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[14], 0x6ed9eba1, 6); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[4], 0x6ed9eba1, 7); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[9], 0x6ed9eba1, 14); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[15], 0x6ed9eba1, 9); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[8], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[1], 0x6ed9eba1, 15); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[2], 0x6ed9eba1, 14); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[7], 0x6ed9eba1, 8); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[0], 0x6ed9eba1, 13); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[6], 0x6ed9eba1, 6); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[13], 0x6ed9eba1, 5); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[11], 0x6ed9eba1, 12); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[5], 0x6ed9eba1, 7); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[12], 0x6ed9eba1, 5); al = rotl(al, 10)

  // Mj = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2
  // K = 0x8f1bbcdc
  // Sj = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12
  cl = fn4(cl, dl, el, al, bl, m[1], 0x8f1bbcdc, 11); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[9], 0x8f1bbcdc, 12); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[11], 0x8f1bbcdc, 14); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[10], 0x8f1bbcdc, 15); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[0], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[8], 0x8f1bbcdc, 15); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[12], 0x8f1bbcdc, 9); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[4], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[13], 0x8f1bbcdc, 9); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[3], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[7], 0x8f1bbcdc, 5); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[15], 0x8f1bbcdc, 6); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[14], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[5], 0x8f1bbcdc, 6); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[6], 0x8f1bbcdc, 5); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[2], 0x8f1bbcdc, 12); el = rotl(el, 10)

  // Mj = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
  // K = 0xa953fd4e
  // Sj = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
  bl = fn5(bl, cl, dl, el, al, m[4], 0xa953fd4e, 9); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[0], 0xa953fd4e, 15); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[5], 0xa953fd4e, 5); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[9], 0xa953fd4e, 11); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[7], 0xa953fd4e, 6); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[12], 0xa953fd4e, 8); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[2], 0xa953fd4e, 13); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[10], 0xa953fd4e, 12); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[14], 0xa953fd4e, 5); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[1], 0xa953fd4e, 12); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[3], 0xa953fd4e, 13); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[8], 0xa953fd4e, 14); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[11], 0xa953fd4e, 11); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[6], 0xa953fd4e, 8); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[15], 0xa953fd4e, 5); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[13], 0xa953fd4e, 6); dl = rotl(dl, 10)

  var ar = this._a
  var br = this._b
  var cr = this._c
  var dr = this._d
  var er = this._e

  // M'j = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12
  // K' = 0x50a28be6
  // S'j = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6
  ar = fn5(ar, br, cr, dr, er, m[5], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[14], 0x50a28be6, 9); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[7], 0x50a28be6, 9); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[0], 0x50a28be6, 11); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[9], 0x50a28be6, 13); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[2], 0x50a28be6, 15); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[11], 0x50a28be6, 15); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[4], 0x50a28be6, 5); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[13], 0x50a28be6, 7); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[6], 0x50a28be6, 7); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[15], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[8], 0x50a28be6, 11); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[1], 0x50a28be6, 14); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[10], 0x50a28be6, 14); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[3], 0x50a28be6, 12); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[12], 0x50a28be6, 6); cr = rotl(cr, 10)

  // M'j = 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2
  // K' = 0x5c4dd124
  // S'j = 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11
  er = fn4(er, ar, br, cr, dr, m[6], 0x5c4dd124, 9); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[11], 0x5c4dd124, 13); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[3], 0x5c4dd124, 15); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[7], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[0], 0x5c4dd124, 12); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[13], 0x5c4dd124, 8); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[5], 0x5c4dd124, 9); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[10], 0x5c4dd124, 11); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[14], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[15], 0x5c4dd124, 7); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[8], 0x5c4dd124, 12); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[12], 0x5c4dd124, 7); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[4], 0x5c4dd124, 6); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[9], 0x5c4dd124, 15); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[1], 0x5c4dd124, 13); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[2], 0x5c4dd124, 11); br = rotl(br, 10)

  // M'j = 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13
  // K' = 0x6d703ef3
  // S'j = 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5
  dr = fn3(dr, er, ar, br, cr, m[15], 0x6d703ef3, 9); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[5], 0x6d703ef3, 7); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[1], 0x6d703ef3, 15); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[3], 0x6d703ef3, 11); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[7], 0x6d703ef3, 8); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[14], 0x6d703ef3, 6); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[6], 0x6d703ef3, 6); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[9], 0x6d703ef3, 14); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[11], 0x6d703ef3, 12); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[8], 0x6d703ef3, 13); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[12], 0x6d703ef3, 5); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[2], 0x6d703ef3, 14); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[10], 0x6d703ef3, 13); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[0], 0x6d703ef3, 13); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[4], 0x6d703ef3, 7); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[13], 0x6d703ef3, 5); ar = rotl(ar, 10)

  // M'j = 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14
  // K' = 0x7a6d76e9
  // S'j = 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8
  cr = fn2(cr, dr, er, ar, br, m[8], 0x7a6d76e9, 15); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[6], 0x7a6d76e9, 5); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[4], 0x7a6d76e9, 8); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[1], 0x7a6d76e9, 11); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[3], 0x7a6d76e9, 14); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[11], 0x7a6d76e9, 14); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[15], 0x7a6d76e9, 6); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[0], 0x7a6d76e9, 14); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[5], 0x7a6d76e9, 6); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[12], 0x7a6d76e9, 9); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[2], 0x7a6d76e9, 12); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[13], 0x7a6d76e9, 9); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[9], 0x7a6d76e9, 12); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[7], 0x7a6d76e9, 5); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[10], 0x7a6d76e9, 15); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[14], 0x7a6d76e9, 8); er = rotl(er, 10)

  // M'j = 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
  // K' = 0x00000000
  // S'j = 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
  br = fn1(br, cr, dr, er, ar, m[12], 0x00000000, 8); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[15], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[10], 0x00000000, 12); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[4], 0x00000000, 9); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[1], 0x00000000, 12); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[5], 0x00000000, 5); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[8], 0x00000000, 14); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[7], 0x00000000, 6); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[6], 0x00000000, 8); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[2], 0x00000000, 13); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[13], 0x00000000, 6); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[14], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[0], 0x00000000, 15); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[3], 0x00000000, 13); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[9], 0x00000000, 11); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[11], 0x00000000, 11); dr = rotl(dr, 10)

  // change state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 36 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(54);
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(38);
exports.Duplex = __webpack_require__(12);
exports.Transform = __webpack_require__(57);
exports.PassThrough = __webpack_require__(114);


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var processNextTick = __webpack_require__(25);
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(16);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(113)
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(55);
/*</replacement>*/

/*<replacement>*/
var Buffer = __webpack_require__(2).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

var destroyImpl = __webpack_require__(56);

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(12);

  options = options || {};

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(12);

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = _isUint8Array(chunk) && !state.objectMode;

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequestCount = 0;
  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(111).setImmediate, __webpack_require__(10)))

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = __webpack_require__(1).Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(119)
exports.sha1 = __webpack_require__(120)
exports.sha224 = __webpack_require__(121)
exports.sha256 = __webpack_require__(58)
exports.sha384 = __webpack_require__(122)
exports.sha512 = __webpack_require__(59)


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var ciphers = __webpack_require__(129)
var deciphers = __webpack_require__(137)
var modes = __webpack_require__(68)

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var modeModules = {
  ECB: __webpack_require__(130),
  CBC: __webpack_require__(131),
  CFB: __webpack_require__(132),
  CFB8: __webpack_require__(133),
  CFB1: __webpack_require__(134),
  OFB: __webpack_require__(135),
  CTR: __webpack_require__(66),
  GCM: __webpack_require__(66)
}

var modes = __webpack_require__(68)

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.utils = __webpack_require__(139);
exports.Cipher = __webpack_require__(140);
exports.DES = __webpack_require__(141);
exports.CBC = __webpack_require__(142);
exports.EDE = __webpack_require__(143);


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(3);
var randomBytes = __webpack_require__(14);
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;

hash.utils = __webpack_require__(8);
hash.common = __webpack_require__(18);
hash.sha = __webpack_require__(160);
hash.ripemd = __webpack_require__(164);
hash.hmac = __webpack_require__(165);

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Curry                   = __webpack_require__(9);
var Caml_builtin_exceptions = __webpack_require__(4);

function Make(funarg) {
  var height = function (param) {
    if (param) {
      return param[4];
    } else {
      return 0;
    }
  };
  var create = function (l, x, d, r) {
    var hl = height(l);
    var hr = height(r);
    return /* Node */[
            l,
            x,
            d,
            r,
            hl >= hr ? hl + 1 | 0 : hr + 1 | 0
          ];
  };
  var singleton = function (x, d) {
    return /* Node */[
            /* Empty */0,
            x,
            d,
            /* Empty */0,
            1
          ];
  };
  var bal = function (l, x, d, r) {
    var hl = l ? l[4] : 0;
    var hr = r ? r[4] : 0;
    if (hl > (hr + 2 | 0)) {
      if (l) {
        var lr = l[3];
        var ld = l[2];
        var lv = l[1];
        var ll = l[0];
        if (height(ll) >= height(lr)) {
          return create(ll, lv, ld, create(lr, x, d, r));
        } else if (lr) {
          return create(create(ll, lv, ld, lr[0]), lr[1], lr[2], create(lr[3], x, d, r));
        } else {
          throw [
                Caml_builtin_exceptions.invalid_argument,
                "Map.bal"
              ];
        }
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "Map.bal"
            ];
      }
    } else if (hr > (hl + 2 | 0)) {
      if (r) {
        var rr = r[3];
        var rd = r[2];
        var rv = r[1];
        var rl = r[0];
        if (height(rr) >= height(rl)) {
          return create(create(l, x, d, rl), rv, rd, rr);
        } else if (rl) {
          return create(create(l, x, d, rl[0]), rl[1], rl[2], create(rl[3], rv, rd, rr));
        } else {
          throw [
                Caml_builtin_exceptions.invalid_argument,
                "Map.bal"
              ];
        }
      } else {
        throw [
              Caml_builtin_exceptions.invalid_argument,
              "Map.bal"
            ];
      }
    } else {
      return /* Node */[
              l,
              x,
              d,
              r,
              hl >= hr ? hl + 1 | 0 : hr + 1 | 0
            ];
    }
  };
  var is_empty = function (param) {
    if (param) {
      return /* false */0;
    } else {
      return /* true */1;
    }
  };
  var add = function (x, data, param) {
    if (param) {
      var r = param[3];
      var d = param[2];
      var v = param[1];
      var l = param[0];
      var c = Curry._2(funarg[/* compare */0], x, v);
      if (c) {
        if (c < 0) {
          return bal(add(x, data, l), v, d, r);
        } else {
          return bal(l, v, d, add(x, data, r));
        }
      } else {
        return /* Node */[
                l,
                x,
                data,
                r,
                param[4]
              ];
      }
    } else {
      return /* Node */[
              /* Empty */0,
              x,
              data,
              /* Empty */0,
              1
            ];
    }
  };
  var find = function (x, _param) {
    while(true) {
      var param = _param;
      if (param) {
        var c = Curry._2(funarg[/* compare */0], x, param[1]);
        if (c) {
          _param = c < 0 ? param[0] : param[3];
          continue ;
          
        } else {
          return param[2];
        }
      } else {
        throw Caml_builtin_exceptions.not_found;
      }
    };
  };
  var mem = function (x, _param) {
    while(true) {
      var param = _param;
      if (param) {
        var c = Curry._2(funarg[/* compare */0], x, param[1]);
        if (c) {
          _param = c < 0 ? param[0] : param[3];
          continue ;
          
        } else {
          return /* true */1;
        }
      } else {
        return /* false */0;
      }
    };
  };
  var min_binding = function (_param) {
    while(true) {
      var param = _param;
      if (param) {
        var l = param[0];
        if (l) {
          _param = l;
          continue ;
          
        } else {
          return /* tuple */[
                  param[1],
                  param[2]
                ];
        }
      } else {
        throw Caml_builtin_exceptions.not_found;
      }
    };
  };
  var max_binding = function (_param) {
    while(true) {
      var param = _param;
      if (param) {
        var r = param[3];
        if (r) {
          _param = r;
          continue ;
          
        } else {
          return /* tuple */[
                  param[1],
                  param[2]
                ];
        }
      } else {
        throw Caml_builtin_exceptions.not_found;
      }
    };
  };
  var remove_min_binding = function (param) {
    if (param) {
      var l = param[0];
      if (l) {
        return bal(remove_min_binding(l), param[1], param[2], param[3]);
      } else {
        return param[3];
      }
    } else {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "Map.remove_min_elt"
          ];
    }
  };
  var remove = function (x, param) {
    if (param) {
      var r = param[3];
      var d = param[2];
      var v = param[1];
      var l = param[0];
      var c = Curry._2(funarg[/* compare */0], x, v);
      if (c) {
        if (c < 0) {
          return bal(remove(x, l), v, d, r);
        } else {
          return bal(l, v, d, remove(x, r));
        }
      } else {
        var t1 = l;
        var t2 = r;
        if (t1) {
          if (t2) {
            var match = min_binding(t2);
            return bal(t1, match[0], match[1], remove_min_binding(t2));
          } else {
            return t1;
          }
        } else {
          return t2;
        }
      }
    } else {
      return /* Empty */0;
    }
  };
  var iter = function (f, _param) {
    while(true) {
      var param = _param;
      if (param) {
        iter(f, param[0]);
        Curry._2(f, param[1], param[2]);
        _param = param[3];
        continue ;
        
      } else {
        return /* () */0;
      }
    };
  };
  var map = function (f, param) {
    if (param) {
      var l$prime = map(f, param[0]);
      var d$prime = Curry._1(f, param[2]);
      var r$prime = map(f, param[3]);
      return /* Node */[
              l$prime,
              param[1],
              d$prime,
              r$prime,
              param[4]
            ];
    } else {
      return /* Empty */0;
    }
  };
  var mapi = function (f, param) {
    if (param) {
      var v = param[1];
      var l$prime = mapi(f, param[0]);
      var d$prime = Curry._2(f, v, param[2]);
      var r$prime = mapi(f, param[3]);
      return /* Node */[
              l$prime,
              v,
              d$prime,
              r$prime,
              param[4]
            ];
    } else {
      return /* Empty */0;
    }
  };
  var fold = function (f, _m, _accu) {
    while(true) {
      var accu = _accu;
      var m = _m;
      if (m) {
        _accu = Curry._3(f, m[1], m[2], fold(f, m[0], accu));
        _m = m[3];
        continue ;
        
      } else {
        return accu;
      }
    };
  };
  var for_all = function (p, _param) {
    while(true) {
      var param = _param;
      if (param) {
        if (Curry._2(p, param[1], param[2])) {
          if (for_all(p, param[0])) {
            _param = param[3];
            continue ;
            
          } else {
            return /* false */0;
          }
        } else {
          return /* false */0;
        }
      } else {
        return /* true */1;
      }
    };
  };
  var exists = function (p, _param) {
    while(true) {
      var param = _param;
      if (param) {
        if (Curry._2(p, param[1], param[2])) {
          return /* true */1;
        } else if (exists(p, param[0])) {
          return /* true */1;
        } else {
          _param = param[3];
          continue ;
          
        }
      } else {
        return /* false */0;
      }
    };
  };
  var add_min_binding = function (k, v, param) {
    if (param) {
      return bal(add_min_binding(k, v, param[0]), param[1], param[2], param[3]);
    } else {
      return singleton(k, v);
    }
  };
  var add_max_binding = function (k, v, param) {
    if (param) {
      return bal(param[0], param[1], param[2], add_max_binding(k, v, param[3]));
    } else {
      return singleton(k, v);
    }
  };
  var join = function (l, v, d, r) {
    if (l) {
      if (r) {
        var rh = r[4];
        var lh = l[4];
        if (lh > (rh + 2 | 0)) {
          return bal(l[0], l[1], l[2], join(l[3], v, d, r));
        } else if (rh > (lh + 2 | 0)) {
          return bal(join(l, v, d, r[0]), r[1], r[2], r[3]);
        } else {
          return create(l, v, d, r);
        }
      } else {
        return add_max_binding(v, d, l);
      }
    } else {
      return add_min_binding(v, d, r);
    }
  };
  var concat = function (t1, t2) {
    if (t1) {
      if (t2) {
        var match = min_binding(t2);
        return join(t1, match[0], match[1], remove_min_binding(t2));
      } else {
        return t1;
      }
    } else {
      return t2;
    }
  };
  var concat_or_join = function (t1, v, d, t2) {
    if (d) {
      return join(t1, v, d[0], t2);
    } else {
      return concat(t1, t2);
    }
  };
  var split = function (x, param) {
    if (param) {
      var r = param[3];
      var d = param[2];
      var v = param[1];
      var l = param[0];
      var c = Curry._2(funarg[/* compare */0], x, v);
      if (c) {
        if (c < 0) {
          var match = split(x, l);
          return /* tuple */[
                  match[0],
                  match[1],
                  join(match[2], v, d, r)
                ];
        } else {
          var match$1 = split(x, r);
          return /* tuple */[
                  join(l, v, d, match$1[0]),
                  match$1[1],
                  match$1[2]
                ];
        }
      } else {
        return /* tuple */[
                l,
                /* Some */[d],
                r
              ];
      }
    } else {
      return /* tuple */[
              /* Empty */0,
              /* None */0,
              /* Empty */0
            ];
    }
  };
  var merge = function (f, s1, s2) {
    var exit = 0;
    if (s1) {
      var v1 = s1[1];
      if (s1[4] >= height(s2)) {
        var match = split(v1, s2);
        return concat_or_join(merge(f, s1[0], match[0]), v1, Curry._3(f, v1, /* Some */[s1[2]], match[1]), merge(f, s1[3], match[2]));
      } else {
        exit = 1;
      }
    } else if (s2) {
      exit = 1;
    } else {
      return /* Empty */0;
    }
    if (exit === 1) {
      if (s2) {
        var v2 = s2[1];
        var match$1 = split(v2, s1);
        return concat_or_join(merge(f, match$1[0], s2[0]), v2, Curry._3(f, v2, match$1[1], /* Some */[s2[2]]), merge(f, match$1[2], s2[3]));
      } else {
        throw [
              Caml_builtin_exceptions.assert_failure,
              [
                "map.ml",
                270,
                10
              ]
            ];
      }
    }
    
  };
  var filter = function (p, param) {
    if (param) {
      var d = param[2];
      var v = param[1];
      var l$prime = filter(p, param[0]);
      var pvd = Curry._2(p, v, d);
      var r$prime = filter(p, param[3]);
      if (pvd) {
        return join(l$prime, v, d, r$prime);
      } else {
        return concat(l$prime, r$prime);
      }
    } else {
      return /* Empty */0;
    }
  };
  var partition = function (p, param) {
    if (param) {
      var d = param[2];
      var v = param[1];
      var match = partition(p, param[0]);
      var lf = match[1];
      var lt = match[0];
      var pvd = Curry._2(p, v, d);
      var match$1 = partition(p, param[3]);
      var rf = match$1[1];
      var rt = match$1[0];
      if (pvd) {
        return /* tuple */[
                join(lt, v, d, rt),
                concat(lf, rf)
              ];
      } else {
        return /* tuple */[
                concat(lt, rt),
                join(lf, v, d, rf)
              ];
      }
    } else {
      return /* tuple */[
              /* Empty */0,
              /* Empty */0
            ];
    }
  };
  var cons_enum = function (_m, _e) {
    while(true) {
      var e = _e;
      var m = _m;
      if (m) {
        _e = /* More */[
          m[1],
          m[2],
          m[3],
          e
        ];
        _m = m[0];
        continue ;
        
      } else {
        return e;
      }
    };
  };
  var compare = function (cmp, m1, m2) {
    var _e1 = cons_enum(m1, /* End */0);
    var _e2 = cons_enum(m2, /* End */0);
    while(true) {
      var e2 = _e2;
      var e1 = _e1;
      if (e1) {
        if (e2) {
          var c = Curry._2(funarg[/* compare */0], e1[0], e2[0]);
          if (c !== 0) {
            return c;
          } else {
            var c$1 = Curry._2(cmp, e1[1], e2[1]);
            if (c$1 !== 0) {
              return c$1;
            } else {
              _e2 = cons_enum(e2[2], e2[3]);
              _e1 = cons_enum(e1[2], e1[3]);
              continue ;
              
            }
          }
        } else {
          return 1;
        }
      } else if (e2) {
        return -1;
      } else {
        return 0;
      }
    };
  };
  var equal = function (cmp, m1, m2) {
    var _e1 = cons_enum(m1, /* End */0);
    var _e2 = cons_enum(m2, /* End */0);
    while(true) {
      var e2 = _e2;
      var e1 = _e1;
      if (e1) {
        if (e2) {
          if (Curry._2(funarg[/* compare */0], e1[0], e2[0])) {
            return /* false */0;
          } else if (Curry._2(cmp, e1[1], e2[1])) {
            _e2 = cons_enum(e2[2], e2[3]);
            _e1 = cons_enum(e1[2], e1[3]);
            continue ;
            
          } else {
            return /* false */0;
          }
        } else {
          return /* false */0;
        }
      } else if (e2) {
        return /* false */0;
      } else {
        return /* true */1;
      }
    };
  };
  var cardinal = function (param) {
    if (param) {
      return (cardinal(param[0]) + 1 | 0) + cardinal(param[3]) | 0;
    } else {
      return 0;
    }
  };
  var bindings_aux = function (_accu, _param) {
    while(true) {
      var param = _param;
      var accu = _accu;
      if (param) {
        _param = param[0];
        _accu = /* :: */[
          /* tuple */[
            param[1],
            param[2]
          ],
          bindings_aux(accu, param[3])
        ];
        continue ;
        
      } else {
        return accu;
      }
    };
  };
  var bindings = function (s) {
    return bindings_aux(/* [] */0, s);
  };
  return [
          /* Empty */0,
          is_empty,
          mem,
          add,
          singleton,
          remove,
          merge,
          compare,
          equal,
          iter,
          fold,
          for_all,
          exists,
          filter,
          partition,
          cardinal,
          bindings,
          min_binding,
          max_binding,
          min_binding,
          split,
          find,
          map,
          mapi
        ];
}

exports.Make = Make;
/* No side effect */


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_builtin_exceptions = __webpack_require__(4);

function caml_array_sub(x, offset, len) {
  var result = new Array(len);
  var j = 0;
  var i = offset;
  while(j < len) {
    result[j] = x[i];
    j = j + 1 | 0;
    i = i + 1 | 0;
  };
  return result;
}

function len(_acc, _l) {
  while(true) {
    var l = _l;
    var acc = _acc;
    if (l) {
      _l = l[1];
      _acc = l[0].length + acc | 0;
      continue ;
      
    } else {
      return acc;
    }
  };
}

function fill(arr, _i, _l) {
  while(true) {
    var l = _l;
    var i = _i;
    if (l) {
      var x = l[0];
      var l$1 = x.length;
      var k = i;
      var j = 0;
      while(j < l$1) {
        arr[k] = x[j];
        k = k + 1 | 0;
        j = j + 1 | 0;
      };
      _l = l[1];
      _i = k;
      continue ;
      
    } else {
      return /* () */0;
    }
  };
}

function caml_array_concat(l) {
  var v = len(0, l);
  var result = new Array(v);
  fill(result, 0, l);
  return result;
}

function caml_array_set(xs, index, newval) {
  if (index < 0 || index >= xs.length) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "index out of bounds"
        ];
  } else {
    xs[index] = newval;
    return /* () */0;
  }
}

function caml_array_get(xs, index) {
  if (index < 0 || index >= xs.length) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "index out of bounds"
        ];
  } else {
    return xs[index];
  }
}

function caml_make_vect(len, init) {
  var b = new Array(len);
  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
    b[i] = init;
  }
  return b;
}

function caml_array_blit(a1, i1, a2, i2, len) {
  if (i2 <= i1) {
    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){
      a2[j + i2 | 0] = a1[j + i1 | 0];
    }
    return /* () */0;
  } else {
    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){
      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];
    }
    return /* () */0;
  }
}

exports.caml_array_sub    = caml_array_sub;
exports.caml_array_concat = caml_array_concat;
exports.caml_make_vect    = caml_make_vect;
exports.caml_array_blit   = caml_array_blit;
exports.caml_array_get    = caml_array_get;
exports.caml_array_set    = caml_array_set;
/* No side effect */


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var List        = __webpack_require__(30);
var Bytes       = __webpack_require__(95);
var Caml_int32  = __webpack_require__(22);
var Caml_string = __webpack_require__(23);

function make(n, c) {
  return Caml_string.bytes_to_string(Bytes.make(n, c));
}

function init(n, f) {
  return Caml_string.bytes_to_string(Bytes.init(n, f));
}

function copy(s) {
  return Caml_string.bytes_to_string(Bytes.copy(Caml_string.bytes_of_string(s)));
}

function sub(s, ofs, len) {
  return Caml_string.bytes_to_string(Bytes.sub(Caml_string.bytes_of_string(s), ofs, len));
}

function concat(sep, l) {
  if (l) {
    var hd = l[0];
    var num = [0];
    var len = [0];
    List.iter((function (s) {
            num[0] = num[0] + 1 | 0;
            len[0] = len[0] + s.length | 0;
            return /* () */0;
          }), l);
    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);
    Caml_string.caml_blit_string(hd, 0, r, 0, hd.length);
    var pos = [hd.length];
    List.iter((function (s) {
            Caml_string.caml_blit_string(sep, 0, r, pos[0], sep.length);
            pos[0] = pos[0] + sep.length | 0;
            Caml_string.caml_blit_string(s, 0, r, pos[0], s.length);
            pos[0] = pos[0] + s.length | 0;
            return /* () */0;
          }), l[1]);
    return Caml_string.bytes_to_string(r);
  } else {
    return "";
  }
}

function iter(f, s) {
  return Bytes.iter(f, Caml_string.bytes_of_string(s));
}

function iteri(f, s) {
  return Bytes.iteri(f, Caml_string.bytes_of_string(s));
}

function map(f, s) {
  return Caml_string.bytes_to_string(Bytes.map(f, Caml_string.bytes_of_string(s)));
}

function mapi(f, s) {
  return Caml_string.bytes_to_string(Bytes.mapi(f, Caml_string.bytes_of_string(s)));
}

function is_space(param) {
  var switcher = param - 9 | 0;
  if (switcher > 4 || switcher < 0) {
    if (switcher !== 23) {
      return /* false */0;
    } else {
      return /* true */1;
    }
  } else if (switcher !== 2) {
    return /* true */1;
  } else {
    return /* false */0;
  }
}

function trim(s) {
  if (s === "" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {
    return s;
  } else {
    return Caml_string.bytes_to_string(Bytes.trim(Caml_string.bytes_of_string(s)));
  }
}

function escaped(s) {
  var needs_escape = function (_i) {
    while(true) {
      var i = _i;
      if (i >= s.length) {
        return /* false */0;
      } else {
        var match = s.charCodeAt(i);
        if (match >= 32) {
          var switcher = match - 34 | 0;
          if (switcher > 58 || switcher < 0) {
            if (switcher >= 93) {
              return /* true */1;
            } else {
              _i = i + 1 | 0;
              continue ;
              
            }
          } else if (switcher > 57 || switcher < 1) {
            return /* true */1;
          } else {
            _i = i + 1 | 0;
            continue ;
            
          }
        } else {
          return /* true */1;
        }
      }
    };
  };
  if (needs_escape(0)) {
    return Caml_string.bytes_to_string(Bytes.escaped(Caml_string.bytes_of_string(s)));
  } else {
    return s;
  }
}

function index(s, c) {
  return Bytes.index(Caml_string.bytes_of_string(s), c);
}

function rindex(s, c) {
  return Bytes.rindex(Caml_string.bytes_of_string(s), c);
}

function index_from(s, i, c) {
  return Bytes.index_from(Caml_string.bytes_of_string(s), i, c);
}

function rindex_from(s, i, c) {
  return Bytes.rindex_from(Caml_string.bytes_of_string(s), i, c);
}

function contains(s, c) {
  return Bytes.contains(Caml_string.bytes_of_string(s), c);
}

function contains_from(s, i, c) {
  return Bytes.contains_from(Caml_string.bytes_of_string(s), i, c);
}

function rcontains_from(s, i, c) {
  return Bytes.rcontains_from(Caml_string.bytes_of_string(s), i, c);
}

function uppercase(s) {
  return Caml_string.bytes_to_string(Bytes.uppercase(Caml_string.bytes_of_string(s)));
}

function lowercase(s) {
  return Caml_string.bytes_to_string(Bytes.lowercase(Caml_string.bytes_of_string(s)));
}

function capitalize(s) {
  return Caml_string.bytes_to_string(Bytes.capitalize(Caml_string.bytes_of_string(s)));
}

function uncapitalize(s) {
  return Caml_string.bytes_to_string(Bytes.uncapitalize(Caml_string.bytes_of_string(s)));
}

var compare = Caml_string.caml_string_compare;

var fill = Bytes.fill;

var blit = Bytes.blit_string;

exports.make           = make;
exports.init           = init;
exports.copy           = copy;
exports.sub            = sub;
exports.fill           = fill;
exports.blit           = blit;
exports.concat         = concat;
exports.iter           = iter;
exports.iteri          = iteri;
exports.map            = map;
exports.mapi           = mapi;
exports.trim           = trim;
exports.escaped        = escaped;
exports.index          = index;
exports.rindex         = rindex;
exports.index_from     = index_from;
exports.rindex_from    = rindex_from;
exports.contains       = contains;
exports.contains_from  = contains_from;
exports.rcontains_from = rcontains_from;
exports.uppercase      = uppercase;
exports.lowercase      = lowercase;
exports.capitalize     = capitalize;
exports.uncapitalize   = uncapitalize;
exports.compare        = compare;
/* No side effect */


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var repeat = ( (String.prototype.repeat && function (count,self){return self.repeat(count)}) ||
                                                  function(count , self) {
        if (self.length == 0 || count == 0) {
            return '';
        }
        // Ensuring count is a 31-bit integer allows us to heavily optimize the
        // main part. But anyway, most current (August 2014) browsers can't handle
        // strings 1 << 28 chars or longer, so:
        if (self.length * count >= 1 << 28) {
            throw new RangeError('repeat count must not overflow maximum string size');
        }
        var rpt = '';
        for (;;) {
            if ((count & 1) == 1) {
                rpt += self;
            }
            count >>>= 1;
            if (count == 0) {
                break;
            }
            self += self;
        }
        return rpt;
    }
);

exports.repeat = repeat;
/* repeat Not a pure module */


/***/ }),
/* 50 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 51 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(14)
exports.createHash = exports.Hash = __webpack_require__(15)
exports.createHmac = exports.Hmac = __webpack_require__(60)

var algos = __webpack_require__(124)
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = __webpack_require__(62)
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = __webpack_require__(126)

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = __webpack_require__(145)

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = __webpack_require__(151)

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = __webpack_require__(189)

var publicEncrypt = __webpack_require__(190)

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var processNextTick = __webpack_require__(25);
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(50);
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(36).EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(55);
/*</replacement>*/

// TODO(bmeurer): Change this back to const once hole checks are
// properly optimized away early in Ignition+TurboFan.
/*<replacement>*/
var Buffer = __webpack_require__(2).Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(16);
util.inherits = __webpack_require__(0);
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(109);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(110);
var destroyImpl = __webpack_require__(56);
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') {
    return emitter.prependListener(event, fn);
  } else {
    // This is a hack to make sure that our error handler is attached before any
    // userland ones.  NEVER DO THIS. This is here only because this code needs
    // to continue to work with older versions of Node.js that do not include
    // the prependListener() method. The goal is to eventually remove this hack.
    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
  }
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(12);

  options = options || {};

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(39).StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(12);

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(39).StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], self.emit.bind(self, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(7)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(36).EventEmitter;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var processNextTick = __webpack_require__(25);
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(12);

/*<replacement>*/
var util = __webpack_require__(16);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(Transform, Duplex);

function TransformState(stream) {
  this.afterTransform = function (er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
  this.writeencoding = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return stream.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined) stream.push(data);

  cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = new TransformState(this);

  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.once('prefinish', function () {
    if (typeof this._flush === 'function') this._flush(function (er, data) {
      done(stream, er, data);
    });else done(stream);
  });
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data !== null && data !== undefined) stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var ts = stream._transformState;

  if (ws.length) throw new Error('Calling transform done when ws.length != 0');

  if (ts.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(0)
var Legacy = __webpack_require__(123)
var Base = __webpack_require__(11)
var Buffer = __webpack_require__(2).Buffer
var md5 = __webpack_require__(34)
var RIPEMD160 = __webpack_require__(35)

var sha = __webpack_require__(40)

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = {"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {


exports.pbkdf2 = __webpack_require__(125)

exports.pbkdf2Sync = __webpack_require__(65)


/***/ }),
/* 63 */
/***/ (function(module, exports) {

var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs
module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var md5 = __webpack_require__(34)
var rmd160 = __webpack_require__(35)
var sha = __webpack_require__(40)

var checkParameters = __webpack_require__(63)
var defaultEncoding = __webpack_require__(64)
var Buffer = __webpack_require__(2).Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(17)
var Buffer = __webpack_require__(2).Buffer
var incr32 = __webpack_require__(67)

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),
/* 67 */
/***/ (function(module, exports) {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = {"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(27)
var Buffer = __webpack_require__(2).Buffer
var Transform = __webpack_require__(11)
var inherits = __webpack_require__(0)
var GHASH = __webpack_require__(136)
var xor = __webpack_require__(17)
var incr32 = __webpack_require__(67)

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(27)
var Buffer = __webpack_require__(2).Buffer
var Transform = __webpack_require__(11)
var inherits = __webpack_require__(0)

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var randomBytes = __webpack_require__(14);
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(3);
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(72);
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

var bn = __webpack_require__(3);
var brorand = __webpack_require__(73);

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(148);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var common = __webpack_require__(18);
var shaCommon = __webpack_require__(75);
var assert = __webpack_require__(6);

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var common = __webpack_require__(18);
var assert = __webpack_require__(6);

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);
var Reporter = __webpack_require__(20).Reporter;
var Buffer = __webpack_require__(1).Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(180);


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);

var asn1 = __webpack_require__(19);
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);
var Buffer = __webpack_require__(1).Buffer;

var asn1 = __webpack_require__(19);
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports = {"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(15);
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 84 */
/***/ (function(module, exports) {

module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(3);
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE


var Tezos_rpc    = __webpack_require__(87);
var Tezos_crypto = __webpack_require__(102);

var v = Promise.resolve("x");

var output = Tezos_rpc.blocks(/* () */0);

var key = Tezos_crypto.generateKeyNoSeed(/* () */0);

var main = /* tuple */[
  output,
  key
];

Tezos_crypto.ready.then((function () {
        return Promise.resolve((console.log(main), /* () */0));
      }));

exports.v    = v;
exports.main = main;
/* v Not a pure module */


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE


var Node = __webpack_require__(88);

function blocks() {
  return Node.query("/blocks/head", /* EmptyBody */0);
}

function getBalance(pkh) {
  var endpoint = "/blocks/prevalidation/proto/context/contracts/" + (pkh + "/balance");
  return Node.query(endpoint, /* EmptyBody */0);
}

exports.blocks     = blocks;
exports.getBalance = getBalance;
/* Node Not a pure module */


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE


var $$Map              = __webpack_require__(46);
var $$String           = __webpack_require__(48);
var Web_xmlhttprequest = __webpack_require__(97);

var StringMap = $$Map.Make([$$String.compare]);

function query(endpoint, body) {
  var xhr = new XMLHttpRequest();
  Web_xmlhttprequest.open_("POST", "https://tezrpc.me/api" + endpoint, /* None */0, /* None */0, /* None */0, xhr);
  Web_xmlhttprequest.set_onload((function () {
          var match = Web_xmlhttprequest.getAllResponseHeadersAsDict(xhr);
          var headers;
          headers = match.tag ? StringMap[/* empty */0] : match[0];
          var response_000 = /* url */Web_xmlhttprequest.get_responseURL(xhr);
          var response_001 = /* status : record */[
            /* code */Web_xmlhttprequest.get_status(xhr),
            /* message */Web_xmlhttprequest.get_statusText(xhr)
          ];
          var response_003 = /* body */Web_xmlhttprequest.get_response(xhr);
          var response = /* record */[
            response_000,
            response_001,
            /* headers */headers,
            response_003
          ];
          console.log(response);
          return /* () */0;
        }), xhr);
  return Web_xmlhttprequest.send(body, xhr);
}

exports.StringMap = StringMap;
exports.query     = query;
/* StringMap Not a pure module */


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var Curry                   = __webpack_require__(9);
var Caml_builtin_exceptions = __webpack_require__(4);

function $caret(prim, prim$1) {
  return prim + prim$1;
}

var stdin = undefined;

var stdout = /* record */[
  /* buffer */"",
  /* output */(function (_, s) {
      var v = s.length - 1 | 0;
      if (( (typeof process !== "undefined") && process.stdout && process.stdout.write)) {
        return ( process.stdout.write )(s);
      } else if (s[v] === "\n") {
        console.log(s.slice(0, v));
        return /* () */0;
      } else {
        console.log(s);
        return /* () */0;
      }
    })
];

var stderr = /* record */[
  /* buffer */"",
  /* output */(function (_, s) {
      var v = s.length - 1 | 0;
      if (s[v] === "\n") {
        console.log(s.slice(0, v));
        return /* () */0;
      } else {
        console.log(s);
        return /* () */0;
      }
    })
];

function caml_ml_open_descriptor_in() {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_ml_open_descriptor_in not implemented"
      ];
}

function caml_ml_open_descriptor_out() {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_ml_open_descriptor_out not implemented"
      ];
}

function caml_ml_flush(oc) {
  if (oc[/* buffer */0] !== "") {
    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);
    oc[/* buffer */0] = "";
    return /* () */0;
  } else {
    return 0;
  }
}

var node_std_output = (function (s){
   return (typeof process !== "undefined") && process.stdout && (process.stdout.write(s), true);
   }
);

function caml_ml_output(oc, str, offset, len) {
  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);
  if (( (typeof process !== "undefined") && process.stdout && process.stdout.write ) && oc === stdout) {
    return ( process.stdout.write )(str$1);
  } else {
    var id = str$1.lastIndexOf("\n");
    if (id < 0) {
      oc[/* buffer */0] = oc[/* buffer */0] + str$1;
      return /* () */0;
    } else {
      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);
      caml_ml_flush(oc);
      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);
      return /* () */0;
    }
  }
}

function caml_ml_output_char(oc, $$char) {
  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);
}

function caml_ml_input(_, _$1, _$2, _$3) {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_ml_input ic not implemented"
      ];
}

function caml_ml_input_char() {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_ml_input_char not implemnted"
      ];
}

function caml_ml_out_channels_list() {
  return /* :: */[
          stdout,
          /* :: */[
            stderr,
            /* [] */0
          ]
        ];
}

exports.$caret                      = $caret;
exports.stdin                       = stdin;
exports.stdout                      = stdout;
exports.stderr                      = stderr;
exports.caml_ml_open_descriptor_in  = caml_ml_open_descriptor_in;
exports.caml_ml_open_descriptor_out = caml_ml_open_descriptor_out;
exports.caml_ml_flush               = caml_ml_flush;
exports.node_std_output             = node_std_output;
exports.caml_ml_output              = caml_ml_output;
exports.caml_ml_output_char         = caml_ml_output_char;
exports.caml_ml_input               = caml_ml_input;
exports.caml_ml_input_char          = caml_ml_input_char;
exports.caml_ml_out_channels_list   = caml_ml_out_channels_list;
/* stdin Not a pure module */

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var Caml_builtin_exceptions = __webpack_require__(4);

function caml_sys_getenv(s) {
  var match = typeof (process) === "undefined" ? undefined : (process);
  if (match !== undefined) {
    var match$1 = match.env[s];
    if (match$1 !== undefined) {
      return match$1;
    } else {
      throw Caml_builtin_exceptions.not_found;
    }
  } else {
    throw Caml_builtin_exceptions.not_found;
  }
}

function caml_sys_time() {
  var match = typeof (process) === "undefined" ? undefined : (process);
  if (match !== undefined) {
    return match.uptime();
  } else {
    return -1;
  }
}

function caml_sys_random_seed() {
  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];
}

function caml_sys_system_command() {
  return 127;
}

function caml_sys_getcwd() {
  var match = typeof (process) === "undefined" ? undefined : (process);
  if (match !== undefined) {
    return match.cwd();
  } else {
    return "/";
  }
}

function caml_sys_get_argv() {
  var match = typeof (process) === "undefined" ? undefined : (process);
  if (match !== undefined) {
    return /* tuple */[
            match.argv[0],
            match.argv
          ];
  } else {
    return /* tuple */[
            "",
            /* array */[""]
          ];
  }
}

function caml_sys_exit(exit_code) {
  var match = typeof (process) === "undefined" ? undefined : (process);
  if (match !== undefined) {
    return match.exit(exit_code);
  } else {
    return /* () */0;
  }
}

function caml_sys_is_directory() {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_sys_is_directory not implemented"
      ];
}

function caml_sys_file_exists() {
  throw [
        Caml_builtin_exceptions.failure,
        "caml_sys_file_exists not implemented"
      ];
}

exports.caml_sys_getenv         = caml_sys_getenv;
exports.caml_sys_time           = caml_sys_time;
exports.caml_sys_random_seed    = caml_sys_random_seed;
exports.caml_sys_system_command = caml_sys_system_command;
exports.caml_sys_getcwd         = caml_sys_getcwd;
exports.caml_sys_get_argv       = caml_sys_get_argv;
exports.caml_sys_exit           = caml_sys_exit;
exports.caml_sys_is_directory   = caml_sys_is_directory;
exports.caml_sys_file_exists    = caml_sys_file_exists;
/* No side effect */

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Curry                   = __webpack_require__(9);
var Caml_int32              = __webpack_require__(22);
var Caml_int64              = __webpack_require__(92);
var Caml_utils              = __webpack_require__(49);
var Caml_builtin_exceptions = __webpack_require__(4);

function caml_failwith(s) {
  throw [
        Caml_builtin_exceptions.failure,
        s
      ];
}

function parse_digit(c) {
  if (c >= 65) {
    if (c >= 97) {
      if (c >= 123) {
        return -1;
      } else {
        return c - 87 | 0;
      }
    } else if (c >= 91) {
      return -1;
    } else {
      return c - 55 | 0;
    }
  } else if (c > 57 || c < 48) {
    return -1;
  } else {
    return c - /* "0" */48 | 0;
  }
}

function int_of_string_base(param) {
  switch (param) {
    case 0 : 
        return 8;
    case 1 : 
        return 16;
    case 2 : 
        return 10;
    case 3 : 
        return 2;
    
  }
}

function parse_sign_and_base(s) {
  var sign = 1;
  var base = /* Dec */2;
  var i = 0;
  if (s[i] === "-") {
    sign = -1;
    i = i + 1 | 0;
  }
  var match = s.charCodeAt(i);
  var match$1 = s.charCodeAt(i + 1 | 0);
  if (match === 48) {
    if (match$1 >= 89) {
      if (match$1 !== 98) {
        if (match$1 !== 111) {
          if (match$1 === 120) {
            base = /* Hex */1;
            i = i + 2 | 0;
          }
          
        } else {
          base = /* Oct */0;
          i = i + 2 | 0;
        }
      } else {
        base = /* Bin */3;
        i = i + 2 | 0;
      }
    } else if (match$1 !== 66) {
      if (match$1 !== 79) {
        if (match$1 >= 88) {
          base = /* Hex */1;
          i = i + 2 | 0;
        }
        
      } else {
        base = /* Oct */0;
        i = i + 2 | 0;
      }
    } else {
      base = /* Bin */3;
      i = i + 2 | 0;
    }
  }
  return /* tuple */[
          i,
          sign,
          base
        ];
}

function caml_int_of_string(s) {
  var match = parse_sign_and_base(s);
  var i = match[0];
  var base = int_of_string_base(match[2]);
  var threshold = 4294967295;
  var len = s.length;
  var c = i < len ? s.charCodeAt(i) : /* "\000" */0;
  var d = parse_digit(c);
  if (d < 0 || d >= base) {
    throw [
          Caml_builtin_exceptions.failure,
          "int_of_string"
        ];
  }
  var aux = function (_acc, _k) {
    while(true) {
      var k = _k;
      var acc = _acc;
      if (k === len) {
        return acc;
      } else {
        var a = s.charCodeAt(k);
        if (a === /* "_" */95) {
          _k = k + 1 | 0;
          continue ;
          
        } else {
          var v = parse_digit(a);
          if (v < 0 || v >= base) {
            throw [
                  Caml_builtin_exceptions.failure,
                  "int_of_string"
                ];
          } else {
            var acc$1 = base * acc + v;
            if (acc$1 > threshold) {
              throw [
                    Caml_builtin_exceptions.failure,
                    "int_of_string"
                  ];
            } else {
              _k = k + 1 | 0;
              _acc = acc$1;
              continue ;
              
            }
          }
        }
      }
    };
  };
  var res = match[1] * aux(d, i + 1 | 0);
  var or_res = res | 0;
  if (base === 10 && res !== or_res) {
    throw [
          Caml_builtin_exceptions.failure,
          "int_of_string"
        ];
  }
  return or_res;
}

function caml_int64_of_string(s) {
  var match = parse_sign_and_base(s);
  var hbase = match[2];
  var i = match[0];
  var base = Caml_int64.of_int32(int_of_string_base(hbase));
  var sign = Caml_int64.of_int32(match[1]);
  var threshold;
  switch (hbase) {
    case 0 : 
        threshold = /* int64 */[
          /* hi */536870911,
          /* lo */4294967295
        ];
        break;
    case 1 : 
        threshold = /* int64 */[
          /* hi */268435455,
          /* lo */4294967295
        ];
        break;
    case 2 : 
        threshold = /* int64 */[
          /* hi */429496729,
          /* lo */2576980377
        ];
        break;
    case 3 : 
        threshold = /* int64 */[
          /* hi */2147483647,
          /* lo */4294967295
        ];
        break;
    
  }
  var len = s.length;
  var c = i < len ? s.charCodeAt(i) : /* "\000" */0;
  var d = Caml_int64.of_int32(parse_digit(c));
  if (Caml_int64.lt(d, /* int64 */[
          /* hi */0,
          /* lo */0
        ]) || Caml_int64.ge(d, base)) {
    throw [
          Caml_builtin_exceptions.failure,
          "int64_of_string"
        ];
  }
  var aux = function (_acc, _k) {
    while(true) {
      var k = _k;
      var acc = _acc;
      if (k === len) {
        return acc;
      } else {
        var a = s.charCodeAt(k);
        if (a === /* "_" */95) {
          _k = k + 1 | 0;
          continue ;
          
        } else {
          var v = Caml_int64.of_int32(parse_digit(a));
          if (Caml_int64.lt(v, /* int64 */[
                  /* hi */0,
                  /* lo */0
                ]) || Caml_int64.ge(v, base) || Caml_int64.gt(acc, threshold)) {
            throw [
                  Caml_builtin_exceptions.failure,
                  "int64_of_string"
                ];
          } else {
            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);
            _k = k + 1 | 0;
            _acc = acc$1;
            continue ;
            
          }
        }
      }
    };
  };
  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));
  var or_res = Caml_int64.or_(res, /* int64 */[
        /* hi */0,
        /* lo */0
      ]);
  if (Caml_int64.eq(base, /* int64 */[
          /* hi */0,
          /* lo */10
        ]) && Caml_int64.neq(res, or_res)) {
    throw [
          Caml_builtin_exceptions.failure,
          "int64_of_string"
        ];
  }
  return or_res;
}

function int_of_base(param) {
  switch (param) {
    case 0 : 
        return 8;
    case 1 : 
        return 16;
    case 2 : 
        return 10;
    
  }
}

function lowercase(c) {
  if (c >= /* "A" */65 && c <= /* "Z" */90 || c >= /* "\192" */192 && c <= /* "\214" */214 || c >= /* "\216" */216 && c <= /* "\222" */222) {
    return c + 32 | 0;
  } else {
    return c;
  }
}

function parse_format(fmt) {
  var len = fmt.length;
  if (len > 31) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "format_int: format too long"
        ];
  }
  var f = /* record */[
    /* justify */"+",
    /* signstyle */"-",
    /* filter */" ",
    /* alternate : false */0,
    /* base : Dec */2,
    /* signedconv : false */0,
    /* width */0,
    /* uppercase : false */0,
    /* sign */1,
    /* prec */-1,
    /* conv */"f"
  ];
  var _i = 0;
  while(true) {
    var i = _i;
    if (i >= len) {
      return f;
    } else {
      var c = fmt.charCodeAt(i);
      var exit = 0;
      if (c >= 69) {
        if (c >= 88) {
          if (c >= 121) {
            exit = 1;
          } else {
            switch (c - 88 | 0) {
              case 0 : 
                  f[/* base */4] = /* Hex */1;
                  f[/* uppercase */7] = /* true */1;
                  _i = i + 1 | 0;
                  continue ;
                  case 13 : 
              case 14 : 
              case 15 : 
                  exit = 5;
                  break;
              case 12 : 
              case 17 : 
                  exit = 4;
                  break;
              case 23 : 
                  f[/* base */4] = /* Oct */0;
                  _i = i + 1 | 0;
                  continue ;
                  case 29 : 
                  f[/* base */4] = /* Dec */2;
                  _i = i + 1 | 0;
                  continue ;
                  case 1 : 
              case 2 : 
              case 3 : 
              case 4 : 
              case 5 : 
              case 6 : 
              case 7 : 
              case 8 : 
              case 9 : 
              case 10 : 
              case 11 : 
              case 16 : 
              case 18 : 
              case 19 : 
              case 20 : 
              case 21 : 
              case 22 : 
              case 24 : 
              case 25 : 
              case 26 : 
              case 27 : 
              case 28 : 
              case 30 : 
              case 31 : 
                  exit = 1;
                  break;
              case 32 : 
                  f[/* base */4] = /* Hex */1;
                  _i = i + 1 | 0;
                  continue ;
                  
            }
          }
        } else if (c >= 72) {
          exit = 1;
        } else {
          f[/* signedconv */5] = /* true */1;
          f[/* uppercase */7] = /* true */1;
          f[/* conv */10] = String.fromCharCode(lowercase(c));
          _i = i + 1 | 0;
          continue ;
          
        }
      } else {
        var switcher = c - 32 | 0;
        if (switcher > 25 || switcher < 0) {
          exit = 1;
        } else {
          switch (switcher) {
            case 3 : 
                f[/* alternate */3] = /* true */1;
                _i = i + 1 | 0;
                continue ;
                case 0 : 
            case 11 : 
                exit = 2;
                break;
            case 13 : 
                f[/* justify */0] = "-";
                _i = i + 1 | 0;
                continue ;
                case 14 : 
                f[/* prec */9] = 0;
                var j = i + 1 | 0;
                while((function(j){
                    return function () {
                      var w = fmt.charCodeAt(j) - /* "0" */48 | 0;
                      return +(w >= 0 && w <= 9);
                    }
                    }(j))()) {
                  f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* "0" */48 | 0;
                  j = j + 1 | 0;
                };
                _i = j;
                continue ;
                case 1 : 
            case 2 : 
            case 4 : 
            case 5 : 
            case 6 : 
            case 7 : 
            case 8 : 
            case 9 : 
            case 10 : 
            case 12 : 
            case 15 : 
                exit = 1;
                break;
            case 16 : 
                f[/* filter */2] = "0";
                _i = i + 1 | 0;
                continue ;
                case 17 : 
            case 18 : 
            case 19 : 
            case 20 : 
            case 21 : 
            case 22 : 
            case 23 : 
            case 24 : 
            case 25 : 
                exit = 3;
                break;
            
          }
        }
      }
      switch (exit) {
        case 1 : 
            _i = i + 1 | 0;
            continue ;
            case 2 : 
            f[/* signstyle */1] = String.fromCharCode(c);
            _i = i + 1 | 0;
            continue ;
            case 3 : 
            f[/* width */6] = 0;
            var j$1 = i;
            while((function(j$1){
                return function () {
                  var w = fmt.charCodeAt(j$1) - /* "0" */48 | 0;
                  return +(w >= 0 && w <= 9);
                }
                }(j$1))()) {
              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* "0" */48 | 0;
              j$1 = j$1 + 1 | 0;
            };
            _i = j$1;
            continue ;
            case 4 : 
            f[/* signedconv */5] = /* true */1;
            f[/* base */4] = /* Dec */2;
            _i = i + 1 | 0;
            continue ;
            case 5 : 
            f[/* signedconv */5] = /* true */1;
            f[/* conv */10] = String.fromCharCode(c);
            _i = i + 1 | 0;
            continue ;
            
      }
    }
  };
}

function finish_formatting(param, rawbuffer) {
  var justify = param[/* justify */0];
  var signstyle = param[/* signstyle */1];
  var filter = param[/* filter */2];
  var alternate = param[/* alternate */3];
  var base = param[/* base */4];
  var signedconv = param[/* signedconv */5];
  var width = param[/* width */6];
  var uppercase = param[/* uppercase */7];
  var sign = param[/* sign */8];
  var len = rawbuffer.length;
  if (signedconv && (sign < 0 || signstyle !== "-")) {
    len = len + 1 | 0;
  }
  if (alternate) {
    if (base) {
      if (base === /* Hex */1) {
        len = len + 2 | 0;
      }
      
    } else {
      len = len + 1 | 0;
    }
  }
  var buffer = "";
  if (justify === "+" && filter === " ") {
    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){
      buffer = buffer + filter;
    }
  }
  if (signedconv) {
    if (sign < 0) {
      buffer = buffer + "-";
    } else if (signstyle !== "-") {
      buffer = buffer + signstyle;
    }
    
  }
  if (alternate && base === /* Oct */0) {
    buffer = buffer + "0";
  }
  if (alternate && base === /* Hex */1) {
    buffer = buffer + "0x";
  }
  if (justify === "+" && filter === "0") {
    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){
      buffer = buffer + filter;
    }
  }
  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;
  if (justify === "-") {
    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){
      buffer = buffer + " ";
    }
  }
  return buffer;
}

function caml_format_int(fmt, i) {
  if (fmt === "%d") {
    return String(i);
  } else {
    var f = parse_format(fmt);
    var f$1 = f;
    var i$1 = i;
    var i$2 = i$1 < 0 ? (
        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)
      ) : i$1;
    var s = i$2.toString(int_of_base(f$1[/* base */4]));
    if (f$1[/* prec */9] >= 0) {
      f$1[/* filter */2] = " ";
      var n = f$1[/* prec */9] - s.length | 0;
      if (n > 0) {
        s = Caml_utils.repeat(n, "0") + s;
      }
      
    }
    return finish_formatting(f$1, s);
  }
}

function caml_int64_format(fmt, x) {
  var f = parse_format(fmt);
  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[
        /* hi */0,
        /* lo */0
      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;
  var s = "";
  var match = f[/* base */4];
  switch (match) {
    case 0 : 
        var wbase = /* int64 */[
          /* hi */0,
          /* lo */8
        ];
        var cvtbl = "01234567";
        if (Caml_int64.lt(x$1, /* int64 */[
                /* hi */0,
                /* lo */0
              ])) {
          var y = Caml_int64.discard_sign(x$1);
          var match$1 = Caml_int64.div_mod(y, wbase);
          var quotient = Caml_int64.add(/* int64 */[
                /* hi */268435456,
                /* lo */0
              ], match$1[0]);
          var modulus = match$1[1];
          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;
          while(Caml_int64.neq(quotient, /* int64 */[
                  /* hi */0,
                  /* lo */0
                ])) {
            var match$2 = Caml_int64.div_mod(quotient, wbase);
            quotient = match$2[0];
            modulus = match$2[1];
            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;
          };
        } else {
          var match$3 = Caml_int64.div_mod(x$1, wbase);
          var quotient$1 = match$3[0];
          var modulus$1 = match$3[1];
          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;
          while(Caml_int64.neq(quotient$1, /* int64 */[
                  /* hi */0,
                  /* lo */0
                ])) {
            var match$4 = Caml_int64.div_mod(quotient$1, wbase);
            quotient$1 = match$4[0];
            modulus$1 = match$4[1];
            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;
          };
        }
        break;
    case 1 : 
        s = Caml_int64.to_hex(x$1) + s;
        break;
    case 2 : 
        var wbase$1 = /* int64 */[
          /* hi */0,
          /* lo */10
        ];
        var cvtbl$1 = "0123456789";
        if (Caml_int64.lt(x$1, /* int64 */[
                /* hi */0,
                /* lo */0
              ])) {
          var y$1 = Caml_int64.discard_sign(x$1);
          var match$5 = Caml_int64.div_mod(y$1, wbase$1);
          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[
                    /* hi */0,
                    /* lo */8
                  ], match$5[1]), wbase$1);
          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[
                    /* hi */214748364,
                    /* lo */3435973836
                  ], match$5[0]), match$6[0]);
          var modulus$2 = match$6[1];
          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;
          while(Caml_int64.neq(quotient$2, /* int64 */[
                  /* hi */0,
                  /* lo */0
                ])) {
            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);
            quotient$2 = match$7[0];
            modulus$2 = match$7[1];
            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;
          };
        } else {
          var match$8 = Caml_int64.div_mod(x$1, wbase$1);
          var quotient$3 = match$8[0];
          var modulus$3 = match$8[1];
          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;
          while(Caml_int64.neq(quotient$3, /* int64 */[
                  /* hi */0,
                  /* lo */0
                ])) {
            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);
            quotient$3 = match$9[0];
            modulus$3 = match$9[1];
            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;
          };
        }
        break;
    
  }
  if (f[/* prec */9] >= 0) {
    f[/* filter */2] = " ";
    var n = f[/* prec */9] - s.length | 0;
    if (n > 0) {
      s = Caml_utils.repeat(n, "0") + s;
    }
    
  }
  return finish_formatting(f, s);
}

function caml_format_float(fmt, x) {
  var f = parse_format(fmt);
  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];
  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;
  var s = "";
  if (isNaN(x$1)) {
    s = "nan";
    f[/* filter */2] = " ";
  } else if (isFinite(x$1)) {
    var match = f[/* conv */10];
    switch (match) {
      case "e" : 
          s = x$1.toExponential(prec);
          var i = s.length;
          if (s[i - 3 | 0] === "e") {
            s = s.slice(0, i - 1 | 0) + ("0" + s.slice(i - 1 | 0));
          }
          break;
      case "f" : 
          s = x$1.toFixed(prec);
          break;
      case "g" : 
          var prec$1 = prec !== 0 ? prec : 1;
          s = x$1.toExponential(prec$1 - 1 | 0);
          var j = s.indexOf("e");
          var exp = Number(s.slice(j + 1 | 0)) | 0;
          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {
            var i$1 = j - 1 | 0;
            while(s[i$1] === "0") {
              i$1 = i$1 - 1 | 0;
            };
            if (s[i$1] === ".") {
              i$1 = i$1 - 1 | 0;
            }
            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);
            var i$2 = s.length;
            if (s[i$2 - 3 | 0] === "e") {
              s = s.slice(0, i$2 - 1 | 0) + ("0" + s.slice(i$2 - 1 | 0));
            }
            
          } else {
            var p = prec$1;
            if (exp < 0) {
              p = p - (exp + 1 | 0) | 0;
              s = x$1.toFixed(p);
            } else {
              while((function () {
                      s = x$1.toFixed(p);
                      return +(s.length > (prec$1 + 1 | 0));
                    })()) {
                p = p - 1 | 0;
              };
            }
            if (p !== 0) {
              var k = s.length - 1 | 0;
              while(s[k] === "0") {
                k = k - 1 | 0;
              };
              if (s[k] === ".") {
                k = k - 1 | 0;
              }
              s = s.slice(0, k + 1 | 0);
            }
            
          }
          break;
      default:
        
    }
  } else {
    s = "inf";
    f[/* filter */2] = " ";
  }
  return finish_formatting(f, s);
}

var float_of_string = (
  function (s, caml_failwith) {
    var res = +s;
    if ((s.length > 0) && (res === res))
        return res;
    s = s.replace(/_/g, "");
    res = +s;
    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {
        return res;
    }
    ;
    if (/^ *0x[0-9a-f_]+p[+-]?[0-9_]+/i.test(s)) {
        var pidx = s.indexOf('p');
        pidx = (pidx == -1) ? s.indexOf('P') : pidx;
        var exp = +s.substring(pidx + 1);
        res = +s.substring(0, pidx);
        return res * Math.pow(2, exp);
    }
    if (/^\+?inf(inity)?$/i.test(s))
        return Infinity;
    if (/^-inf(inity)?$/i.test(s))
        return -Infinity;
    caml_failwith("float_of_string");
}

);

function caml_float_of_string(s) {
  return Curry._2(float_of_string, s, caml_failwith);
}

var caml_nativeint_format = caml_format_int;

var caml_int32_format = caml_format_int;

var caml_int32_of_string = caml_int_of_string;

var caml_nativeint_of_string = caml_int_of_string;

exports.caml_format_float        = caml_format_float;
exports.caml_format_int          = caml_format_int;
exports.caml_nativeint_format    = caml_nativeint_format;
exports.caml_int32_format        = caml_int32_format;
exports.caml_float_of_string     = caml_float_of_string;
exports.caml_int64_format        = caml_int64_format;
exports.caml_int_of_string       = caml_int_of_string;
exports.caml_int32_of_string     = caml_int32_of_string;
exports.caml_int64_of_string     = caml_int64_of_string;
exports.caml_nativeint_of_string = caml_nativeint_of_string;
/* float_of_string Not a pure module */


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_obj                = __webpack_require__(21);
var Caml_int32              = __webpack_require__(22);
var Caml_utils              = __webpack_require__(49);
var Caml_builtin_exceptions = __webpack_require__(4);

var min_int = /* record */[
  /* hi */-2147483648,
  /* lo */0
];

var max_int = /* record */[
  /* hi */134217727,
  /* lo */1
];

var one = /* record */[
  /* hi */0,
  /* lo */1
];

var zero = /* record */[
  /* hi */0,
  /* lo */0
];

var neg_one = /* record */[
  /* hi */-1,
  /* lo */4294967295
];

function neg_signed(x) {
  return +((x & 2147483648) !== 0);
}

function add(param, param$1) {
  var other_low_ = param$1[/* lo */1];
  var this_low_ = param[/* lo */1];
  var lo = this_low_ + other_low_ & 4294967295;
  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;
  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;
  return /* record */[
          /* hi */hi,
          /* lo */(lo >>> 0)
        ];
}

function not(param) {
  var hi = param[/* hi */0] ^ -1;
  var lo = param[/* lo */1] ^ -1;
  return /* record */[
          /* hi */hi,
          /* lo */(lo >>> 0)
        ];
}

function eq(x, y) {
  if (x[/* hi */0] === y[/* hi */0]) {
    return +(x[/* lo */1] === y[/* lo */1]);
  } else {
    return /* false */0;
  }
}

function neg(x) {
  if (eq(x, min_int)) {
    return min_int;
  } else {
    return add(not(x), one);
  }
}

function sub(x, y) {
  return add(x, neg(y));
}

function lsl_(x, numBits) {
  if (numBits) {
    var lo = x[/* lo */1];
    if (numBits >= 32) {
      return /* record */[
              /* hi */(lo << (numBits - 32 | 0)),
              /* lo */0
            ];
    } else {
      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);
      return /* record */[
              /* hi */hi,
              /* lo */((lo << numBits) >>> 0)
            ];
    }
  } else {
    return x;
  }
}

function lsr_(x, numBits) {
  if (numBits) {
    var hi = x[/* hi */0];
    var offset = numBits - 32 | 0;
    if (offset) {
      if (offset > 0) {
        var lo = (hi >>> offset);
        return /* record */[
                /* hi */0,
                /* lo */(lo >>> 0)
              ];
      } else {
        var hi$1 = (hi >>> numBits);
        var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);
        return /* record */[
                /* hi */hi$1,
                /* lo */(lo$1 >>> 0)
              ];
      }
    } else {
      return /* record */[
              /* hi */0,
              /* lo */(hi >>> 0)
            ];
    }
  } else {
    return x;
  }
}

function asr_(x, numBits) {
  if (numBits) {
    var hi = x[/* hi */0];
    if (numBits < 32) {
      var hi$1 = (hi >> numBits);
      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);
      return /* record */[
              /* hi */hi$1,
              /* lo */(lo >>> 0)
            ];
    } else {
      var lo$1 = (hi >> (numBits - 32 | 0));
      return /* record */[
              /* hi */hi >= 0 ? 0 : -1,
              /* lo */(lo$1 >>> 0)
            ];
    }
  } else {
    return x;
  }
}

function is_zero(param) {
  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {
    return /* false */0;
  } else {
    return /* true */1;
  }
}

function mul(_this, _other) {
  while(true) {
    var other = _other;
    var $$this = _this;
    var exit = 0;
    var lo;
    var this_hi = $$this[/* hi */0];
    var exit$1 = 0;
    var exit$2 = 0;
    var exit$3 = 0;
    if (this_hi !== 0) {
      exit$3 = 4;
    } else if ($$this[/* lo */1] !== 0) {
      exit$3 = 4;
    } else {
      return zero;
    }
    if (exit$3 === 4) {
      if (other[/* hi */0] !== 0) {
        exit$2 = 3;
      } else if (other[/* lo */1] !== 0) {
        exit$2 = 3;
      } else {
        return zero;
      }
    }
    if (exit$2 === 3) {
      if (this_hi !== -2147483648) {
        exit$1 = 2;
      } else if ($$this[/* lo */1] !== 0) {
        exit$1 = 2;
      } else {
        lo = other[/* lo */1];
        exit = 1;
      }
    }
    if (exit$1 === 2) {
      var other_hi = other[/* hi */0];
      var lo$1 = $$this[/* lo */1];
      var exit$4 = 0;
      if (other_hi !== -2147483648) {
        exit$4 = 3;
      } else if (other[/* lo */1] !== 0) {
        exit$4 = 3;
      } else {
        lo = lo$1;
        exit = 1;
      }
      if (exit$4 === 3) {
        var other_lo = other[/* lo */1];
        if (this_hi < 0) {
          if (other_hi < 0) {
            _other = neg(other);
            _this = neg($$this);
            continue ;
            
          } else {
            return neg(mul(neg($$this), other));
          }
        } else if (other_hi < 0) {
          return neg(mul($$this, neg(other)));
        } else {
          var a48 = (this_hi >>> 16);
          var a32 = this_hi & 65535;
          var a16 = (lo$1 >>> 16);
          var a00 = lo$1 & 65535;
          var b48 = (other_hi >>> 16);
          var b32 = other_hi & 65535;
          var b16 = (other_lo >>> 16);
          var b00 = other_lo & 65535;
          var c48 = 0;
          var c32 = 0;
          var c16 = 0;
          var c00 = a00 * b00;
          c16 = (c00 >>> 16) + a16 * b00;
          c32 = (c16 >>> 16);
          c16 = (c16 & 65535) + a00 * b16;
          c32 = c32 + (c16 >>> 16) + a32 * b00;
          c48 = (c32 >>> 16);
          c32 = (c32 & 65535) + a16 * b16;
          c48 += (c32 >>> 16);
          c32 = (c32 & 65535) + a00 * b32;
          c48 += (c32 >>> 16);
          c32 = c32 & 65535;
          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;
          var hi = c32 | (c48 << 16);
          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);
          return /* record */[
                  /* hi */hi,
                  /* lo */(lo$2 >>> 0)
                ];
        }
      }
      
    }
    if (exit === 1) {
      if ((lo & 1) === 0) {
        return zero;
      } else {
        return min_int;
      }
    }
    
  };
}

function swap(param) {
  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);
  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);
  return /* record */[
          /* hi */hi,
          /* lo */(lo >>> 0)
        ];
}

function xor(param, param$1) {
  return /* record */[
          /* hi */param[/* hi */0] ^ param$1[/* hi */0],
          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)
        ];
}

function or_(param, param$1) {
  return /* record */[
          /* hi */param[/* hi */0] | param$1[/* hi */0],
          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)
        ];
}

function and_(param, param$1) {
  return /* record */[
          /* hi */param[/* hi */0] & param$1[/* hi */0],
          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)
        ];
}

function ge(param, param$1) {
  var other_hi = param$1[/* hi */0];
  var hi = param[/* hi */0];
  if (hi > other_hi) {
    return /* true */1;
  } else if (hi < other_hi) {
    return /* false */0;
  } else {
    return +(param[/* lo */1] >= param$1[/* lo */1]);
  }
}

function neq(x, y) {
  return 1 - eq(x, y);
}

function lt(x, y) {
  return 1 - ge(x, y);
}

function gt(x, y) {
  if (x[/* hi */0] > y[/* hi */0]) {
    return /* true */1;
  } else if (x[/* hi */0] < y[/* hi */0]) {
    return /* false */0;
  } else {
    return +(x[/* lo */1] > y[/* lo */1]);
  }
}

function le(x, y) {
  return 1 - gt(x, y);
}

function to_float(param) {
  return param[/* hi */0] * (0x100000000) + param[/* lo */1];
}

var two_ptr_32_dbl = Math.pow(2, 32);

var two_ptr_63_dbl = Math.pow(2, 63);

var neg_two_ptr_63 = -Math.pow(2, 63);

function of_float(x) {
  if (isNaN(x) || !isFinite(x)) {
    return zero;
  } else if (x <= neg_two_ptr_63) {
    return min_int;
  } else if (x + 1 >= two_ptr_63_dbl) {
    return max_int;
  } else if (x < 0) {
    return neg(of_float(-x));
  } else {
    var hi = x / two_ptr_32_dbl | 0;
    var lo = x % two_ptr_32_dbl | 0;
    return /* record */[
            /* hi */hi,
            /* lo */(lo >>> 0)
          ];
  }
}

function div(_self, _other) {
  while(true) {
    var other = _other;
    var self = _self;
    var self_hi = self[/* hi */0];
    var exit = 0;
    var exit$1 = 0;
    if (other[/* hi */0] !== 0) {
      exit$1 = 2;
    } else if (other[/* lo */1] !== 0) {
      exit$1 = 2;
    } else {
      throw Caml_builtin_exceptions.division_by_zero;
    }
    if (exit$1 === 2) {
      if (self_hi !== -2147483648) {
        if (self_hi !== 0) {
          exit = 1;
        } else if (self[/* lo */1] !== 0) {
          exit = 1;
        } else {
          return zero;
        }
      } else if (self[/* lo */1] !== 0) {
        exit = 1;
      } else if (eq(other, one) || eq(other, neg_one)) {
        return self;
      } else if (eq(other, min_int)) {
        return one;
      } else {
        var other_hi = other[/* hi */0];
        var half_this = asr_(self, 1);
        var approx = lsl_(div(half_this, other), 1);
        var exit$2 = 0;
        if (approx[/* hi */0] !== 0) {
          exit$2 = 3;
        } else if (approx[/* lo */1] !== 0) {
          exit$2 = 3;
        } else if (other_hi < 0) {
          return one;
        } else {
          return neg(one);
        }
        if (exit$2 === 3) {
          var y = mul(other, approx);
          var rem = add(self, neg(y));
          return add(approx, div(rem, other));
        }
        
      }
    }
    if (exit === 1) {
      var other_hi$1 = other[/* hi */0];
      var exit$3 = 0;
      if (other_hi$1 !== -2147483648) {
        exit$3 = 2;
      } else if (other[/* lo */1] !== 0) {
        exit$3 = 2;
      } else {
        return zero;
      }
      if (exit$3 === 2) {
        if (self_hi < 0) {
          if (other_hi$1 < 0) {
            _other = neg(other);
            _self = neg(self);
            continue ;
            
          } else {
            return neg(div(neg(self), other));
          }
        } else if (other_hi$1 < 0) {
          return neg(div(self, neg(other)));
        } else {
          var res = zero;
          var rem$1 = self;
          while(ge(rem$1, other)) {
            var approx$1 = Math.max(1, Math.floor(to_float(rem$1) / to_float(other)));
            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);
            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
            var approxRes = of_float(approx$1);
            var approxRem = mul(approxRes, other);
            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {
              approx$1 -= delta;
              approxRes = of_float(approx$1);
              approxRem = mul(approxRes, other);
            };
            if (is_zero(approxRes)) {
              approxRes = one;
            }
            res = add(res, approxRes);
            rem$1 = add(rem$1, neg(approxRem));
          };
          return res;
        }
      }
      
    }
    
  };
}

function mod_(self, other) {
  var y = mul(div(self, other), other);
  return add(self, neg(y));
}

function div_mod(self, other) {
  var quotient = div(self, other);
  var y = mul(quotient, other);
  return /* tuple */[
          quotient,
          add(self, neg(y))
        ];
}

function compare(self, other) {
  var v = Caml_obj.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);
  if (v) {
    return v;
  } else {
    return Caml_obj.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);
  }
}

function of_int32(lo) {
  return /* record */[
          /* hi */lo < 0 ? -1 : 0,
          /* lo */(lo >>> 0)
        ];
}

function to_int32(x) {
  return x[/* lo */1] | 0;
}

function to_hex(x) {
  var aux = function (v) {
    return (v >>> 0).toString(16);
  };
  var match = x[/* hi */0];
  var match$1 = x[/* lo */1];
  var exit = 0;
  if (match !== 0) {
    exit = 1;
  } else if (match$1 !== 0) {
    exit = 1;
  } else {
    return "0";
  }
  if (exit === 1) {
    if (match$1 !== 0) {
      if (match !== 0) {
        var lo = aux(x[/* lo */1]);
        var pad = 8 - lo.length | 0;
        if (pad <= 0) {
          return aux(x[/* hi */0]) + lo;
        } else {
          return aux(x[/* hi */0]) + (Caml_utils.repeat(pad, "0") + lo);
        }
      } else {
        return aux(x[/* lo */1]);
      }
    } else {
      return aux(x[/* hi */0]) + "00000000";
    }
  }
  
}

function discard_sign(x) {
  return /* record */[
          /* hi */2147483647 & x[/* hi */0],
          /* lo */x[/* lo */1]
        ];
}

function float_of_bits(x) {
  var int32 = new Int32Array(/* array */[
        x[/* lo */1],
        x[/* hi */0]
      ]);
  return new Float64Array(int32.buffer)[0];
}

function bits_of_float(x) {
  var u = new Float64Array(/* float array */[x]);
  var int32 = new Int32Array(u.buffer);
  var x$1 = int32[1];
  var hi = x$1;
  var x$2 = int32[0];
  var lo = x$2;
  return /* record */[
          /* hi */hi,
          /* lo */(lo >>> 0)
        ];
}

function get64(s, i) {
  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);
  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);
  return /* record */[
          /* hi */hi,
          /* lo */(lo >>> 0)
        ];
}

exports.min_int       = min_int;
exports.max_int       = max_int;
exports.one           = one;
exports.zero          = zero;
exports.not           = not;
exports.of_int32      = of_int32;
exports.to_int32      = to_int32;
exports.add           = add;
exports.neg           = neg;
exports.sub           = sub;
exports.lsl_          = lsl_;
exports.lsr_          = lsr_;
exports.asr_          = asr_;
exports.is_zero       = is_zero;
exports.mul           = mul;
exports.xor           = xor;
exports.or_           = or_;
exports.and_          = and_;
exports.swap          = swap;
exports.ge            = ge;
exports.eq            = eq;
exports.neq           = neq;
exports.lt            = lt;
exports.gt            = gt;
exports.le            = le;
exports.to_float      = to_float;
exports.of_float      = of_float;
exports.div           = div;
exports.mod_          = mod_;
exports.div_mod       = div_mod;
exports.compare       = compare;
exports.to_hex        = to_hex;
exports.discard_sign  = discard_sign;
exports.float_of_bits = float_of_bits;
exports.bits_of_float = bits_of_float;
exports.get64         = get64;
/* two_ptr_32_dbl Not a pure module */


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var not_implemented = (function (s){ throw new Error(s)});

exports.not_implemented = not_implemented;
/* not_implemented Not a pure module */


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Block = __webpack_require__(31);

function erase_rel(param) {
  if (typeof param === "number") {
    return /* End_of_fmtty */0;
  } else {
    switch (param.tag | 0) {
      case 0 : 
          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);
      case 1 : 
          return /* String_ty */Block.__(1, [erase_rel(param[0])]);
      case 2 : 
          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);
      case 3 : 
          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);
      case 4 : 
          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);
      case 5 : 
          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);
      case 6 : 
          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);
      case 7 : 
          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);
      case 8 : 
          return /* Format_arg_ty */Block.__(8, [
                    param[0],
                    erase_rel(param[1])
                  ]);
      case 9 : 
          var ty1 = param[0];
          return /* Format_subst_ty */Block.__(9, [
                    ty1,
                    ty1,
                    erase_rel(param[2])
                  ]);
      case 10 : 
          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);
      case 11 : 
          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);
      case 12 : 
          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);
      case 13 : 
          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);
      case 14 : 
          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);
      
    }
  }
}

function concat_fmtty(fmtty1, fmtty2) {
  if (typeof fmtty1 === "number") {
    return fmtty2;
  } else {
    switch (fmtty1.tag | 0) {
      case 0 : 
          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 1 : 
          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 2 : 
          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 3 : 
          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 4 : 
          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 5 : 
          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 6 : 
          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 7 : 
          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 8 : 
          return /* Format_arg_ty */Block.__(8, [
                    fmtty1[0],
                    concat_fmtty(fmtty1[1], fmtty2)
                  ]);
      case 9 : 
          return /* Format_subst_ty */Block.__(9, [
                    fmtty1[0],
                    fmtty1[1],
                    concat_fmtty(fmtty1[2], fmtty2)
                  ]);
      case 10 : 
          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 11 : 
          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 12 : 
          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 13 : 
          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);
      case 14 : 
          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);
      
    }
  }
}

function concat_fmt(fmt1, fmt2) {
  if (typeof fmt1 === "number") {
    return fmt2;
  } else {
    switch (fmt1.tag | 0) {
      case 0 : 
          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);
      case 1 : 
          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);
      case 2 : 
          return /* String */Block.__(2, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 3 : 
          return /* Caml_string */Block.__(3, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 4 : 
          return /* Int */Block.__(4, [
                    fmt1[0],
                    fmt1[1],
                    fmt1[2],
                    concat_fmt(fmt1[3], fmt2)
                  ]);
      case 5 : 
          return /* Int32 */Block.__(5, [
                    fmt1[0],
                    fmt1[1],
                    fmt1[2],
                    concat_fmt(fmt1[3], fmt2)
                  ]);
      case 6 : 
          return /* Nativeint */Block.__(6, [
                    fmt1[0],
                    fmt1[1],
                    fmt1[2],
                    concat_fmt(fmt1[3], fmt2)
                  ]);
      case 7 : 
          return /* Int64 */Block.__(7, [
                    fmt1[0],
                    fmt1[1],
                    fmt1[2],
                    concat_fmt(fmt1[3], fmt2)
                  ]);
      case 8 : 
          return /* Float */Block.__(8, [
                    fmt1[0],
                    fmt1[1],
                    fmt1[2],
                    concat_fmt(fmt1[3], fmt2)
                  ]);
      case 9 : 
          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);
      case 10 : 
          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);
      case 11 : 
          return /* String_literal */Block.__(11, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 12 : 
          return /* Char_literal */Block.__(12, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 13 : 
          return /* Format_arg */Block.__(13, [
                    fmt1[0],
                    fmt1[1],
                    concat_fmt(fmt1[2], fmt2)
                  ]);
      case 14 : 
          return /* Format_subst */Block.__(14, [
                    fmt1[0],
                    fmt1[1],
                    concat_fmt(fmt1[2], fmt2)
                  ]);
      case 15 : 
          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);
      case 16 : 
          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);
      case 17 : 
          return /* Formatting_lit */Block.__(17, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 18 : 
          return /* Formatting_gen */Block.__(18, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 19 : 
          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);
      case 20 : 
          return /* Scan_char_set */Block.__(20, [
                    fmt1[0],
                    fmt1[1],
                    concat_fmt(fmt1[2], fmt2)
                  ]);
      case 21 : 
          return /* Scan_get_counter */Block.__(21, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 22 : 
          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);
      case 23 : 
          return /* Ignored_param */Block.__(23, [
                    fmt1[0],
                    concat_fmt(fmt1[1], fmt2)
                  ]);
      case 24 : 
          return /* Custom */Block.__(24, [
                    fmt1[0],
                    fmt1[1],
                    concat_fmt(fmt1[2], fmt2)
                  ]);
      
    }
  }
}

exports.concat_fmtty = concat_fmtty;
exports.erase_rel    = erase_rel;
exports.concat_fmt   = concat_fmt;
/* No side effect */


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Char                    = __webpack_require__(96);
var List                    = __webpack_require__(30);
var Curry                   = __webpack_require__(9);
var Caml_obj                = __webpack_require__(21);
var Caml_int32              = __webpack_require__(22);
var Pervasives              = __webpack_require__(32);
var Caml_string             = __webpack_require__(23);
var Caml_builtin_exceptions = __webpack_require__(4);

function make(n, c) {
  var s = Caml_string.caml_create_string(n);
  Caml_string.caml_fill_string(s, 0, n, c);
  return s;
}

function init(n, f) {
  var s = Caml_string.caml_create_string(n);
  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){
    s[i] = Curry._1(f, i);
  }
  return s;
}

var empty = [];

function copy(s) {
  var len = s.length;
  var r = Caml_string.caml_create_string(len);
  Caml_string.caml_blit_bytes(s, 0, r, 0, len);
  return r;
}

function to_string(b) {
  return Caml_string.bytes_to_string(copy(b));
}

function of_string(s) {
  return copy(Caml_string.bytes_of_string(s));
}

function sub(s, ofs, len) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.sub / Bytes.sub"
        ];
  } else {
    var r = Caml_string.caml_create_string(len);
    Caml_string.caml_blit_bytes(s, ofs, r, 0, len);
    return r;
  }
}

function sub_string(b, ofs, len) {
  return Caml_string.bytes_to_string(sub(b, ofs, len));
}

function extend(s, left, right) {
  var len = (s.length + left | 0) + right | 0;
  var r = Caml_string.caml_create_string(len);
  var match = left < 0 ? /* tuple */[
      -left | 0,
      0
    ] : /* tuple */[
      0,
      left
    ];
  var dstoff = match[1];
  var srcoff = match[0];
  var cpylen = Pervasives.min(s.length - srcoff | 0, len - dstoff | 0);
  if (cpylen > 0) {
    Caml_string.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);
  }
  return r;
}

function fill(s, ofs, len, c) {
  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.fill / Bytes.fill"
        ];
  } else {
    return Caml_string.caml_fill_string(s, ofs, len, c);
  }
}

function blit(s1, ofs1, s2, ofs2, len) {
  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Bytes.blit"
        ];
  } else {
    return Caml_string.caml_blit_bytes(s1, ofs1, s2, ofs2, len);
  }
}

function blit_string(s1, ofs1, s2, ofs2, len) {
  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.blit / Bytes.blit_string"
        ];
  } else {
    return Caml_string.caml_blit_string(s1, ofs1, s2, ofs2, len);
  }
}

function iter(f, a) {
  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
    Curry._1(f, a[i]);
  }
  return /* () */0;
}

function iteri(f, a) {
  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
    Curry._2(f, i, a[i]);
  }
  return /* () */0;
}

function concat(sep, l) {
  if (l) {
    var hd = l[0];
    var num = [0];
    var len = [0];
    List.iter((function (s) {
            num[0] = num[0] + 1 | 0;
            len[0] = len[0] + s.length | 0;
            return /* () */0;
          }), l);
    var r = Caml_string.caml_create_string(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);
    Caml_string.caml_blit_bytes(hd, 0, r, 0, hd.length);
    var pos = [hd.length];
    List.iter((function (s) {
            Caml_string.caml_blit_bytes(sep, 0, r, pos[0], sep.length);
            pos[0] = pos[0] + sep.length | 0;
            Caml_string.caml_blit_bytes(s, 0, r, pos[0], s.length);
            pos[0] = pos[0] + s.length | 0;
            return /* () */0;
          }), l[1]);
    return r;
  } else {
    return empty;
  }
}

function cat(a, b) {
  return a.concat(b);
}

function is_space(param) {
  var switcher = param - 9 | 0;
  if (switcher > 4 || switcher < 0) {
    if (switcher !== 23) {
      return /* false */0;
    } else {
      return /* true */1;
    }
  } else if (switcher !== 2) {
    return /* true */1;
  } else {
    return /* false */0;
  }
}

function trim(s) {
  var len = s.length;
  var i = 0;
  while(i < len && is_space(s[i])) {
    i = i + 1 | 0;
  };
  var j = len - 1 | 0;
  while(j >= i && is_space(s[j])) {
    j = j - 1 | 0;
  };
  if (j >= i) {
    return sub(s, i, (j - i | 0) + 1 | 0);
  } else {
    return empty;
  }
}

function escaped(s) {
  var n = 0;
  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){
    var match = s[i];
    var tmp;
    if (match >= 32) {
      var switcher = match - 34 | 0;
      tmp = switcher > 58 || switcher < 0 ? (
          switcher >= 93 ? 4 : 1
        ) : (
          switcher > 57 || switcher < 1 ? 2 : 1
        );
    } else {
      tmp = match >= 11 ? (
          match !== 13 ? 4 : 2
        ) : (
          match >= 8 ? 2 : 4
        );
    }
    n = n + tmp | 0;
  }
  if (n === s.length) {
    return copy(s);
  } else {
    var s$prime = Caml_string.caml_create_string(n);
    n = 0;
    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){
      var c = s[i$1];
      var exit = 0;
      if (c >= 35) {
        if (c !== 92) {
          if (c >= 127) {
            exit = 1;
          } else {
            s$prime[n] = c;
          }
        } else {
          exit = 2;
        }
      } else if (c >= 32) {
        if (c >= 34) {
          exit = 2;
        } else {
          s$prime[n] = c;
        }
      } else if (c >= 14) {
        exit = 1;
      } else {
        switch (c) {
          case 8 : 
              s$prime[n] = /* "\\" */92;
              n = n + 1 | 0;
              s$prime[n] = /* "b" */98;
              break;
          case 9 : 
              s$prime[n] = /* "\\" */92;
              n = n + 1 | 0;
              s$prime[n] = /* "t" */116;
              break;
          case 10 : 
              s$prime[n] = /* "\\" */92;
              n = n + 1 | 0;
              s$prime[n] = /* "n" */110;
              break;
          case 0 : 
          case 1 : 
          case 2 : 
          case 3 : 
          case 4 : 
          case 5 : 
          case 6 : 
          case 7 : 
          case 11 : 
          case 12 : 
              exit = 1;
              break;
          case 13 : 
              s$prime[n] = /* "\\" */92;
              n = n + 1 | 0;
              s$prime[n] = /* "r" */114;
              break;
          
        }
      }
      switch (exit) {
        case 1 : 
            s$prime[n] = /* "\\" */92;
            n = n + 1 | 0;
            s$prime[n] = 48 + (c / 100 | 0) | 0;
            n = n + 1 | 0;
            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;
            n = n + 1 | 0;
            s$prime[n] = 48 + c % 10 | 0;
            break;
        case 2 : 
            s$prime[n] = /* "\\" */92;
            n = n + 1 | 0;
            s$prime[n] = c;
            break;
        
      }
      n = n + 1 | 0;
    }
    return s$prime;
  }
}

function map(f, s) {
  var l = s.length;
  if (l) {
    var r = Caml_string.caml_create_string(l);
    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
      r[i] = Curry._1(f, s[i]);
    }
    return r;
  } else {
    return s;
  }
}

function mapi(f, s) {
  var l = s.length;
  if (l) {
    var r = Caml_string.caml_create_string(l);
    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
      r[i] = Curry._2(f, i, s[i]);
    }
    return r;
  } else {
    return s;
  }
}

function uppercase(s) {
  return map(Char.uppercase, s);
}

function lowercase(s) {
  return map(Char.lowercase, s);
}

function apply1(f, s) {
  if (s.length) {
    var r = copy(s);
    r[0] = Curry._1(f, s[0]);
    return r;
  } else {
    return s;
  }
}

function capitalize(s) {
  return apply1(Char.uppercase, s);
}

function uncapitalize(s) {
  return apply1(Char.lowercase, s);
}

function index_rec(s, lim, _i, c) {
  while(true) {
    var i = _i;
    if (i >= lim) {
      throw Caml_builtin_exceptions.not_found;
    } else if (s[i] === c) {
      return i;
    } else {
      _i = i + 1 | 0;
      continue ;
      
    }
  };
}

function index(s, c) {
  return index_rec(s, s.length, 0, c);
}

function index_from(s, i, c) {
  var l = s.length;
  if (i < 0 || i > l) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.index_from / Bytes.index_from"
        ];
  } else {
    return index_rec(s, l, i, c);
  }
}

function rindex_rec(s, _i, c) {
  while(true) {
    var i = _i;
    if (i < 0) {
      throw Caml_builtin_exceptions.not_found;
    } else if (s[i] === c) {
      return i;
    } else {
      _i = i - 1 | 0;
      continue ;
      
    }
  };
}

function rindex(s, c) {
  return rindex_rec(s, s.length - 1 | 0, c);
}

function rindex_from(s, i, c) {
  if (i < -1 || i >= s.length) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.rindex_from / Bytes.rindex_from"
        ];
  } else {
    return rindex_rec(s, i, c);
  }
}

function contains_from(s, i, c) {
  var l = s.length;
  if (i < 0 || i > l) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.contains_from / Bytes.contains_from"
        ];
  } else {
    try {
      index_rec(s, l, i, c);
      return /* true */1;
    }
    catch (exn){
      if (exn === Caml_builtin_exceptions.not_found) {
        return /* false */0;
      } else {
        throw exn;
      }
    }
  }
}

function contains(s, c) {
  return contains_from(s, 0, c);
}

function rcontains_from(s, i, c) {
  if (i < 0 || i >= s.length) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "String.rcontains_from / Bytes.rcontains_from"
        ];
  } else {
    try {
      rindex_rec(s, i, c);
      return /* true */1;
    }
    catch (exn){
      if (exn === Caml_builtin_exceptions.not_found) {
        return /* false */0;
      } else {
        throw exn;
      }
    }
  }
}

var compare = Caml_obj.caml_compare;

var unsafe_to_string = Caml_string.bytes_to_string;

var unsafe_of_string = Caml_string.bytes_of_string;

exports.make             = make;
exports.init             = init;
exports.empty            = empty;
exports.copy             = copy;
exports.of_string        = of_string;
exports.to_string        = to_string;
exports.sub              = sub;
exports.sub_string       = sub_string;
exports.extend           = extend;
exports.fill             = fill;
exports.blit             = blit;
exports.blit_string      = blit_string;
exports.concat           = concat;
exports.cat              = cat;
exports.iter             = iter;
exports.iteri            = iteri;
exports.map              = map;
exports.mapi             = mapi;
exports.trim             = trim;
exports.escaped          = escaped;
exports.index            = index;
exports.rindex           = rindex;
exports.index_from       = index_from;
exports.rindex_from      = rindex_from;
exports.contains         = contains;
exports.contains_from    = contains_from;
exports.rcontains_from   = rcontains_from;
exports.uppercase        = uppercase;
exports.lowercase        = lowercase;
exports.capitalize       = capitalize;
exports.uncapitalize     = uncapitalize;
exports.compare          = compare;
exports.unsafe_to_string = unsafe_to_string;
exports.unsafe_of_string = unsafe_of_string;
/* No side effect */


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_string             = __webpack_require__(23);
var Caml_builtin_exceptions = __webpack_require__(4);

function chr(n) {
  if (n < 0 || n > 255) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Char.chr"
        ];
  } else {
    return n;
  }
}

function escaped(c) {
  var exit = 0;
  if (c >= 40) {
    if (c !== 92) {
      exit = c >= 127 ? 1 : 2;
    } else {
      return "\\\\";
    }
  } else if (c >= 32) {
    if (c >= 39) {
      return "\\'";
    } else {
      exit = 2;
    }
  } else if (c >= 14) {
    exit = 1;
  } else {
    switch (c) {
      case 8 : 
          return "\\b";
      case 9 : 
          return "\\t";
      case 10 : 
          return "\\n";
      case 0 : 
      case 1 : 
      case 2 : 
      case 3 : 
      case 4 : 
      case 5 : 
      case 6 : 
      case 7 : 
      case 11 : 
      case 12 : 
          exit = 1;
          break;
      case 13 : 
          return "\\r";
      
    }
  }
  switch (exit) {
    case 1 : 
        var s = new Array(4);
        s[0] = /* "\\" */92;
        s[1] = 48 + (c / 100 | 0) | 0;
        s[2] = 48 + (c / 10 | 0) % 10 | 0;
        s[3] = 48 + c % 10 | 0;
        return Caml_string.bytes_to_string(s);
    case 2 : 
        var s$1 = new Array(1);
        s$1[0] = c;
        return Caml_string.bytes_to_string(s$1);
    
  }
}

function lowercase(c) {
  if (c >= /* "A" */65 && c <= /* "Z" */90 || c >= /* "\192" */192 && c <= /* "\214" */214 || c >= /* "\216" */216 && c <= /* "\222" */222) {
    return c + 32 | 0;
  } else {
    return c;
  }
}

function uppercase(c) {
  if (c >= /* "a" */97 && c <= /* "z" */122 || c >= /* "\224" */224 && c <= /* "\246" */246 || c >= /* "\248" */248 && c <= /* "\254" */254) {
    return c - 32 | 0;
  } else {
    return c;
  }
}

function compare(c1, c2) {
  return c1 - c2 | 0;
}

exports.chr       = chr;
exports.escaped   = escaped;
exports.lowercase = lowercase;
exports.uppercase = uppercase;
exports.compare   = compare;
/* No side effect */


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE


var $$Map        = __webpack_require__(46);
var List         = __webpack_require__(30);
var $$Array      = __webpack_require__(98);
var Block        = __webpack_require__(31);
var Curry        = __webpack_require__(9);
var $$String     = __webpack_require__(48);
var Pervasives   = __webpack_require__(32);
var Js_primitive = __webpack_require__(100);
var Web_formdata = __webpack_require__(101);

function abort(x) {
  return x.abort();
}

function getAllResponseHeaders(x) {
  var match = x.getAllResponseHeaders();
  if (match !== null) {
    if (match === "") {
      return /* Error */Block.__(1, [/* NetworkError */1]);
    } else {
      return /* Ok */Block.__(0, [match]);
    }
  } else {
    return /* Error */Block.__(1, [/* IncompleteResponse */0]);
  }
}

function getAllResponseHeadersAsList(x) {
  var err = getAllResponseHeaders(x);
  if (err.tag) {
    return err;
  } else {
    return /* Ok */Block.__(0, [List.map((function (param) {
                      if (param.length !== 2) {
                        return Pervasives.failwith("Cannot happen, already checked length");
                      } else {
                        var key = param[0];
                        var value = param[1];
                        return /* tuple */[
                                key,
                                value
                              ];
                      }
                    }), List.filter((function (a) {
                            return +(a.length === 2);
                          }))($$Array.to_list($$Array.map((function (param) {
                                  return param.split(": ", 2);
                                }), err[0].split("\r\n")))))]);
  }
}

function getAllResponseHeadersAsDict(x) {
  var StringMap = $$Map.Make([$$String.compare]);
  var err = getAllResponseHeadersAsList(x);
  if (err.tag) {
    return err;
  } else {
    var insert = function (d, param) {
      return Curry._3(StringMap[/* add */3], param[0], param[1], d);
    };
    return /* Ok */Block.__(0, [List.fold_left(insert, StringMap[/* empty */0], err[0])]);
  }
}

function getResponseHeader(key, x) {
  return Js_primitive.null_to_opt(x.getResponse(key));
}

function open_(method$prime, url, $staropt$star, $staropt$star$1, $staropt$star$2, x) {
  var async = $staropt$star ? $staropt$star[0] : /* true */1;
  var user = $staropt$star$1 ? $staropt$star$1[0] : "";
  var password = $staropt$star$2 ? $staropt$star$2[0] : "";
  return x.open(method$prime, url, async, user, password);
}

function overrideMimeType(mimetype, x) {
  return x.overrideMimeType(mimetype);
}

function send(body, x) {
  if (typeof body === "number") {
    if (body) {
      return x.send(null);
    } else {
      return x.send();
    }
  } else {
    switch (body.tag | 0) {
      case 0 : 
          return x.send(body[0]);
      case 1 : 
          return x.send_formdata(body[0]);
      case 2 : 
          var form = List.fold_left((function (f, param) {
                  Web_formdata.append(param[0], param[1], f);
                  return f;
                }), new FormData(), body[0]);
          return x.send_formdata(form);
      case 3 : 
          return x.send_document(body[0]);
      
    }
  }
}

function setRequestHeader(header, value, x) {
  return x.setRequestHeader(header, value);
}

function set_onreadystatechange(cb, x) {
  return x.onreadystatechange = cb;
}

function get_onreadystatechange(x) {
  return x.onreadystatechange;
}

function readyState(x) {
  var i = x.readystate;
  if (i > 4 || i < 0) {
    return Pervasives.failwith("Invalid return from 'readystate' of: " + Pervasives.string_of_int(i));
  } else {
    return i;
  }
}

function set_responseType(typ, x) {
  if (typeof typ === "number") {
    switch (typ) {
      case 0 : 
          return x.responseType = "";
      case 1 : 
          return x.responseType = "arraybuffer";
      case 2 : 
          return x.responseType = "blob";
      case 3 : 
          return x.responseType = "document";
      case 4 : 
          return x.responseType = "json";
      case 5 : 
          return x.responseType = "text";
      
    }
  } else {
    return x.responseType = typ[0];
  }
}

function get_responseType(x) {
  var s = x.responseType;
  switch (s) {
    case "" : 
        return /* StringResponseType */0;
    case "arraybuffer" : 
        return /* ArrayBufferResponseType */1;
    case "blob" : 
        return /* BlobResponseType */2;
    case "document" : 
        return /* DocumentResponseType */3;
    case "json" : 
        return /* JsonResponseType */4;
    case "text" : 
        return /* TextResponseType */5;
    default:
      return /* RawResponseType */[s];
  }
}

function get_response(x) {
  var match = x.response;
  if (match !== null) {
    var match$1 = get_responseType(x);
    if (typeof match$1 === "number") {
      switch (match$1) {
        case 0 : 
            return /* StringResponse */Block.__(0, [match]);
        case 1 : 
            return /* ArrayBufferResponse */Block.__(1, [match]);
        case 2 : 
            return /* BlobResponse */Block.__(2, [match]);
        case 3 : 
            return /* DocumentResponse */Block.__(3, [match]);
        case 4 : 
            return /* JsonResponse */Block.__(4, [match]);
        case 5 : 
            return /* TextResponse */Block.__(5, [match]);
        
      }
    } else {
      return /* RawResponse */Block.__(6, [
                match$1[0],
                match
              ]);
    }
  } else {
    return /* NoResponse */0;
  }
}

function get_responseText(x) {
  return x.responseText;
}

function get_responseURL(x) {
  return x.responseURL;
}

function get_responseXML(x) {
  return Js_primitive.null_to_opt(x.responseXML);
}

function get_status(x) {
  return x.status;
}

function get_statusText(x) {
  return x.statusText;
}

function set_timeout(t, x) {
  return x.timeout = t;
}

function get_timeout(x) {
  return x.timeout;
}

function set_withCredentials(b, x) {
  return x.withCredentials = b;
}

function get_withCredentials(x) {
  return x.withCredentials;
}

function set_onabort(cb, x) {
  return x.onabort = cb;
}

function get_onabort(x) {
  return x.onabort;
}

function set_onerror(cb, x) {
  return x.onerror = cb;
}

function get_onerror(x) {
  return x.onerror;
}

function set_onload(cb, x) {
  return x.onload = cb;
}

function get_onload(x) {
  return x.onload;
}

function set_onloadstart(cb, x) {
  return x.onloadstart = cb;
}

function get_onloadstart(x) {
  return x.onloadstart;
}

function set_onprogress(cb, x) {
  return x.onprogress = cb;
}

function get_onprogress(x) {
  return x.onprogress;
}

function set_ontimeout(cb, x) {
  return x.ontimeout = cb;
}

function get_ontimeout(x) {
  return x.ontimeout;
}

function set_onloadend(cb, x) {
  return x.onloadend = cb;
}

function get_onloadend(x) {
  return x.onloadend;
}

exports.abort                       = abort;
exports.getAllResponseHeaders       = getAllResponseHeaders;
exports.getAllResponseHeadersAsList = getAllResponseHeadersAsList;
exports.getAllResponseHeadersAsDict = getAllResponseHeadersAsDict;
exports.getResponseHeader           = getResponseHeader;
exports.open_                       = open_;
exports.overrideMimeType            = overrideMimeType;
exports.send                        = send;
exports.setRequestHeader            = setRequestHeader;
exports.set_onreadystatechange      = set_onreadystatechange;
exports.get_onreadystatechange      = get_onreadystatechange;
exports.readyState                  = readyState;
exports.set_responseType            = set_responseType;
exports.get_responseType            = get_responseType;
exports.get_response                = get_response;
exports.get_responseText            = get_responseText;
exports.get_responseURL             = get_responseURL;
exports.get_responseXML             = get_responseXML;
exports.get_status                  = get_status;
exports.get_statusText              = get_statusText;
exports.set_timeout                 = set_timeout;
exports.get_timeout                 = get_timeout;
exports.set_withCredentials         = set_withCredentials;
exports.get_withCredentials         = get_withCredentials;
exports.set_onabort                 = set_onabort;
exports.get_onabort                 = get_onabort;
exports.set_onerror                 = set_onerror;
exports.get_onerror                 = get_onerror;
exports.set_onload                  = set_onload;
exports.get_onload                  = get_onload;
exports.set_onloadstart             = set_onloadstart;
exports.get_onloadstart             = get_onloadstart;
exports.set_onprogress              = set_onprogress;
exports.get_onprogress              = get_onprogress;
exports.set_ontimeout               = set_ontimeout;
exports.get_ontimeout               = get_ontimeout;
exports.set_onloadend               = set_onloadend;
exports.get_onloadend               = get_onloadend;
/* No side effect */


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Curry                   = __webpack_require__(9);
var Js_exn                  = __webpack_require__(99);
var Caml_array              = __webpack_require__(47);
var Caml_exceptions         = __webpack_require__(33);
var Caml_builtin_exceptions = __webpack_require__(4);

function init(l, f) {
  if (l) {
    if (l < 0) {
      throw [
            Caml_builtin_exceptions.invalid_argument,
            "Array.init"
          ];
    } else {
      var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));
      for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
        res[i] = Curry._1(f, i);
      }
      return res;
    }
  } else {
    return /* array */[];
  }
}

function make_matrix(sx, sy, init) {
  var res = Caml_array.caml_make_vect(sx, /* array */[]);
  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){
    res[x] = Caml_array.caml_make_vect(sy, init);
  }
  return res;
}

function copy(a) {
  var l = a.length;
  if (l) {
    return Caml_array.caml_array_sub(a, 0, l);
  } else {
    return /* array */[];
  }
}

function append(a1, a2) {
  var l1 = a1.length;
  if (l1) {
    if (a2.length) {
      return a1.concat(a2);
    } else {
      return Caml_array.caml_array_sub(a1, 0, l1);
    }
  } else {
    return copy(a2);
  }
}

function sub(a, ofs, len) {
  if (len < 0 || ofs > (a.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Array.sub"
        ];
  } else {
    return Caml_array.caml_array_sub(a, ofs, len);
  }
}

function fill(a, ofs, len, v) {
  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Array.fill"
        ];
  } else {
    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){
      a[i] = v;
    }
    return /* () */0;
  }
}

function blit(a1, ofs1, a2, ofs2, len) {
  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {
    throw [
          Caml_builtin_exceptions.invalid_argument,
          "Array.blit"
        ];
  } else {
    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);
  }
}

function iter(f, a) {
  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
    Curry._1(f, a[i]);
  }
  return /* () */0;
}

function map(f, a) {
  var l = a.length;
  if (l) {
    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));
    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
      r[i] = Curry._1(f, a[i]);
    }
    return r;
  } else {
    return /* array */[];
  }
}

function iteri(f, a) {
  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
    Curry._2(f, i, a[i]);
  }
  return /* () */0;
}

function mapi(f, a) {
  var l = a.length;
  if (l) {
    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));
    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){
      r[i] = Curry._2(f, i, a[i]);
    }
    return r;
  } else {
    return /* array */[];
  }
}

function to_list(a) {
  var _i = a.length - 1 | 0;
  var _res = /* [] */0;
  while(true) {
    var res = _res;
    var i = _i;
    if (i < 0) {
      return res;
    } else {
      _res = /* :: */[
        a[i],
        res
      ];
      _i = i - 1 | 0;
      continue ;
      
    }
  };
}

function list_length(_accu, _param) {
  while(true) {
    var param = _param;
    var accu = _accu;
    if (param) {
      _param = param[1];
      _accu = accu + 1 | 0;
      continue ;
      
    } else {
      return accu;
    }
  };
}

function of_list(l) {
  if (l) {
    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);
    var _i = 1;
    var _param = l[1];
    while(true) {
      var param = _param;
      var i = _i;
      if (param) {
        a[i] = param[0];
        _param = param[1];
        _i = i + 1 | 0;
        continue ;
        
      } else {
        return a;
      }
    };
  } else {
    return /* array */[];
  }
}

function fold_left(f, x, a) {
  var r = x;
  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){
    r = Curry._2(f, r, a[i]);
  }
  return r;
}

function fold_right(f, a, x) {
  var r = x;
  for(var i = a.length - 1 | 0; i >= 0; --i){
    r = Curry._2(f, a[i], r);
  }
  return r;
}

var Bottom = Caml_exceptions.create("Array.Bottom");

function sort(cmp, a) {
  var maxson = function (l, i) {
    var i31 = ((i + i | 0) + i | 0) + 1 | 0;
    var x = i31;
    if ((i31 + 2 | 0) < l) {
      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {
        x = i31 + 1 | 0;
      }
      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {
        x = i31 + 2 | 0;
      }
      return x;
    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {
      return i31 + 1 | 0;
    } else if (i31 < l) {
      return i31;
    } else {
      throw [
            Bottom,
            i
          ];
    }
  };
  var trickle = function (l, i, e) {
    try {
      var l$1 = l;
      var _i = i;
      var e$1 = e;
      while(true) {
        var i$1 = _i;
        var j = maxson(l$1, i$1);
        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {
          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));
          _i = j;
          continue ;
          
        } else {
          return Caml_array.caml_array_set(a, i$1, e$1);
        }
      };
    }
    catch (raw_exn){
      var exn = Js_exn.internalToOCamlException(raw_exn);
      if (exn[0] === Bottom) {
        return Caml_array.caml_array_set(a, exn[1], e);
      } else {
        throw exn;
      }
    }
  };
  var bubble = function (l, i) {
    try {
      var l$1 = l;
      var _i = i;
      while(true) {
        var i$1 = _i;
        var j = maxson(l$1, i$1);
        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));
        _i = j;
        continue ;
        
      };
    }
    catch (raw_exn){
      var exn = Js_exn.internalToOCamlException(raw_exn);
      if (exn[0] === Bottom) {
        return exn[1];
      } else {
        throw exn;
      }
    }
  };
  var trickleup = function (_i, e) {
    while(true) {
      var i = _i;
      var father = (i - 1 | 0) / 3 | 0;
      if (i === father) {
        throw [
              Caml_builtin_exceptions.assert_failure,
              [
                "array.ml",
                168,
                4
              ]
            ];
      }
      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {
        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));
        if (father > 0) {
          _i = father;
          continue ;
          
        } else {
          return Caml_array.caml_array_set(a, 0, e);
        }
      } else {
        return Caml_array.caml_array_set(a, i, e);
      }
    };
  };
  var l = a.length;
  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){
    trickle(l, i, Caml_array.caml_array_get(a, i));
  }
  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){
    var e = Caml_array.caml_array_get(a, i$1);
    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));
    trickleup(bubble(i$1, 0), e);
  }
  if (l > 1) {
    var e$1 = Caml_array.caml_array_get(a, 1);
    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));
    return Caml_array.caml_array_set(a, 0, e$1);
  } else {
    return 0;
  }
}

function stable_sort(cmp, a) {
  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {
    var src1r = src1ofs + src1len | 0;
    var src2r = src2ofs + src2len | 0;
    var _i1 = src1ofs;
    var _s1 = Caml_array.caml_array_get(a, src1ofs);
    var _i2 = src2ofs;
    var _s2 = Caml_array.caml_array_get(src2, src2ofs);
    var _d = dstofs;
    while(true) {
      var d = _d;
      var s2 = _s2;
      var i2 = _i2;
      var s1 = _s1;
      var i1 = _i1;
      if (Curry._2(cmp, s1, s2) <= 0) {
        Caml_array.caml_array_set(dst, d, s1);
        var i1$1 = i1 + 1 | 0;
        if (i1$1 < src1r) {
          _d = d + 1 | 0;
          _s1 = Caml_array.caml_array_get(a, i1$1);
          _i1 = i1$1;
          continue ;
          
        } else {
          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);
        }
      } else {
        Caml_array.caml_array_set(dst, d, s2);
        var i2$1 = i2 + 1 | 0;
        if (i2$1 < src2r) {
          _d = d + 1 | 0;
          _s2 = Caml_array.caml_array_get(src2, i2$1);
          _i2 = i2$1;
          continue ;
          
        } else {
          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);
        }
      }
    };
  };
  var isortto = function (srcofs, dst, dstofs, len) {
    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){
      var e = Caml_array.caml_array_get(a, srcofs + i | 0);
      var j = (dstofs + i | 0) - 1 | 0;
      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {
        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));
        j = j - 1 | 0;
      };
      Caml_array.caml_array_set(dst, j + 1 | 0, e);
    }
    return /* () */0;
  };
  var sortto = function (srcofs, dst, dstofs, len) {
    if (len <= 5) {
      return isortto(srcofs, dst, dstofs, len);
    } else {
      var l1 = len / 2 | 0;
      var l2 = len - l1 | 0;
      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);
      sortto(srcofs, a, srcofs + l2 | 0, l1);
      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);
    }
  };
  var l = a.length;
  if (l <= 5) {
    return isortto(0, a, 0, l);
  } else {
    var l1 = l / 2 | 0;
    var l2 = l - l1 | 0;
    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));
    sortto(l1, t, 0, l2);
    sortto(0, a, l2, l1);
    return merge(l2, l1, t, 0, l2, a, 0);
  }
}

var create_matrix = make_matrix;

var concat = Caml_array.caml_array_concat;

var fast_sort = stable_sort;

exports.init          = init;
exports.make_matrix   = make_matrix;
exports.create_matrix = create_matrix;
exports.append        = append;
exports.concat        = concat;
exports.sub           = sub;
exports.copy          = copy;
exports.fill          = fill;
exports.blit          = blit;
exports.to_list       = to_list;
exports.of_list       = of_list;
exports.iter          = iter;
exports.map           = map;
exports.iteri         = iteri;
exports.mapi          = mapi;
exports.fold_left     = fold_left;
exports.fold_right    = fold_right;
exports.sort          = sort;
exports.stable_sort   = stable_sort;
exports.fast_sort     = fast_sort;
/* No side effect */


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Caml_exceptions = __webpack_require__(33);

var $$Error = Caml_exceptions.create("Js_exn.Error");

function internalToOCamlException(e) {
  if (Caml_exceptions.isCamlExceptionOrOpenVariant(e)) {
    return e;
  } else {
    return [
            $$Error,
            e
          ];
  }
}

function raiseError(str) {
  throw new Error(str);
}

function raiseEvalError(str) {
  throw new EvalError(str);
}

function raiseRangeError(str) {
  throw new RangeError(str);
}

function raiseReferenceError(str) {
  throw new ReferenceError(str);
}

function raiseSyntaxError(str) {
  throw new SyntaxError(str);
}

function raiseTypeError(str) {
  throw new TypeError(str);
}

function raiseUriError(str) {
  throw new URIError(str);
}

exports.$$Error                  = $$Error;
exports.internalToOCamlException = internalToOCamlException;
exports.raiseError               = raiseError;
exports.raiseEvalError           = raiseEvalError;
exports.raiseRangeError          = raiseRangeError;
exports.raiseReferenceError      = raiseReferenceError;
exports.raiseSyntaxError         = raiseSyntaxError;
exports.raiseTypeError           = raiseTypeError;
exports.raiseUriError            = raiseUriError;
/* No side effect */


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



function is_nil_undef(x) {
  if (x === null) {
    return /* true */1;
  } else {
    return +(x === undefined);
  }
}

function null_undefined_to_opt(x) {
  if (x === null || x === undefined) {
    return /* None */0;
  } else {
    return /* Some */[x];
  }
}

function undefined_to_opt(x) {
  if (x === undefined) {
    return /* None */0;
  } else {
    return /* Some */[x];
  }
}

function null_to_opt(x) {
  if (x === null) {
    return /* None */0;
  } else {
    return /* Some */[x];
  }
}

function option_get(x) {
  if (x) {
    return x[0];
  } else {
    return undefined;
  }
}

function option_get_unwrap(x) {
  if (x) {
    return x[0][1];
  } else {
    return undefined;
  }
}

exports.is_nil_undef          = is_nil_undef;
exports.null_undefined_to_opt = null_undefined_to_opt;
exports.undefined_to_opt      = undefined_to_opt;
exports.null_to_opt           = null_to_opt;
exports.option_get            = option_get;
exports.option_get_unwrap     = option_get_unwrap;
/* No side effect */


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE



function append(key, value, f) {
  return f.append(key, value);
}

exports.append = append;
/* No side effect */


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE


var Sodium = __webpack_require__(103);

function generateKeyNoSeed() {
  return Sodium.crypto_sign_keypair();
}

var ready = Sodium.ready;

exports.generateKeyNoSeed = generateKeyNoSeed;
exports.ready             = ready;
/* ready Not a pure module */


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e){function t(e,t){"use strict";function r(e){if("function"==typeof TextEncoder)return new TextEncoder("utf-8").encode(e);e=unescape(encodeURIComponent(e));for(var t=new Uint8Array(e.length),r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}function a(e){if("function"==typeof TextDecoder)return new TextDecoder("utf-8",{fatal:!0}).decode(e);var t=Math.ceil(e.length/8192);if(t<=1)try{return decodeURIComponent(escape(String.fromCharCode.apply(null,e)))}catch(e){throw new TypeError("The encoded data was not valid.")}for(var r="",n=0,_=0;_<t;_++){var s=Array.prototype.slice.call(e,8192*_+n,8192*(_+1)+n);if(0!=s.length){var c,h=s.length,o=0;do{var p=s[--h];p>=240?(o=4,c=!0):p>=224?(o=3,c=!0):p>=192?(o=2,c=!0):p<128&&(o=1,c=!0)}while(!c);for(var y=o-(s.length-h),i=0;i<y;i++)n--,s.pop();r+=a(s)}}return r}function n(e){e=f(null,e,"input");for(var t,r,a,n="",_=0;_<e.length;_++)a=87+(r=15&e[_])+(r-10>>8&-39)<<8|87+(t=e[_]>>>4)+(t-10>>8&-39),n+=String.fromCharCode(255&a)+String.fromCharCode(a>>>8);return n}function _(e){if(void 0==e)return Et.URLSAFE_NO_PADDING;if(e!==Et.ORIGINAL&&e!==Et.ORIGINAL_NO_PADDING&&e!==Et.URLSAFE&&e!=Et.URLSAFE_NO_PADDING)throw new Error("unsupported base64 variant");return e}function s(e,t){t=_(t),e=f(n,e,"input");var r,n=[],s=0|Math.floor(e.length/3),c=e.length-3*s,h=4*s+(0!==c?0==(2&t)?4:2+(c>>>1):0),o=new y(h+1),p=i(e);return n.push(p),n.push(o.address),0===kt._sodium_bin2base64(o.address,o.length,p,e.length,t)&&v(n,"conversion failed"),o.length=h,r=a(o.to_Uint8Array()),d(n),r}function c(){return["uint8array","text","hex","base64"]}function h(e,t){var r=t||xt;if(!o(r))throw new Error(r+" output format is not available");if(e instanceof y){if("uint8array"===r)return e.to_Uint8Array();if("text"===r)return a(e.to_Uint8Array());if("hex"===r)return n(e.to_Uint8Array());if("base64"===r)return s(e.to_Uint8Array(),Et.URLSAFE_NO_PADDING);throw new Error('What is output format "'+r+'"?')}if("object"==typeof e){for(var _=Object.keys(e),c={},p=0;p<_.length;p++)c[_[p]]=h(e[_[p]],r);return c}if("string"==typeof e)return e;throw new TypeError("Cannot format output")}function o(e){for(var t=c(),r=0;r<t.length;r++)if(t[r]===e)return!0;return!1}function p(e){if(e){if("string"!=typeof e)throw new TypeError("When defined, the output format must be a string");if(!o(e))throw new Error(e+" is not a supported output format")}}function y(e){this.length=e,this.address=u(e)}function i(e){var t=u(e.length);return kt.HEAPU8.set(e,t),t}function u(e){var t=kt._malloc(e);if(0===t)throw{message:"_malloc() failed",length:e};return t}function l(e){kt._free(e)}function d(e){if(e)for(var t=0;t<e.length;t++)l(e[t])}function v(e,t){throw d(e),new Error(t)}function g(e,t){throw d(e),new TypeError(t)}function b(e,t,r){void 0==t&&g(e,r+" cannot be null or undefined")}function f(e,t,a){return b(e,t,a),t instanceof Uint8Array?t:"string"==typeof t?r(t):void g(e,"unsupported input type for "+a)}function m(e,t,r,a,n,_){var s=[];p(_);var c=null;void 0!=e&&(c=i(e=f(s,e,"secret_nonce")),e.length,s.push(c));var o=i(t=f(s,t,"ciphertext")),u=t.length;s.push(o);var l=null,b=0;void 0!=r&&(l=i(r=f(s,r,"additional_data")),b=r.length,s.push(l)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(u-kt._crypto_aead_chacha20poly1305_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_chacha20poly1305_decrypt(T,null,c,o,u,0,l,b,0,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function k(e,t,r,a,n,_,s){var c=[];p(s);var o=null;void 0!=e&&(o=i(e=f(c,e,"secret_nonce")),e.length,c.push(o));var u=i(t=f(c,t,"ciphertext")),l=t.length;c.push(u),r=f(c,r,"mac");var b,m=0|kt._crypto_box_macbytes();r.length!==m&&g(c,"invalid mac length"),b=i(r),c.push(b);var k=null,x=0;void 0!=a&&(k=i(a=f(c,a,"additional_data")),x=a.length,c.push(k)),n=f(c,n,"public_nonce");var w,E=0|kt._crypto_aead_chacha20poly1305_npubbytes();n.length!==E&&g(c,"invalid public_nonce length"),w=i(n),c.push(w),_=f(c,_,"key");var T,S=0|kt._crypto_aead_chacha20poly1305_keybytes();_.length!==S&&g(c,"invalid key length"),T=i(_),c.push(T);var Y=new y(0|l),K=Y.address;if(c.push(K),0===kt._crypto_aead_chacha20poly1305_decrypt_detached(K,o,u,l,0,b,k,x,0,w,T)){var A=h(Y,s);return d(c),A}v(c,"incorrect usage")}function x(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(o+kt._crypto_aead_chacha20poly1305_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_chacha20poly1305_encrypt(T,null,c,o,0,u,l,0,b,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function w(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(0|o),T=E.address;s.push(T);var S=new y(0|kt._crypto_aead_chacha20poly1305_abytes()),Y=S.address;if(s.push(Y),0===kt._crypto_aead_chacha20poly1305_encrypt_detached(T,Y,null,c,o,0,u,l,0,b,m,x)){var K=h({ciphertext:E,mac:S},_);return d(s),K}v(s,"incorrect usage")}function E(e,t,r,a,n,_){var s=[];p(_);var c=null;void 0!=e&&(c=i(e=f(s,e,"secret_nonce")),e.length,s.push(c));var o=i(t=f(s,t,"ciphertext")),u=t.length;s.push(o);var l=null,b=0;void 0!=r&&(l=i(r=f(s,r,"additional_data")),b=r.length,s.push(l)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(u-kt._crypto_aead_chacha20poly1305_ietf_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_chacha20poly1305_ietf_decrypt(T,null,c,o,u,0,l,b,0,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function T(e,t,r,a,n,_,s){var c=[];p(s);var o=null;void 0!=e&&(o=i(e=f(c,e,"secret_nonce")),e.length,c.push(o));var u=i(t=f(c,t,"ciphertext")),l=t.length;c.push(u),r=f(c,r,"mac");var b,m=0|kt._crypto_box_macbytes();r.length!==m&&g(c,"invalid mac length"),b=i(r),c.push(b);var k=null,x=0;void 0!=a&&(k=i(a=f(c,a,"additional_data")),x=a.length,c.push(k)),n=f(c,n,"public_nonce");var w,E=0|kt._crypto_aead_chacha20poly1305_ietf_npubbytes();n.length!==E&&g(c,"invalid public_nonce length"),w=i(n),c.push(w),_=f(c,_,"key");var T,S=0|kt._crypto_aead_chacha20poly1305_ietf_keybytes();_.length!==S&&g(c,"invalid key length"),T=i(_),c.push(T);var Y=new y(0|l),K=Y.address;if(c.push(K),0===kt._crypto_aead_chacha20poly1305_ietf_decrypt_detached(K,o,u,l,0,b,k,x,0,w,T)){var A=h(Y,s);return d(c),A}v(c,"incorrect usage")}function S(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(o+kt._crypto_aead_chacha20poly1305_ietf_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_chacha20poly1305_ietf_encrypt(T,null,c,o,0,u,l,0,b,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function Y(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_chacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(0|o),T=E.address;s.push(T);var S=new y(0|kt._crypto_aead_chacha20poly1305_ietf_abytes()),Y=S.address;if(s.push(Y),0===kt._crypto_aead_chacha20poly1305_ietf_encrypt_detached(T,Y,null,c,o,0,u,l,0,b,m,x)){var K=h({ciphertext:E,mac:S},_);return d(s),K}v(s,"incorrect usage")}function K(e){var t=[];p(e);var r=new y(0|kt._crypto_aead_chacha20poly1305_ietf_keybytes()),a=r.address;t.push(a),kt._crypto_aead_chacha20poly1305_ietf_keygen(a);var n=h(r,e);return d(t),n}function A(e){var t=[];p(e);var r=new y(0|kt._crypto_aead_chacha20poly1305_keybytes()),a=r.address;t.push(a),kt._crypto_aead_chacha20poly1305_keygen(a);var n=h(r,e);return d(t),n}function I(e,t,r,a,n,_){var s=[];p(_);var c=null;void 0!=e&&(c=i(e=f(s,e,"secret_nonce")),e.length,s.push(c));var o=i(t=f(s,t,"ciphertext")),u=t.length;s.push(o);var l=null,b=0;void 0!=r&&(l=i(r=f(s,r,"additional_data")),b=r.length,s.push(l)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_xchacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(u-kt._crypto_aead_xchacha20poly1305_ietf_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_xchacha20poly1305_ietf_decrypt(T,null,c,o,u,0,l,b,0,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function B(e,t,r,a,n,_,s){var c=[];p(s);var o=null;void 0!=e&&(o=i(e=f(c,e,"secret_nonce")),e.length,c.push(o));var u=i(t=f(c,t,"ciphertext")),l=t.length;c.push(u),r=f(c,r,"mac");var b,m=0|kt._crypto_box_macbytes();r.length!==m&&g(c,"invalid mac length"),b=i(r),c.push(b);var k=null,x=0;void 0!=a&&(k=i(a=f(c,a,"additional_data")),x=a.length,c.push(k)),n=f(c,n,"public_nonce");var w,E=0|kt._crypto_aead_xchacha20poly1305_ietf_npubbytes();n.length!==E&&g(c,"invalid public_nonce length"),w=i(n),c.push(w),_=f(c,_,"key");var T,S=0|kt._crypto_aead_xchacha20poly1305_ietf_keybytes();_.length!==S&&g(c,"invalid key length"),T=i(_),c.push(T);var Y=new y(0|l),K=Y.address;if(c.push(K),0===kt._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(K,o,u,l,0,b,k,x,0,w,T)){var A=h(Y,s);return d(c),A}v(c,"incorrect usage")}function M(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_xchacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(o+kt._crypto_aead_xchacha20poly1305_ietf_abytes()|0),T=E.address;if(s.push(T),0===kt._crypto_aead_xchacha20poly1305_ietf_encrypt(T,null,c,o,0,u,l,0,b,m,x)){var S=h(E,_);return d(s),S}v(s,"incorrect usage")}function L(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"message")),o=e.length;s.push(c);var u=null,l=0;void 0!=t&&(u=i(t=f(s,t,"additional_data")),l=t.length,s.push(u));var b=null;void 0!=r&&(b=i(r=f(s,r,"secret_nonce")),r.length,s.push(b)),a=f(s,a,"public_nonce");var m,k=0|kt._crypto_aead_xchacha20poly1305_ietf_npubbytes();a.length!==k&&g(s,"invalid public_nonce length"),m=i(a),s.push(m),n=f(s,n,"key");var x,w=0|kt._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==w&&g(s,"invalid key length"),x=i(n),s.push(x);var E=new y(0|o),T=E.address;s.push(T);var S=new y(0|kt._crypto_aead_xchacha20poly1305_ietf_abytes()),Y=S.address;if(s.push(Y),0===kt._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(T,Y,null,c,o,0,u,l,0,b,m,x)){var K=h({ciphertext:E,mac:S},_);return d(s),K}v(s,"incorrect usage")}function N(e){var t=[];p(e);var r=new y(0|kt._crypto_aead_xchacha20poly1305_ietf_keybytes()),a=r.address;t.push(a),kt._crypto_aead_xchacha20poly1305_ietf_keygen(a);var n=h(r,e);return d(t),n}function U(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_auth_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_auth_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_auth(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function R(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_auth_hmacsha256_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_auth_hmacsha256_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_auth_hmacsha256(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function O(e){var t=[];p(e);var r=new y(0|kt._crypto_auth_hmacsha256_keybytes()),a=r.address;t.push(a),kt._crypto_auth_hmacsha256_keygen(a);var n=h(r,e);return d(t),n}function P(e,t,r){var a=[];e=f(a,e,"tag");var n,_=0|kt._crypto_auth_hmacsha256_bytes();e.length!==_&&g(a,"invalid tag length"),n=i(e),a.push(n);var s=i(t=f(a,t,"message")),c=t.length;a.push(s),r=f(a,r,"key");var h,o=0|kt._crypto_auth_hmacsha256_keybytes();r.length!==o&&g(a,"invalid key length"),h=i(r),a.push(h);var p=0===(0|kt._crypto_auth_hmacsha256_verify(n,s,c,0,h));return d(a),p}function C(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_auth_hmacsha512_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_auth_hmacsha512_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_auth_hmacsha512(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function D(e){var t=[];p(e);var r=new y(0|kt._crypto_auth_hmacsha512_keybytes()),a=r.address;t.push(a),kt._crypto_auth_hmacsha512_keygen(a);var n=h(r,e);return d(t),n}function G(e,t,r){var a=[];e=f(a,e,"tag");var n,_=0|kt._crypto_auth_hmacsha512_bytes();e.length!==_&&g(a,"invalid tag length"),n=i(e),a.push(n);var s=i(t=f(a,t,"message")),c=t.length;a.push(s),r=f(a,r,"key");var h,o=0|kt._crypto_auth_hmacsha512_keybytes();r.length!==o&&g(a,"invalid key length"),h=i(r),a.push(h);var p=0===(0|kt._crypto_auth_hmacsha512_verify(n,s,c,0,h));return d(a),p}function V(e){var t=[];p(e);var r=new y(0|kt._crypto_auth_keybytes()),a=r.address;t.push(a),kt._crypto_auth_keygen(a);var n=h(r,e);return d(t),n}function F(e,t,r){var a=[];e=f(a,e,"tag");var n,_=0|kt._crypto_auth_bytes();e.length!==_&&g(a,"invalid tag length"),n=i(e),a.push(n);var s=i(t=f(a,t,"message")),c=t.length;a.push(s),r=f(a,r,"key");var h,o=0|kt._crypto_auth_keybytes();r.length!==o&&g(a,"invalid key length"),h=i(r),a.push(h);var p=0===(0|kt._crypto_auth_verify(n,s,c,0,h));return d(a),p}function X(e,t,r){var a=[];p(r),e=f(a,e,"publicKey");var n,_=0|kt._crypto_box_publickeybytes();e.length!==_&&g(a,"invalid publicKey length"),n=i(e),a.push(n),t=f(a,t,"privateKey");var s,c=0|kt._crypto_box_secretkeybytes();t.length!==c&&g(a,"invalid privateKey length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_box_beforenmbytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_box_beforenm(u,n,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function H(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"message")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_box_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),r=f(_,r,"publicKey");var l,b=0|kt._crypto_box_publickeybytes();r.length!==b&&g(_,"invalid publicKey length"),l=i(r),_.push(l),a=f(_,a,"privateKey");var m,k=0|kt._crypto_box_secretkeybytes();a.length!==k&&g(_,"invalid privateKey length"),m=i(a),_.push(m);var x=new y(0|c),w=x.address;_.push(w);var E=new y(0|kt._crypto_box_macbytes()),T=E.address;if(_.push(T),0==(0|kt._crypto_box_detached(w,T,s,c,0,o,l,m))){var S=h({ciphertext:x,mac:E},n);return d(_),S}v(_,"incorrect usage")}function j(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"message")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_box_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),r=f(_,r,"publicKey");var l,b=0|kt._crypto_box_publickeybytes();r.length!==b&&g(_,"invalid publicKey length"),l=i(r),_.push(l),a=f(_,a,"privateKey");var m,k=0|kt._crypto_box_secretkeybytes();a.length!==k&&g(_,"invalid privateKey length"),m=i(a),_.push(m);var x=new y(c+kt._crypto_box_macbytes()|0),w=x.address;if(_.push(w),0==(0|kt._crypto_box_easy(w,s,c,0,o,l,m))){var E=h(x,n);return d(_),E}v(_,"incorrect usage")}function z(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_box_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"sharedKey");var u,l=0|kt._crypto_box_beforenmbytes();r.length!==l&&g(n,"invalid sharedKey length"),u=i(r),n.push(u);var b=new y(s+kt._crypto_box_macbytes()|0),m=b.address;if(n.push(m),0==(0|kt._crypto_box_easy_afternm(m,_,s,0,c,u))){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function W(e){var t=[];p(e);var r=new y(0|kt._crypto_box_publickeybytes()),a=r.address;t.push(a);var n=new y(0|kt._crypto_box_secretkeybytes()),_=n.address;if(t.push(_),0==(0|kt._crypto_box_keypair(a,_))){var s={publicKey:h(r,e),privateKey:h(n,e),keyType:"x25519"};return d(t),s}v(t,"incorrect usage")}function J(e,t,r,a,n,_){var s=[];p(_);var c=i(e=f(s,e,"ciphertext")),o=e.length;s.push(c),t=f(s,t,"mac");var u,l=0|kt._crypto_box_macbytes();t.length!==l&&g(s,"invalid mac length"),u=i(t),s.push(u),r=f(s,r,"nonce");var b,m=0|kt._crypto_box_noncebytes();r.length!==m&&g(s,"invalid nonce length"),b=i(r),s.push(b),a=f(s,a,"publicKey");var k,x=0|kt._crypto_box_publickeybytes();a.length!==x&&g(s,"invalid publicKey length"),k=i(a),s.push(k),n=f(s,n,"privateKey");var w,E=0|kt._crypto_box_secretkeybytes();n.length!==E&&g(s,"invalid privateKey length"),w=i(n),s.push(w);var T=new y(0|o),S=T.address;if(s.push(S),0==(0|kt._crypto_box_open_detached(S,c,u,o,0,b,k,w))){var Y=h(T,_);return d(s),Y}v(s,"incorrect usage")}function q(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"ciphertext")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_box_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),r=f(_,r,"publicKey");var l,b=0|kt._crypto_box_publickeybytes();r.length!==b&&g(_,"invalid publicKey length"),l=i(r),_.push(l),a=f(_,a,"privateKey");var m,k=0|kt._crypto_box_secretkeybytes();a.length!==k&&g(_,"invalid privateKey length"),m=i(a),_.push(m);var x=new y(c-kt._crypto_box_macbytes()|0),w=x.address;if(_.push(w),0==(0|kt._crypto_box_open_easy(w,s,c,0,o,l,m))){var E=h(x,n);return d(_),E}v(_,"incorrect usage")}function Q(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"ciphertext")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_box_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"sharedKey");var u,l=0|kt._crypto_box_beforenmbytes();r.length!==l&&g(n,"invalid sharedKey length"),u=i(r),n.push(u);var b=new y(s-kt._crypto_box_macbytes()|0),m=b.address;if(n.push(m),0==(0|kt._crypto_box_open_easy_afternm(m,_,s,0,c,u))){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function Z(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"publicKey");var s,c=0|kt._crypto_box_publickeybytes();t.length!==c&&g(a,"invalid publicKey length"),s=i(t),a.push(s);var o=new y(_+kt._crypto_box_sealbytes()|0),u=o.address;if(a.push(u),0==(0|kt._crypto_box_seal(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function $(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"ciphertext")),s=e.length;n.push(_),t=f(n,t,"publicKey");var c,o=0|kt._crypto_box_publickeybytes();t.length!==o&&g(n,"invalid publicKey length"),c=i(t),n.push(c),r=f(n,r,"privateKey");var u,l=0|kt._crypto_box_secretkeybytes();r.length!==l&&g(n,"invalid privateKey length"),u=i(r),n.push(u);var b=new y(s-kt._crypto_box_sealbytes()|0),m=b.address;if(n.push(m),0==(0|kt._crypto_box_seal_open(m,_,s,0,c,u))){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function ee(e,t){var r=[];p(t),e=f(r,e,"seed");var a,n=0|kt._crypto_box_seedbytes();e.length!==n&&g(r,"invalid seed length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_box_publickeybytes()),s=_.address;r.push(s);var c=new y(0|kt._crypto_box_secretkeybytes()),o=c.address;if(r.push(o),0==(0|kt._crypto_box_seed_keypair(s,o,a))){var u={publicKey:h(_,t),privateKey:h(c,t),keyType:"x25519"};return d(r),u}v(r,"incorrect usage")}function te(e,t,r,a){var n=[];p(a),b(n,e,"hash_length"),("number"!=typeof e||(0|e)!==e||e<0)&&g(n,"hash_length must be an unsigned integer");var _=i(t=f(n,t,"message")),s=t.length;n.push(_);var c=null,o=0;void 0!=r&&(c=i(r=f(n,r,"key")),o=r.length,n.push(c));var u=new y(e=0|e),l=u.address;if(n.push(l),0==(0|kt._crypto_generichash(l,e,_,s,0,c,o))){var m=h(u,a);return d(n),m}v(n,"incorrect usage")}function re(e,t,r){var a=[];p(r),b(a,e,"state_address"),b(a,t,"hash_length"),("number"!=typeof t||(0|t)!==t||t<0)&&g(a,"hash_length must be an unsigned integer");var n=new y(t=0|t),_=n.address;if(a.push(_),0==(0|kt._crypto_generichash_final(e,_,t))){var s=(kt._free(e),h(n,r));return d(a),s}v(a,"incorrect usage")}function ae(e,t,r){var a=[];p(r);var n=null,_=0;void 0!=e&&(n=i(e=f(a,e,"key")),_=e.length,a.push(n)),b(a,t,"hash_length"),("number"!=typeof t||(0|t)!==t||t<0)&&g(a,"hash_length must be an unsigned integer");var s=new y(357).address;if(0==(0|kt._crypto_generichash_init(s,n,_,t))){var c=s;return d(a),c}v(a,"incorrect usage")}function ne(e){var t=[];p(e);var r=new y(0|kt._crypto_generichash_keybytes()),a=r.address;t.push(a),kt._crypto_generichash_keygen(a);var n=h(r,e);return d(t),n}function _e(e,t,r){var a=[];p(r),b(a,e,"state_address");var n=i(t=f(a,t,"message_chunk")),_=t.length;a.push(n),0!=(0|kt._crypto_generichash_update(e,n,_))?v(a,"incorrect usage"):d(a)}function se(e,t){var r=[];p(t);var a=i(e=f(r,e,"message")),n=e.length;r.push(a);var _=new y(0|kt._crypto_hash_bytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_hash(s,a,n,0))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function ce(e,t){var r=[];p(t);var a=i(e=f(r,e,"message")),n=e.length;r.push(a);var _=new y(0|kt._crypto_hash_sha256_bytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_hash_sha256(s,a,n,0))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function he(e,t){var r=[];p(t);var a=i(e=f(r,e,"message")),n=e.length;r.push(a);var _=new y(0|kt._crypto_hash_sha512_bytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_hash_sha512(s,a,n,0))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function oe(e,t,a,n,_){var s=[];p(_),b(s,e,"subkey_len"),("number"!=typeof e||(0|e)!==e||e<0)&&g(s,"subkey_len must be an unsigned integer"),b(s,t,"subkey_id"),("number"!=typeof t||(0|t)!==t||t<0)&&g(s,"subkey_id must be an unsigned integer");var c=i(a=r(a+"\0"));a.length;s.push(c),n=f(s,n,"key");var o,u=0|kt._crypto_kdf_keybytes();n.length!==u&&g(s,"invalid key length"),o=i(n),s.push(o);var l=new y(0|e),v=l.address;s.push(v),kt._crypto_kdf_derive_from_key(v,e,t,0,c,o);var m=h(l,_);return d(s),m}function pe(e){var t=[];p(e);var r=new y(0|kt._crypto_kdf_keybytes()),a=r.address;t.push(a),kt._crypto_kdf_keygen(a);var n=h(r,e);return d(t),n}function ye(e,t,r,a){var n=[];p(a),e=f(n,e,"clientPublicKey");var _,s=0|kt._crypto_kx_publickeybytes();e.length!==s&&g(n,"invalid clientPublicKey length"),_=i(e),n.push(_),t=f(n,t,"clientSecretKey");var c,o=0|kt._crypto_kx_secretkeybytes();t.length!==o&&g(n,"invalid clientSecretKey length"),c=i(t),n.push(c),r=f(n,r,"serverPublicKey");var u,l=0|kt._crypto_kx_publickeybytes();r.length!==l&&g(n,"invalid serverPublicKey length"),u=i(r),n.push(u);var b=new y(0|kt._crypto_kx_sessionkeybytes()),m=b.address;n.push(m);var k=new y(0|kt._crypto_kx_sessionkeybytes()),x=k.address;if(n.push(x),0==(0|kt._crypto_kx_client_session_keys(m,x,_,c,u))){var w=h({sharedRx:b,sharedTx:k},a);return d(n),w}v(n,"incorrect usage")}function ie(e){var t=[];p(e);var r=new y(0|kt._crypto_kx_publickeybytes()),a=r.address;t.push(a);var n=new y(0|kt._crypto_kx_secretkeybytes()),_=n.address;if(t.push(_),0==(0|kt._crypto_kx_keypair(a,_))){var s={publicKey:h(r,e),privateKey:h(n,e),keyType:"x25519"};return d(t),s}v(t,"incorrect usage")}function ue(e,t){var r=[];p(t),e=f(r,e,"seed");var a,n=0|kt._crypto_kx_seedbytes();e.length!==n&&g(r,"invalid seed length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_kx_publickeybytes()),s=_.address;r.push(s);var c=new y(0|kt._crypto_kx_secretkeybytes()),o=c.address;if(r.push(o),0==(0|kt._crypto_kx_seed_keypair(s,o,a))){var u={publicKey:h(_,t),privateKey:h(c,t),keyType:"x25519"};return d(r),u}v(r,"incorrect usage")}function le(e,t,r,a){var n=[];p(a),e=f(n,e,"serverPublicKey");var _,s=0|kt._crypto_kx_publickeybytes();e.length!==s&&g(n,"invalid serverPublicKey length"),_=i(e),n.push(_),t=f(n,t,"serverSecretKey");var c,o=0|kt._crypto_kx_secretkeybytes();t.length!==o&&g(n,"invalid serverSecretKey length"),c=i(t),n.push(c),r=f(n,r,"clientPublicKey");var u,l=0|kt._crypto_kx_publickeybytes();r.length!==l&&g(n,"invalid clientPublicKey length"),u=i(r),n.push(u);var b=new y(0|kt._crypto_kx_sessionkeybytes()),m=b.address;n.push(m);var k=new y(0|kt._crypto_kx_sessionkeybytes()),x=k.address;if(n.push(x),0==(0|kt._crypto_kx_server_session_keys(m,x,_,c,u))){var w=h({sharedRx:b,sharedTx:k},a);return d(n),w}v(n,"incorrect usage")}function de(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_onetimeauth_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_onetimeauth_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_onetimeauth(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function ve(e,t){var r=[];p(t),b(r,e,"state_address");var a=new y(0|kt._crypto_onetimeauth_bytes()),n=a.address;if(r.push(n),0==(0|kt._crypto_onetimeauth_final(e,n))){var _=(kt._free(e),h(a,t));return d(r),_}v(r,"incorrect usage")}function ge(e,t){var r=[];p(t);var a=null;void 0!=e&&(a=i(e=f(r,e,"key")),e.length,r.push(a));var n=new y(144).address;if(0==(0|kt._crypto_onetimeauth_init(n,a))){var _=n;return d(r),_}v(r,"incorrect usage")}function be(e){var t=[];p(e);var r=new y(0|kt._crypto_onetimeauth_keybytes()),a=r.address;t.push(a),kt._crypto_onetimeauth_keygen(a);var n=h(r,e);return d(t),n}function fe(e,t,r){var a=[];p(r),b(a,e,"state_address");var n=i(t=f(a,t,"message_chunk")),_=t.length;a.push(n),0!=(0|kt._crypto_onetimeauth_update(e,n,_))?v(a,"incorrect usage"):d(a)}function me(e,t,r){var a=[];e=f(a,e,"hash");var n,_=0|kt._crypto_onetimeauth_bytes();e.length!==_&&g(a,"invalid hash length"),n=i(e),a.push(n);var s=i(t=f(a,t,"message")),c=t.length;a.push(s),r=f(a,r,"key");var h,o=0|kt._crypto_onetimeauth_keybytes();r.length!==o&&g(a,"invalid key length"),h=i(r),a.push(h);var p=0===(0|kt._crypto_onetimeauth_verify(n,s,c,0,h));return d(a),p}function ke(e,t,r,a,n,_,s){var c=[];p(s),b(c,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&g(c,"keyLength must be an unsigned integer");var o=i(t=f(c,t,"password")),u=t.length;c.push(o),r=f(c,r,"salt");var l,m=0|kt._crypto_pwhash_saltbytes();r.length!==m&&g(c,"invalid salt length"),l=i(r),c.push(l),b(c,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&g(c,"opsLimit must be an unsigned integer"),b(c,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&g(c,"memLimit must be an unsigned integer"),b(c,_,"algorithm"),("number"!=typeof _||(0|_)!==_||_<0)&&g(c,"algorithm must be an unsigned integer");var k=new y(0|e),x=k.address;if(c.push(x),0==(0|kt._crypto_pwhash(x,e,0,o,u,0,l,a,0,n,_))){var w=h(k,s);return d(c),w}v(c,"incorrect usage")}function xe(e,t,r,a,n,_){var s=[];p(_),b(s,e,"keyLength"),("number"!=typeof e||(0|e)!==e||e<0)&&g(s,"keyLength must be an unsigned integer");var c=i(t=f(s,t,"password")),o=t.length;s.push(c),r=f(s,r,"salt");var u,l=0|kt._crypto_pwhash_scryptsalsa208sha256_saltbytes();r.length!==l&&g(s,"invalid salt length"),u=i(r),s.push(u),b(s,a,"opsLimit"),("number"!=typeof a||(0|a)!==a||a<0)&&g(s,"opsLimit must be an unsigned integer"),b(s,n,"memLimit"),("number"!=typeof n||(0|n)!==n||n<0)&&g(s,"memLimit must be an unsigned integer");var m=new y(0|e),k=m.address;if(s.push(k),0==(0|kt._crypto_pwhash_scryptsalsa208sha256(k,e,0,c,o,0,u,a,0,n))){var x=h(m,_);return d(s),x}v(s,"incorrect usage")}function we(e,t,r,a,n,_,s){var c=[];p(s);var o=i(e=f(c,e,"password")),u=e.length;c.push(o);var l=i(t=f(c,t,"salt")),m=t.length;c.push(l),b(c,r,"opsLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&g(c,"opsLimit must be an unsigned integer"),b(c,a,"r"),("number"!=typeof a||(0|a)!==a||a<0)&&g(c,"r must be an unsigned integer"),b(c,n,"p"),("number"!=typeof n||(0|n)!==n||n<0)&&g(c,"p must be an unsigned integer"),b(c,_,"keyLength"),("number"!=typeof _||(0|_)!==_||_<0)&&g(c,"keyLength must be an unsigned integer");var k=new y(0|_),x=k.address;if(c.push(x),0==(0|kt._crypto_pwhash_scryptsalsa208sha256_ll(o,u,l,m,r,0,a,n,x,_))){var w=h(k,s);return d(c),w}v(c,"incorrect usage")}function Ee(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"password")),s=e.length;n.push(_),b(n,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&g(n,"opsLimit must be an unsigned integer"),b(n,r,"memLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&g(n,"memLimit must be an unsigned integer");var c=new y(0|kt._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;if(n.push(c),0==(0|kt._crypto_pwhash_scryptsalsa208sha256_str(c,_,s,0,t,0,r))){var h=kt.Pointer_stringify(c);return d(n),h}v(n,"incorrect usage")}function Te(e,t,a){var n=[];p(a);var _=i(e=r(e+"\0"));e.length;n.push(_);var s=i(t=f(n,t,"password")),c=t.length;n.push(s);var h=0===(0|kt._crypto_pwhash_scryptsalsa208sha256_str_verify(_,s,c,0));return d(n),h}function Se(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"password")),s=e.length;n.push(_),b(n,t,"opsLimit"),("number"!=typeof t||(0|t)!==t||t<0)&&g(n,"opsLimit must be an unsigned integer"),b(n,r,"memLimit"),("number"!=typeof r||(0|r)!==r||r<0)&&g(n,"memLimit must be an unsigned integer");var c=new y(0|kt._crypto_pwhash_strbytes()).address;if(n.push(c),0==(0|kt._crypto_pwhash_str(c,_,s,0,t,0,r))){var h=kt.Pointer_stringify(c);return d(n),h}v(n,"incorrect usage")}function Ye(e,t,a){var n=[];p(a);var _=i(e=r(e+"\0"));e.length;n.push(_);var s=i(t=f(n,t,"password")),c=t.length;n.push(s);var h=0===(0|kt._crypto_pwhash_str_verify(_,s,c,0));return d(n),h}function Ke(e,t,r){var a=[];p(r),e=f(a,e,"privateKey");var n,_=0|kt._crypto_scalarmult_scalarbytes();e.length!==_&&g(a,"invalid privateKey length"),n=i(e),a.push(n),t=f(a,t,"publicKey");var s,c=0|kt._crypto_scalarmult_scalarbytes();t.length!==c&&g(a,"invalid publicKey length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_scalarmult_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_scalarmult(u,n,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function Ae(e,t){var r=[];p(t),e=f(r,e,"privateKey");var a,n=0|kt._crypto_scalarmult_scalarbytes();e.length!==n&&g(r,"invalid privateKey length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_scalarmult_scalarbytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_scalarmult_base(s,a))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function Ie(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_secretbox_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_secretbox_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(0|s),m=b.address;n.push(m);var k=new y(0|kt._crypto_secretbox_macbytes()),x=k.address;if(n.push(x),0==(0|kt._crypto_secretbox_detached(m,x,_,s,0,c,u))){var w=h({mac:k,cipher:b},a);return d(n),w}v(n,"incorrect usage")}function Be(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_secretbox_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_secretbox_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(s+kt._crypto_secretbox_macbytes()|0),m=b.address;if(n.push(m),0==(0|kt._crypto_secretbox_easy(m,_,s,0,c,u))){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function Me(e){var t=[];p(e);var r=new y(0|kt._crypto_secretbox_keybytes()),a=r.address;t.push(a),kt._crypto_secretbox_keygen(a);var n=h(r,e);return d(t),n}function Le(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"ciphertext")),c=e.length;_.push(s),t=f(_,t,"mac");var o,u=0|kt._crypto_secretbox_macbytes();t.length!==u&&g(_,"invalid mac length"),o=i(t),_.push(o),r=f(_,r,"nonce");var l,b=0|kt._crypto_secretbox_noncebytes();r.length!==b&&g(_,"invalid nonce length"),l=i(r),_.push(l),a=f(_,a,"key");var m,k=0|kt._crypto_secretbox_keybytes();a.length!==k&&g(_,"invalid key length"),m=i(a),_.push(m);var x=new y(0|c),w=x.address;if(_.push(w),0==(0|kt._crypto_secretbox_open_detached(w,s,o,c,0,l,m))){var E=h(x,n);return d(_),E}v(_,"incorrect usage")}function Ne(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"ciphertext")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_secretbox_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_secretbox_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(s-kt._crypto_secretbox_macbytes()|0),m=b.address;if(n.push(m),0==(0|kt._crypto_secretbox_open_easy(m,_,s,0,c,u))){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function Ue(e,t,r){var a=[];p(r),e=f(a,e,"header");var n,_=0|kt._crypto_secretstream_xchacha20poly1305_headerbytes();e.length!==_&&g(a,"invalid header length"),n=i(e),a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_secretstream_xchacha20poly1305_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var h=new y(52).address;if(0==(0|kt._crypto_secretstream_xchacha20poly1305_init_pull(h,n,s))){var o=h;return d(a),o}v(a,"incorrect usage")}function Re(e,t){var r=[];p(t),e=f(r,e,"key");var a,n=0|kt._crypto_secretstream_xchacha20poly1305_keybytes();e.length!==n&&g(r,"invalid key length"),a=i(e),r.push(a);var _=new y(52).address,s=new y(0|kt._crypto_secretstream_xchacha20poly1305_headerbytes()),c=s.address;if(r.push(c),0==(0|kt._crypto_secretstream_xchacha20poly1305_init_push(_,c,a))){var o={state:_,header:h(s,t)};return d(r),o}v(r,"incorrect usage")}function Oe(e){var t=[];p(e);var r=new y(0|kt._crypto_secretstream_xchacha20poly1305_keybytes()),a=r.address;t.push(a),kt._crypto_secretstream_xchacha20poly1305_keygen(a);var n=h(r,e);return d(t),n}function Pe(e,t,r,a){var n=[];p(a),b(n,e,"state_address");var _=i(t=f(n,t,"cipher")),s=t.length;n.push(_);var c=null,o=0;void 0!=r&&(r=f(n,r,"ad"),c=i(r),o=r.length,n.push(c));var l=new y(s-kt._crypto_secretstream_xchacha20poly1305_abytes()|0),v=l.address;n.push(v);var g=(g=function(){var t=u(1);return n.push(t),0===kt._crypto_secretstream_xchacha20poly1305_pull(e,v,0,t,_,s,0,c,o)&&{tag:kt.HEAPU8[t],message:l}}())&&{message:h(g.message,a),tag:g.tag};return d(n),g}function Ce(e,t,r,a,n){var _=[];p(n),b(_,e,"state_address");var s=i(t=f(_,t,"message_chunk")),c=t.length;_.push(s);var o=null,u=0;void 0!=r&&(o=i(r=f(_,r,"ad")),u=r.length,_.push(o)),b(_,a,"tag"),("number"!=typeof a||(0|a)!==a||a<0)&&g(_,"tag must be an unsigned integer");var l=new y(c+kt._crypto_secretstream_xchacha20poly1305_abytes()|0),m=l.address;if(_.push(m),0==(0|kt._crypto_secretstream_xchacha20poly1305_push(e,m,0,s,c,0,o,u,0,a))){var k=h(l,n);return d(_),k}v(_,"incorrect usage")}function De(e,t){var r=[];p(t),b(r,e,"state_address"),kt._crypto_secretstream_xchacha20poly1305_rekey(e);return d(r),!0}function Ge(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_shorthash_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_shorthash_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_shorthash(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function Ve(e){var t=[];p(e);var r=new y(0|kt._crypto_shorthash_keybytes()),a=r.address;t.push(a),kt._crypto_shorthash_keygen(a);var n=h(r,e);return d(t),n}function Fe(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"key");var s,c=0|kt._crypto_shorthash_siphashx24_keybytes();t.length!==c&&g(a,"invalid key length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_shorthash_siphashx24_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_shorthash_siphashx24(u,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function Xe(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"privateKey");var s,c=0|kt._crypto_sign_secretkeybytes();t.length!==c&&g(a,"invalid privateKey length"),s=i(t),a.push(s);var o=new y(e.length+kt._crypto_sign_bytes()|0),u=o.address;if(a.push(u),0==(0|kt._crypto_sign(u,null,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function He(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"message")),_=e.length;a.push(n),t=f(a,t,"privateKey");var s,c=0|kt._crypto_sign_secretkeybytes();t.length!==c&&g(a,"invalid privateKey length"),s=i(t),a.push(s);var o=new y(0|kt._crypto_sign_bytes()),u=o.address;if(a.push(u),0==(0|kt._crypto_sign_detached(u,null,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function je(e,t){var r=[];p(t),e=f(r,e,"edPk");var a,n=0|kt._crypto_sign_publickeybytes();e.length!==n&&g(r,"invalid edPk length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_scalarmult_scalarbytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_sign_ed25519_pk_to_curve25519(s,a))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function ze(e,t){var r=[];p(t),e=f(r,e,"edSk");var a,n=0|kt._crypto_sign_secretkeybytes();e.length!==n&&g(r,"invalid edSk length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_scalarmult_scalarbytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_sign_ed25519_sk_to_curve25519(s,a))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function We(e,t){var r=[];p(t),e=f(r,e,"privateKey");var a,n=0|kt._crypto_sign_secretkeybytes();e.length!==n&&g(r,"invalid privateKey length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_sign_publickeybytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_sign_ed25519_sk_to_pk(s,a))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function Je(e,t){var r=[];p(t),e=f(r,e,"privateKey");var a,n=0|kt._crypto_sign_secretkeybytes();e.length!==n&&g(r,"invalid privateKey length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_sign_seedbytes()),s=_.address;if(r.push(s),0==(0|kt._crypto_sign_ed25519_sk_to_seed(s,a))){var c=h(_,t);return d(r),c}v(r,"incorrect usage")}function qe(e,t,r){var a=[];p(r),b(a,e,"state_address"),t=f(a,t,"privateKey");var n,_=0|kt._crypto_sign_secretkeybytes();t.length!==_&&g(a,"invalid privateKey length"),n=i(t),a.push(n);var s=new y(0|kt._crypto_sign_bytes()),c=s.address;if(a.push(c),0==(0|kt._crypto_sign_final_create(e,c,null,n))){var o=(kt._free(e),h(s,r));return d(a),o}v(a,"incorrect usage")}function Qe(e,t,r,a){var n=[];p(a),b(n,e,"state_address"),t=f(n,t,"signature");var _,s=0|kt._crypto_sign_bytes();t.length!==s&&g(n,"invalid signature length"),_=i(t),n.push(_),r=f(n,r,"publicKey");var c,h=0|kt._crypto_sign_publickeybytes();r.length!==h&&g(n,"invalid publicKey length"),c=i(r),n.push(c);var o=0===(0|kt._crypto_sign_final_verify(e,_,c));return d(n),o}function Ze(e){var t=[];p(e);var r=new y(208).address;if(0==(0|kt._crypto_sign_init(r))){var a=r;return d(t),a}v(t,"incorrect usage")}function $e(e){var t=[];p(e);var r=new y(0|kt._crypto_sign_publickeybytes()),a=r.address;t.push(a);var n=new y(0|kt._crypto_sign_secretkeybytes()),_=n.address;if(t.push(_),0==(0|kt._crypto_sign_keypair(a,_))){var s={publicKey:h(r,e),privateKey:h(n,e),keyType:"ed25519"};return d(t),s}v(t,"incorrect usage")}function et(e,t,r){var a=[];p(r);var n=i(e=f(a,e,"signedMessage")),_=e.length;a.push(n),t=f(a,t,"publicKey");var s,c=0|kt._crypto_sign_publickeybytes();t.length!==c&&g(a,"invalid publicKey length"),s=i(t),a.push(s);var o=new y(_-kt._crypto_sign_bytes()|0),u=o.address;if(a.push(u),0==(0|kt._crypto_sign_open(u,null,n,_,0,s))){var l=h(o,r);return d(a),l}v(a,"incorrect usage")}function tt(e,t){var r=[];p(t),e=f(r,e,"seed");var a,n=0|kt._crypto_sign_seedbytes();e.length!==n&&g(r,"invalid seed length"),a=i(e),r.push(a);var _=new y(0|kt._crypto_sign_publickeybytes()),s=_.address;r.push(s);var c=new y(0|kt._crypto_sign_secretkeybytes()),o=c.address;if(r.push(o),0==(0|kt._crypto_sign_seed_keypair(s,o,a))){var u={publicKey:h(_,t),privateKey:h(c,t),keyType:"ed25519"};return d(r),u}v(r,"incorrect usage")}function rt(e,t,r){var a=[];p(r),b(a,e,"state_address");var n=i(t=f(a,t,"message_chunk")),_=t.length;a.push(n),0!=(0|kt._crypto_sign_update(e,n,_))?v(a,"incorrect usage"):d(a)}function at(e,t,r){var a=[];e=f(a,e,"signature");var n,_=0|kt._crypto_sign_bytes();e.length!==_&&g(a,"invalid signature length"),n=i(e),a.push(n);var s=i(t=f(a,t,"message")),c=t.length;a.push(s),r=f(a,r,"publicKey");var h,o=0|kt._crypto_sign_publickeybytes();r.length!==o&&g(a,"invalid publicKey length"),h=i(r),a.push(h);var p=0===(0|kt._crypto_sign_verify_detached(n,s,c,0,h));return d(a),p}function nt(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"input_message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_stream_chacha20_ietf_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_stream_chacha20_ietf_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(0|s),m=b.address;if(n.push(m),0===kt._crypto_stream_chacha20_ietf_xor(m,_,s,0,c,u)){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function _t(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"input_message")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_stream_chacha20_ietf_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),b(_,r,"nonce_increment"),("number"!=typeof r||(0|r)!==r||r<0)&&g(_,"nonce_increment must be an unsigned integer"),a=f(_,a,"key");var l,m=0|kt._crypto_stream_chacha20_ietf_keybytes();a.length!==m&&g(_,"invalid key length"),l=i(a),_.push(l);var k=new y(0|c),x=k.address;if(_.push(x),0===kt._crypto_stream_chacha20_ietf_xor_ic(x,s,c,0,o,r,0,l)){var w=h(k,n);return d(_),w}v(_,"incorrect usage")}function st(e){var t=[];p(e);var r=new y(0|kt._crypto_stream_chacha20_keybytes()),a=r.address;t.push(a),kt._crypto_stream_chacha20_keygen(a);var n=h(r,e);return d(t),n}function ct(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"input_message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_stream_chacha20_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_stream_chacha20_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(0|s),m=b.address;if(n.push(m),0===kt._crypto_stream_chacha20_xor(m,_,s,0,c,u)){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function ht(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"input_message")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_stream_chacha20_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),b(_,r,"nonce_increment"),("number"!=typeof r||(0|r)!==r||r<0)&&g(_,"nonce_increment must be an unsigned integer"),a=f(_,a,"key");var l,m=0|kt._crypto_stream_chacha20_keybytes();a.length!==m&&g(_,"invalid key length"),l=i(a),_.push(l);var k=new y(0|c),x=k.address;if(_.push(x),0===kt._crypto_stream_chacha20_xor_ic(x,s,c,0,o,r,0,l)){var w=h(k,n);return d(_),w}v(_,"incorrect usage")}function ot(e){var t=[];p(e);var r=new y(0|kt._crypto_stream_keybytes()),a=r.address;t.push(a),kt._crypto_stream_keygen(a);var n=h(r,e);return d(t),n}function pt(e){var t=[];p(e);var r=new y(0|kt._crypto_stream_xchacha20_keybytes()),a=r.address;t.push(a),kt._crypto_stream_xchacha20_keygen(a);var n=h(r,e);return d(t),n}function yt(e,t,r,a){var n=[];p(a);var _=i(e=f(n,e,"input_message")),s=e.length;n.push(_),t=f(n,t,"nonce");var c,o=0|kt._crypto_stream_xchacha20_noncebytes();t.length!==o&&g(n,"invalid nonce length"),c=i(t),n.push(c),r=f(n,r,"key");var u,l=0|kt._crypto_stream_xchacha20_keybytes();r.length!==l&&g(n,"invalid key length"),u=i(r),n.push(u);var b=new y(0|s),m=b.address;if(n.push(m),0===kt._crypto_stream_xchacha20_xor(m,_,s,0,c,u)){var k=h(b,a);return d(n),k}v(n,"incorrect usage")}function it(e,t,r,a,n){var _=[];p(n);var s=i(e=f(_,e,"input_message")),c=e.length;_.push(s),t=f(_,t,"nonce");var o,u=0|kt._crypto_stream_xchacha20_noncebytes();t.length!==u&&g(_,"invalid nonce length"),o=i(t),_.push(o),b(_,r,"nonce_increment"),("number"!=typeof r||(0|r)!==r||r<0)&&g(_,"nonce_increment must be an unsigned integer"),a=f(_,a,"key");var l,m=0|kt._crypto_stream_xchacha20_keybytes();a.length!==m&&g(_,"invalid key length"),l=i(a),_.push(l);var k=new y(0|c),x=k.address;if(_.push(x),0===kt._crypto_stream_xchacha20_xor_ic(x,s,c,0,o,r,0,l)){var w=h(k,n);return d(_),w}v(_,"incorrect usage")}function ut(e,t){var r=[];p(t),b(r,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&g(r,"length must be an unsigned integer");var a=new y(0|e),n=a.address;r.push(n),kt._randombytes_buf(n,e);var _=h(a,t);return d(r),_}function lt(e,t,r){var a=[];p(r),b(a,e,"length"),("number"!=typeof e||(0|e)!==e||e<0)&&g(a,"length must be an unsigned integer"),t=f(a,t,"seed");var n,_=0|kt._randombytes_seedbytes();t.length!==_&&g(a,"invalid seed length"),n=i(t),a.push(n);var s=new y(0|e),c=s.address;a.push(c),kt._randombytes_buf_deterministic(c,e,0,t);var o=h(s,r);return d(a),o}function dt(e){p(e),kt._randombytes_close()}function vt(e){var t=[];p(e);var r=kt._randombytes_random()>>>0;return d(t),r}function gt(e,t){var r=[];p(t);for(var a=kt._malloc(24),n=0;n<6;n++)kt.setValue(a+4*n,kt.Runtime.addFunction(e[["implementation_name","random","stir","uniform","buf","close"][n]]),"i32");0!=(0|kt._randombytes_set_implementation(a))?v(r,"incorrect usage"):d(r)}function bt(e){p(e),kt._randombytes_stir()}function ft(e,t){var r=[];p(t),b(r,e,"upper_bound"),("number"!=typeof e||(0|e)!==e||e<0)&&g(r,"upper_bound must be an unsigned integer");var a=kt._randombytes_uniform(e)>>>0;return d(r),a}function mt(){var e=[],t=kt._sodium_version_string(),r=kt.Pointer_stringify(t);return d(e),r}var kt,xt="uint8array",wt=t.ready.then(function(){if(0!==(kt=t)._sodium_init())throw new Error("libsodium was not correctly initialized.");for(var r=["crypto_aead_chacha20poly1305_decrypt","crypto_aead_chacha20poly1305_decrypt_detached","crypto_aead_chacha20poly1305_encrypt","crypto_aead_chacha20poly1305_encrypt_detached","crypto_aead_chacha20poly1305_ietf_decrypt","crypto_aead_chacha20poly1305_ietf_decrypt_detached","crypto_aead_chacha20poly1305_ietf_encrypt","crypto_aead_chacha20poly1305_ietf_encrypt_detached","crypto_aead_chacha20poly1305_ietf_keygen","crypto_aead_chacha20poly1305_keygen","crypto_aead_xchacha20poly1305_ietf_decrypt","crypto_aead_xchacha20poly1305_ietf_decrypt_detached","crypto_aead_xchacha20poly1305_ietf_encrypt","crypto_aead_xchacha20poly1305_ietf_encrypt_detached","crypto_aead_xchacha20poly1305_ietf_keygen","crypto_auth","crypto_auth_hmacsha256","crypto_auth_hmacsha256_keygen","crypto_auth_hmacsha256_verify","crypto_auth_hmacsha512","crypto_auth_hmacsha512_keygen","crypto_auth_hmacsha512_verify","crypto_auth_keygen","crypto_auth_verify","crypto_box_beforenm","crypto_box_detached","crypto_box_easy","crypto_box_easy_afternm","crypto_box_keypair","crypto_box_open_detached","crypto_box_open_easy","crypto_box_open_easy_afternm","crypto_box_seal","crypto_box_seal_open","crypto_box_seed_keypair","crypto_generichash","crypto_generichash_final","crypto_generichash_init","crypto_generichash_keygen","crypto_generichash_update","crypto_hash","crypto_hash_sha256","crypto_hash_sha512","crypto_kdf_derive_from_key","crypto_kdf_keygen","crypto_kx_client_session_keys","crypto_kx_keypair","crypto_kx_seed_keypair","crypto_kx_server_session_keys","crypto_onetimeauth","crypto_onetimeauth_final","crypto_onetimeauth_init","crypto_onetimeauth_keygen","crypto_onetimeauth_update","crypto_onetimeauth_verify","crypto_pwhash","crypto_pwhash_scryptsalsa208sha256","crypto_pwhash_scryptsalsa208sha256_ll","crypto_pwhash_scryptsalsa208sha256_str","crypto_pwhash_scryptsalsa208sha256_str_verify","crypto_pwhash_str","crypto_pwhash_str_verify","crypto_scalarmult","crypto_scalarmult_base","crypto_secretbox_detached","crypto_secretbox_easy","crypto_secretbox_keygen","crypto_secretbox_open_detached","crypto_secretbox_open_easy","crypto_secretstream_xchacha20poly1305_init_pull","crypto_secretstream_xchacha20poly1305_init_push","crypto_secretstream_xchacha20poly1305_keygen","crypto_secretstream_xchacha20poly1305_pull","crypto_secretstream_xchacha20poly1305_push","crypto_secretstream_xchacha20poly1305_rekey","crypto_shorthash","crypto_shorthash_keygen","crypto_shorthash_siphashx24","crypto_sign","crypto_sign_detached","crypto_sign_ed25519_pk_to_curve25519","crypto_sign_ed25519_sk_to_curve25519","crypto_sign_ed25519_sk_to_pk","crypto_sign_ed25519_sk_to_seed","crypto_sign_final_create","crypto_sign_final_verify","crypto_sign_init","crypto_sign_keypair","crypto_sign_open","crypto_sign_seed_keypair","crypto_sign_update","crypto_sign_verify_detached","crypto_stream_chacha20_ietf_xor","crypto_stream_chacha20_ietf_xor_ic","crypto_stream_chacha20_keygen","crypto_stream_chacha20_xor","crypto_stream_chacha20_xor_ic","crypto_stream_keygen","crypto_stream_xchacha20_keygen","crypto_stream_xchacha20_xor","crypto_stream_xchacha20_xor_ic","randombytes_buf","randombytes_buf_deterministic","randombytes_close","randombytes_random","randombytes_set_implementation","randombytes_stir","randombytes_uniform","sodium_version_string"],a=[m,k,x,w,E,T,S,Y,K,A,I,B,M,L,N,U,R,O,P,C,D,G,V,F,X,H,j,z,W,J,q,Q,Z,$,ee,te,re,ae,ne,_e,se,ce,he,oe,pe,ye,ie,ue,le,de,ve,ge,be,fe,me,ke,xe,we,Ee,Te,Se,Ye,Ke,Ae,Ie,Be,Me,Le,Ne,Ue,Re,Oe,Pe,Ce,De,Ge,Ve,Fe,Xe,He,je,ze,We,Je,qe,Qe,Ze,$e,et,tt,rt,at,nt,_t,st,ct,ht,ot,pt,yt,it,ut,lt,dt,vt,gt,bt,ft,mt],n=0;n<a.length;n++)"function"==typeof kt["_"+r[n]]&&(e[r[n]]=a[n]);for(var _=["SODIUM_LIBRARY_VERSION_MAJOR","SODIUM_LIBRARY_VERSION_MINOR","crypto_aead_chacha20poly1305_ABYTES","crypto_aead_chacha20poly1305_KEYBYTES","crypto_aead_chacha20poly1305_NPUBBYTES","crypto_aead_chacha20poly1305_NSECBYTES","crypto_aead_chacha20poly1305_ietf_ABYTES","crypto_aead_chacha20poly1305_ietf_KEYBYTES","crypto_aead_chacha20poly1305_ietf_NPUBBYTES","crypto_aead_chacha20poly1305_ietf_NSECBYTES","crypto_aead_xchacha20poly1305_ietf_ABYTES","crypto_aead_xchacha20poly1305_ietf_KEYBYTES","crypto_aead_xchacha20poly1305_ietf_NPUBBYTES","crypto_aead_xchacha20poly1305_ietf_NSECBYTES","crypto_auth_BYTES","crypto_auth_KEYBYTES","crypto_auth_hmacsha256_BYTES","crypto_auth_hmacsha256_KEYBYTES","crypto_auth_hmacsha512_BYTES","crypto_auth_hmacsha512_KEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_MACBYTES","crypto_box_NONCEBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SEALBYTES","crypto_box_SECRETKEYBYTES","crypto_box_SEEDBYTES","crypto_generichash_BYTES","crypto_generichash_BYTES_MAX","crypto_generichash_BYTES_MIN","crypto_generichash_KEYBYTES","crypto_generichash_KEYBYTES_MAX","crypto_generichash_KEYBYTES_MIN","crypto_hash_BYTES","crypto_kdf_BYTES_MAX","crypto_kdf_BYTES_MIN","crypto_kdf_CONTEXTBYTES","crypto_kdf_KEYBYTES","crypto_kx_PUBLICKEYBYTES","crypto_kx_SECRETKEYBYTES","crypto_kx_SEEDBYTES","crypto_kx_SESSSIONKEYBYTES","crypto_onetimeauth_BYTES","crypto_onetimeauth_KEYBYTES","crypto_pwhash_ALG_ARGON2I13","crypto_pwhash_ALG_DEFAULT","crypto_pwhash_BYTES_MAX","crypto_pwhash_BYTES_MIN","crypto_pwhash_MEMLIMIT_INTERACTIVE","crypto_pwhash_MEMLIMIT_MAX","crypto_pwhash_MEMLIMIT_MIN","crypto_pwhash_MEMLIMIT_MODERATE","crypto_pwhash_MEMLIMIT_SENSITIVE","crypto_pwhash_OPSLIMIT_INTERACTIVE","crypto_pwhash_OPSLIMIT_MAX","crypto_pwhash_OPSLIMIT_MIN","crypto_pwhash_OPSLIMIT_MODERATE","crypto_pwhash_OPSLIMIT_SENSITIVE","crypto_pwhash_PASSWD_MAX","crypto_pwhash_PASSWD_MIN","crypto_pwhash_SALTBYTES","crypto_pwhash_STRBYTES","crypto_pwhash_STR_VERIFY","crypto_pwhash_scryptsalsa208sha256_BYTES_MAX","crypto_pwhash_scryptsalsa208sha256_BYTES_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN","crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE","crypto_pwhash_scryptsalsa208sha256_SALTBYTES","crypto_pwhash_scryptsalsa208sha256_STRBYTES","crypto_pwhash_scryptsalsa208sha256_STR_VERIFY","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_secretbox_KEYBYTES","crypto_secretbox_MACBYTES","crypto_secretbox_NONCEBYTES","crypto_secretstream_xchacha20poly1305_ABYTES","crypto_secretstream_xchacha20poly1305_HEADERBYTES","crypto_secretstream_xchacha20poly1305_KEYBYTES","crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX","crypto_secretstream_xchacha20poly1305_NPUBBYTES","crypto_secretstream_xchacha20poly1305_TAG_FINAL","crypto_secretstream_xchacha20poly1305_TAG_MESSAGE","crypto_secretstream_xchacha20poly1305_TAG_PUSH","crypto_secretstream_xchacha20poly1305_TAG_REKEY","crypto_shorthash_BYTES","crypto_shorthash_KEYBYTES","crypto_shorthash_siphashx24_BYTES","crypto_shorthash_siphashx24_KEYBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_stream_chacha20_KEYBYTES","crypto_stream_chacha20_NONCEBYTES","crypto_stream_chacha20_ietf_KEYBYTES","crypto_stream_chacha20_ietf_NONCEBYTES","crypto_stream_xchacha20_ietf_KEYBYTES","crypto_stream_xchacha20_ietf_NONCEBYTES","randombytes_SEEDBYTES"],n=0;n<_.length;n++)"function"==typeof(c=kt["_"+_[n].toLowerCase()])&&(e[_[n]]=0|c());for(var s=["SODIUM_VERSION_STRING","crypto_pwhash_STRPREFIX","crypto_pwhash_scryptsalsa208sha256_STRPREFIX"],n=0;n<s.length;n++){var c=kt["_"+s[n].toLowerCase()];"function"==typeof c&&(e[s[n]]=kt.Pointer_stringify(c()))}}),Et={ORIGINAL:1,ORIGINAL_NO_PADDING:3,URLSAFE:5,URLSAFE_NO_PADDING:7};return y.prototype.to_Uint8Array=function(){var e=new Uint8Array(this.length);return e.set(kt.HEAPU8.subarray(this.address,this.address+this.length)),e},e.add=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can added");var r=e.length,a=0,n=0;if(t.length!=e.length)throw new TypeError("Arguments must have the same length");for(n=0;n<r;n++)a>>=8,a+=e[n]+t[r],e[n]=255&a},e.base64_variants=Et,e.compare=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==t.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,a=1,n=e.length;n-- >0;)r|=t[n]-e[n]>>8&a,a&=(t[n]^e[n])-1>>8;return r+r+a-1},e.from_base64=function(e,t){t=_(t);var r,a=[],n=new y(3*(e=f(a,e,"input")).length/4),s=i(e),c=u(4),h=u(4);return a.push(s),a.push(n.address),a.push(n.result_bin_len_p),a.push(n.b64_end_p),0!==kt._sodium_base642bin(n.address,n.length,s,e.length,0,c,h,t)&&v(a,"invalid input"),kt.getValue(h,"i32")-s!==e.length&&v(a,"incomplete input"),n.length=kt.getValue(c,"i32"),r=n.to_Uint8Array(),d(a),r},e.from_hex=function(e){var t,r=[],a=new y((e=f(r,e,"input")).length/2),n=i(e),_=u(4);return r.push(n),r.push(a.address),r.push(a.hex_end_p),0!==kt._sodium_hex2bin(a.address,a.length,n,e.length,0,0,_)&&v(r,"invalid input"),kt.getValue(_,"i32")-n!==e.length&&v(r,"incomplete input"),t=a.to_Uint8Array(),d(r),t},e.from_string=r,e.increment=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be incremented");for(var t=256,r=0,a=e.length;r<a;r++)t>>=8,t+=e[r],e[r]=255&t},e.is_zero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be checked");for(var t=0,r=0,a=e.length;r<a;r++)t|=e[r];return 0===t},e.libsodium=t,e.memcmp=function(e,t){if(!(e instanceof Uint8Array&&t instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be compared");if(e.length!==t.length)throw new TypeError("Only instances of identical length can be compared");for(var r=0,a=0,n=e.length;a<n;a++)r|=e[a]^t[a];return 0===r},e.memzero=function(e){if(!(e instanceof Uint8Array))throw new TypeError("Only Uint8Array instances can be wiped");for(var t=0,r=e.length;t<r;t++)e[t]=0},e.output_formats=c,e.pad=function(e,t){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((t|=0)<=0)throw new Error("block size must be > 0");var r,a=[],n=u(4),_=1,s=0,c=0|e.length,h=new y(c+t);a.push(n),a.push(h.address);for(var o=h.address,p=h.address+c+t;o<p;o++)kt.HEAPU8[o]=e[s],s+=_=1&~((65535&((c-=_)>>>48|c>>>32|c>>>16|c))-1>>16);return 0!==kt._sodium_pad(n,h.address,e.length,t,h.length)&&v(a,"internal error"),h.length=kt.getValue(n,"i32"),r=h.to_Uint8Array(),d(a),r},e.unpad=function(e,t){if(!(e instanceof Uint8Array))throw new TypeError("buffer must be a Uint8Array");if((t|=0)<=0)throw new Error("block size must be > 0");var r=[],a=i(e),n=u(4);return r.push(a),r.push(n),0!==kt._sodium_unpad(n,a,e.length,t)&&v(r,"unsupported/invalid padding"),e=new Uint8Array(e),e=e.subarray(0,kt.getValue(n,"i32")),d(r),e},e.ready=wt,e.symbols=function(){return Object.keys(e).sort()},e.to_base64=s,e.to_hex=n,e.to_string=a,e}var r="object"==typeof e.sodium&&"function"==typeof e.sodium.onload?e.sodium.onload:null; true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__(104)], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==typeof exports&&"string"!=typeof exports.nodeName?t(exports,require("libsodium")):e.sodium=t(e.commonJsStrict={},e.libsodium),r&&e.sodium.ready.then(function(){r(e.sodium)})}(this);


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, Buffer, process) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(A){function I(A){"use strict";var I;void 0===(I=A)&&(I={});var g=I;"object"!=typeof g.sodium&&("object"==typeof global?g=global:"object"==typeof window&&(g=window)),"object"==typeof g.sodium&&"number"==typeof g.sodium.totalMemory&&(I.TOTAL_MEMORY=g.sodium.totalMemory);var B=I;return I.ready=new Promise(function(A,I){function g(A){X("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}function C(A,I){A||X("Assertion failed: "+I)}function i(A){var I=K["_"+A];return I||X("NO_DYNAMIC_EXECUTION=1 was set, cannot eval"),C(I,"Cannot call unknown function "+A+" (perhaps LLVM optimizations or closure removed it?)"),I}function e(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":EA[A>>0]=I;break;case"i16":tA[A>>1]=I;break;case"i32":aA[A>>2]=I;break;case"i64":tempI64=[I>>>0,(tempDouble=I,+NA(tempDouble)>=1?tempDouble>0?(0|PA(+UA(tempDouble/4294967296),4294967295))>>>0:~~+RA((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],aA[A>>2]=tempI64[0],aA[A+4>>2]=tempI64[1];break;case"float":cA[A>>2]=I;break;case"double":fA[A>>3]=I;break;default:X("invalid type for setValue: "+g)}}function Q(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return EA[A>>0];case"i16":return tA[A>>1];case"i32":case"i64":return aA[A>>2];case"float":return cA[A>>2];case"double":return fA[A>>3];default:X("invalid type for setValue: "+I)}return null}function E(A,I,g,B){var i,Q;"number"==typeof A?(i=!0,Q=A):(i=!1,Q=A.length);var E,n="string"==typeof I?I:null;if(E=g==iA?B:["function"==typeof zA?zA:$.staticAlloc,$.stackAlloc,$.staticAlloc,$.dynamicAlloc][void 0===g?CA:g](Math.max(Q,n?1:I.length)),i){var t,B=E;for(C(0==(3&E)),t=E+(-4&Q);B<t;B+=4)aA[B>>2]=0;for(t=E+Q;B<t;)EA[B++>>0]=0;return E}if("i8"===n)return A.subarray||A.slice?nA.set(A,E):nA.set(new Uint8Array(A),E),E;for(var r,a,o,c=0;c<Q;){var f=A[c];"function"==typeof f&&(f=$.getFunctionIndex(f)),0!==(r=n||I[c])?("i64"==r&&(r="i32"),e(E+c,f,r),o!==r&&(a=$.getNativeTypeSize(r),o=r),c+=a):c++}return E}function n(A,I){if(0===I||!A)return"";for(var g,B=0,C=0;;){if(g=nA[A+C>>0],B|=g,0==g&&!I)break;if(C++,I&&C==I)break}I||(I=C);var i="";if(B<128){for(var e;I>0;)e=String.fromCharCode.apply(String,nA.subarray(A,A+Math.min(I,1024))),i=i?i+e:e,A+=1024,I-=1024;return i}return K.UTF8ToString(A)}function t(A,I){for(var g=I;A[g];)++g;if(g-I>16&&A.subarray&&eA)return eA.decode(A.subarray(I,g));for(var B,C,i,e,Q,E="";;){if(!(B=A[I++]))return E;if(128&B)if(C=63&A[I++],192!=(224&B))if(i=63&A[I++],224==(240&B)?B=(15&B)<<12|C<<6|i:(e=63&A[I++],240==(248&B)?B=(7&B)<<18|C<<12|i<<6|e:(Q=63&A[I++],B=248==(252&B)?(3&B)<<24|C<<18|i<<12|e<<6|Q:(1&B)<<30|C<<24|i<<18|e<<12|Q<<6|63&A[I++])),B<65536)E+=String.fromCharCode(B);else{var n=B-65536;E+=String.fromCharCode(55296|n>>10,56320|1023&n)}else E+=String.fromCharCode((31&B)<<6|C);else E+=String.fromCharCode(B)}}function r(A,I,g,B){if(!(B>0))return 0;for(var C=g,i=g+B-1,e=0;e<A.length;++e){var Q=A.charCodeAt(e);if(Q>=55296&&Q<=57343&&(Q=65536+((1023&Q)<<10)|1023&A.charCodeAt(++e)),Q<=127){if(g>=i)break;I[g++]=Q}else if(Q<=2047){if(g+1>=i)break;I[g++]=192|Q>>6,I[g++]=128|63&Q}else if(Q<=65535){if(g+2>=i)break;I[g++]=224|Q>>12,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else if(Q<=2097151){if(g+3>=i)break;I[g++]=240|Q>>18,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else if(Q<=67108863){if(g+4>=i)break;I[g++]=248|Q>>24,I[g++]=128|Q>>18&63,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else{if(g+5>=i)break;I[g++]=252|Q>>30,I[g++]=128|Q>>24&63,I[g++]=128|Q>>18&63,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}}return I[g]=0,g-C}function a(A,I,g){return r(A,nA,I,g)}function o(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:B<=2097151?4:B<=67108863?5:6}return I}function c(A){var I=K.___cxa_demangle||K.__cxa_demangle;if(I){try{var g=A.substr(1),B=o(g)+1,C=zA(B);a(g,C,B);var i=zA(4),e=I(C,0,0,i);if(0===Q(i,"i32")&&e)return n(e)}catch(A){}finally{C&&OA(C),i&&OA(i),e&&OA(e)}return A}return $.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),A}function y(A){var I=/__Z[\w\d_]+/g;return A.replace(I,function(A){var I=c(A);return A===I?A:A+" ["+I+"]"})}function w(){var A=new Error;if(!A.stack){try{throw new Error(0)}catch(I){A=I}if(!A.stack)return"(no stack trace available)"}return A.stack.toString()}function s(){var A=w();return K.extraStackTrace&&(A+="\n"+K.extraStackTrace()),y(A)}function h(A,I){return A%I>0&&(A+=I-A%I),A}function l(A){K.buffer=QA=A}function u(){K.HEAP8=EA=new Int8Array(QA),K.HEAP16=tA=new Int16Array(QA),K.HEAP32=aA=new Int32Array(QA),K.HEAPU8=nA=new Uint8Array(QA),K.HEAPU16=rA=new Uint16Array(QA),K.HEAPU32=oA=new Uint32Array(QA),K.HEAPF32=cA=new Float32Array(QA),K.HEAPF64=fA=new Float64Array(QA)}function p(){X("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+FA+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function D(){p()}function _(A){for(;A.length>0;){var I=A.shift();if("function"!=typeof I){var g=I.func;"number"==typeof g?void 0===I.arg?K.dynCall_v(g):K.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I()}}function d(){if(K.preRun)for("function"==typeof K.preRun&&(K.preRun=[K.preRun]);K.preRun.length;)M(K.preRun.shift());_(HA)}function G(){vA||(vA=!0,_(kA))}function F(){_(MA)}function H(){_(YA),SA=!0}function k(){if(K.postRun)for("function"==typeof K.postRun&&(K.postRun=[K.postRun]);K.postRun.length;)Y(K.postRun.shift());_(bA)}function M(A){HA.unshift(A)}function Y(A){bA.unshift(A)}function b(A,I){EA.set(A,I)}function v(A,I,g){for(var B=0;B<A.length;++B)EA[I++>>0]=A.charCodeAt(B);g||(EA[I>>0]=0)}function S(A){JA++,K.monitorRunDependencies&&K.monitorRunDependencies(JA)}function m(A){if(JA--,K.monitorRunDependencies&&K.monitorRunDependencies(JA),0==JA&&(null!==LA&&(clearInterval(LA),LA=null),xA)){var I=xA;xA=null,I()}}function N(A){return K.___errno_location&&(aA[K.___errno_location()>>2]=A),A}function R(A,I,g){var B=g>0?g:o(A)+1,C=new Array(B),i=r(A,C,0,C.length);return I&&(C.length=i),C}function U(A){if("boolean"==typeof W&&W){var I;try{I=Buffer.from(A,"base64")}catch(g){I=new Buffer(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=WA(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function P(A){var I="data:application/octet-stream;base64,";if(String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I))return U(A.slice(I.length))}function J(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function L(A){function I(){K.calledRun||(K.calledRun=!0,gA||(G(),F(),K.onRuntimeInitialized&&K.onRuntimeInitialized(),K._main&&EI&&K.callMain(A),k()))}A=A||K.arguments,null===iI&&(iI=Date.now()),JA>0||(d(),JA>0||K.calledRun||(K.setStatus?(K.setStatus("Running..."),setTimeout(function(){setTimeout(function(){K.setStatus("")},1),I()},1)):I()))}function x(A,I){I&&K.noExitRuntime||(K.noExitRuntime||(gA=!0,BA=A,hA=CI,H(),K.onExit&&K.onExit(A)),W&&process.exit(A),K.quit(A,new J(A)))}function X(A){K.onAbort&&K.onAbort(A),void 0!==A?(K.print(A),K.printErr(A),A=JSON.stringify(A)):A="",gA=!0,BA=1;var I="abort("+A+") at "+s()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";throw QI&&QI.forEach(function(g){I=g(I,A)}),I}(K=B).onAbort=I,K.onRuntimeInitialized=A;var K;K||(K=(void 0!==K?K:null)||{});var V={};for(var j in K)K.hasOwnProperty(j)&&(V[j]=K[j]);var T=!1,Z=!1,W=!1,q=!1;if(K.ENVIRONMENT)if("WEB"===K.ENVIRONMENT)T=!0;else if("WORKER"===K.ENVIRONMENT)Z=!0;else if("NODE"===K.ENVIRONMENT)W=!0;else{if("SHELL"!==K.ENVIRONMENT)throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");q=!0}else T="object"==typeof window,Z="function"==typeof importScripts,W="object"==typeof process&&"function"=="function"&&!T&&!Z,q=!T&&!W&&!Z;if(W){K.print||(K.print=console.log),K.printErr||(K.printErr=console.warn);var O,z;K.read=function(A,I){var g;return(g=P(A))||(O||(O=__webpack_require__(51)),z||(z=__webpack_require__(52)),A=z.normalize(A),g=O.readFileSync(A)),I?g:g.toString()},K.readBinary=function(A){var I=K.read(A,!0);return I.buffer||(I=new Uint8Array(I)),C(I.buffer),I},K.load=function(A){g(read(A))},K.thisProgram||(process.argv.length>1?K.thisProgram=process.argv[1].replace(/\\/g,"/"):K.thisProgram="unknown-program"),K.arguments=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=K),process.on("uncaughtException",function(A){if(!(A instanceof J))throw A}),K.inspect=function(){return"[Emscripten Module object]"}}else if(q)K.print||(K.print=print),"undefined"!=typeof printErr&&(K.printErr=printErr),"undefined"!=typeof read?K.read=function(A){var I=P(A);return I?TA(I):read(A)}:K.read=function(){throw"no read() available"},K.readBinary=function(A){var I;return(I=P(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(I=read(A,"binary"),C("object"==typeof I),I)},"undefined"!=typeof scriptArgs?K.arguments=scriptArgs:void 0!==arguments&&(K.arguments=arguments),"function"==typeof quit&&(K.quit=function(A,I){quit(A)});else{if(!T&&!Z)throw new Error("Unknown runtime environment. Where are we?");if(K.read=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=P(A);if(g)return TA(g);throw I}},Z&&(K.readBinary=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(A){var g=P(f);if(g)return g;throw A}}),K.readAsync=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=P(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)},void 0!==arguments&&(K.arguments=arguments),"undefined"!=typeof console)K.print||(K.print=function(A){}),K.printErr||(K.printErr=function(A){});else{K.print||(K.print=function(A){})}Z&&(K.load=importScripts),void 0===K.setWindowTitle&&(K.setWindowTitle=function(A){document.title=A})}!K.load&&K.read&&(K.load=function(A){g(K.read(A))}),K.print||(K.print=function(){}),K.printErr||(K.printErr=K.print),K.arguments||(K.arguments=[]),K.thisProgram||(K.thisProgram="./this.program"),K.quit||(K.quit=function(A,I){throw I}),K.print=K.print,K.printErr=K.printErr,K.preRun=[],K.postRun=[];for(var j in V)V.hasOwnProperty(j)&&(K[j]=V[j]);V=void 0;var $={setTempRet0:function(A){return tempRet0=A,A},getTempRet0:function(){return tempRet0},stackSave:function(){return hA},stackRestore:function(A){hA=A},getNativeTypeSize:function(A){switch(A){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===A[A.length-1])return $.QUANTUM_SIZE;if("i"===A[0]){var I=parseInt(A.substr(1));return C(I%8==0),I/8}return 0}},getNativeFieldSize:function(A){return Math.max($.getNativeTypeSize(A),$.QUANTUM_SIZE)},STACK_ALIGN:16,prepVararg:function(A,I){return"double"===I||"i64"===I?7&A&&(C(4==(7&A)),A+=4):C(0==(3&A)),A},getAlignSize:function(A,I,g){return g||"i64"!=A&&"double"!=A?A?Math.min(I||(A?$.getNativeFieldSize(A):0),$.QUANTUM_SIZE):Math.min(I,8):8},dynCall:function(A,I,g){return g&&g.length?K["dynCall_"+A].apply(null,[I].concat(g)):K["dynCall_"+A].call(null,I)},functionPointers:[null,null,null,null,null,null,null,null],addFunction:function(A){for(var I=0;I<$.functionPointers.length;I++)if(!$.functionPointers[I])return $.functionPointers[I]=A,1*(1+I);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."},removeFunction:function(A){$.functionPointers[(A-1)/1]=null},warnOnce:function(A){$.warnOnce.shown||($.warnOnce.shown={}),$.warnOnce.shown[A]||($.warnOnce.shown[A]=1,K.printErr(A))},funcWrappers:{},getFuncWrapper:function(A,I){if(A){C(I),$.funcWrappers[I]||($.funcWrappers[I]={});var g=$.funcWrappers[I];return g[A]||(1===I.length?g[A]=function(){return $.dynCall(I,A)}:2===I.length?g[A]=function(g){return $.dynCall(I,A,[g])}:g[A]=function(){return $.dynCall(I,A,Array.prototype.slice.call(arguments))}),g[A]}},getCompilerSetting:function(A){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"},stackAlloc:function(A){var I=hA;return hA=hA+A|0,hA=hA+15&-16,I},staticAlloc:function(A){var I=wA;return wA=wA+A|0,wA=wA+15&-16,I},dynamicAlloc:function(A){var I=aA[pA>>2],g=-16&(I+A+15|0);return aA[pA>>2]=g,g>=FA&&!D()?(aA[pA>>2]=I,0):I},alignMemory:function(A,I){return A=Math.ceil(A/(I||16))*(I||16)},makeBigInt:function(A,I,g){return g?+(A>>>0)+4294967296*+(I>>>0):+(A>>>0)+4294967296*+(0|I)},GLOBAL_BASE:1024,QUANTUM_SIZE:4,__dummy__:0};K.Runtime=$;var AA,IA,gA=0,BA=0;!function(){var A={stackSave:function(){$.stackSave()},stackRestore:function(){$.stackRestore()},arrayToC:function(A){var I=$.stackAlloc(A.length);return b(A,I),I},stringToC:function(A){var I=0;if(null!==A&&void 0!==A&&0!==A){var g=1+(A.length<<2);a(A,I=$.stackAlloc(g),g)}return I}},I={string:A.stringToC,array:A.arrayToC};IA=function(A,g,B,C,e){var Q=i(A),E=[],t=0;if(C)for(var r=0;r<C.length;r++){var a=I[B[r]];a?(0===t&&(t=$.stackSave()),E[r]=a(C[r])):E[r]=C[r]}var o=Q.apply(null,E);if("string"===g&&(o=n(o)),0!==t){if(e&&e.async)return void EmterpreterAsync.asyncFinalizers.push(function(){$.stackRestore(t)});$.stackRestore(t)}return o},AA=function(A,I,g){return function(){return IA(A,I,g,arguments)}}}(),K.ccall=IA,K.cwrap=AA,K.setValue=e,K.getValue=Q;var CA=2,iA=4;K.ALLOC_NORMAL=0,K.ALLOC_STACK=1,K.ALLOC_STATIC=CA,K.ALLOC_DYNAMIC=3,K.ALLOC_NONE=iA,K.allocate=E,K.getMemory=function(A){return sA?vA?zA(A):$.dynamicAlloc(A):$.staticAlloc(A)},K.Pointer_stringify=n,K.AsciiToString=function(A){for(var I="";;){var g=EA[A++>>0];if(!g)return I;I+=String.fromCharCode(g)}},K.stringToAscii=function(A,I){return v(A,I,!1)};var eA="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;K.UTF8ArrayToString=t,K.UTF8ToString=function(A){return t(nA,A)},K.stringToUTF8Array=r,K.stringToUTF8=a,K.lengthBytesUTF8=o;"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");K.stackTrace=s;var QA,EA,nA,tA,rA,aA,oA,cA,fA,yA,wA,sA,hA,lA,uA,pA,DA=16384,_A=65536,dA=16777216;yA=wA=hA=lA=uA=pA=0,sA=!1;var GA=K.TOTAL_STACK||5242880,FA=K.TOTAL_MEMORY||16777216;if(FA<GA&&K.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+FA+"! (TOTAL_STACK="+GA+")"),K.buffer?QA=K.buffer:"object"==typeof WebAssembly&&"function"==typeof WebAssembly.Memory?(K.wasmMemory=new WebAssembly.Memory({initial:FA/_A,maximum:FA/_A}),QA=K.wasmMemory.buffer):QA=new ArrayBuffer(FA),u(),aA[0]=1668509029,tA[1]=25459,115!==nA[2]||99!==nA[3])throw"Runtime error: expected the system to be little-endian!";K.HEAP=void 0,K.buffer=QA,K.HEAP8=EA,K.HEAP16=tA,K.HEAP32=aA,K.HEAPU8=nA,K.HEAPU16=rA,K.HEAPU32=oA,K.HEAPF32=cA,K.HEAPF64=fA;var HA=[],kA=[],MA=[],YA=[],bA=[],vA=!1,SA=!1;if(K.addOnPreRun=M,K.addOnInit=function(A){kA.unshift(A)},K.addOnPreMain=function(A){MA.unshift(A)},K.addOnExit=function(A){YA.unshift(A)},K.addOnPostRun=Y,K.writeStringToMemory=function(A,I,g){$.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var B,C;g&&(C=I+o(A),B=EA[C]),a(A,I,1/0),g&&(EA[C]=B)},K.writeArrayToMemory=b,K.writeAsciiToMemory=v,Math.imul&&-5===Math.imul(4294967295,5)||(Math.imul=function(A,I){var g=65535&A,B=65535&I;return g*B+((A>>>16)*B+g*(I>>>16)<<16)|0}),Math.imul=Math.imul,!Math.fround){var mA=new Float32Array(1);Math.fround=function(A){return mA[0]=A,mA[0]}}Math.fround=Math.fround,Math.clz32||(Math.clz32=function(A){A>>>=0;for(var I=0;I<32;I++)if(A&1<<31-I)return I;return 32}),Math.clz32=Math.clz32,Math.trunc||(Math.trunc=function(A){return A<0?Math.ceil(A):Math.floor(A)}),Math.trunc=Math.trunc;var NA=Math.abs,RA=(Math.cos,Math.sin,Math.tan,Math.acos,Math.asin,Math.atan,Math.atan2,Math.exp,Math.log,Math.sqrt,Math.ceil),UA=Math.floor,PA=(Math.pow,Math.imul,Math.fround,Math.round,Math.min),JA=(Math.clz32,Math.trunc,0),LA=null,xA=null;K.addRunDependency=S,K.removeRunDependency=m,K.preloadedImages={},K.preloadedAudios={};var XA=null;!function(){function A(A){var I=K.buffer;A.byteLength<I.byteLength&&K.printErr("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");var g=new Int8Array(I),B=new Int8Array(A);XA||g.set(B.subarray(K.STATIC_BASE,K.STATIC_BASE+K.STATIC_BUMP),K.STATIC_BASE),B.set(g),l(A),u()}function I(A){return A}function g(){try{if(K.wasmBinary)return new Uint8Array(K.wasmBinary);var A=P(Q);if(A)return A;if(K.readBinary)return K.readBinary(Q);throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}catch(A){X(A)}}function B(){return K.wasmBinary||!T&&!Z||"function"!=typeof fetch?new Promise(function(A,I){A(g())}):fetch(Q,{credentials:"same-origin"}).then(function(A){if(!A.ok)throw"failed to load wasm binary file at '"+Q+"'";return A.arrayBuffer()}).catch(function(){return g()})}function C(I,g,C){function i(I){(t=I.exports).memory&&A(t.memory),K.asm=t,K.usingWasm=!0,m("wasm-instantiate")}function e(A){i(A.instance)}function E(A){B().then(function(A){return WebAssembly.instantiate(A,n)}).then(A).catch(function(A){K.printErr("failed to asynchronously prepare wasm: "+A),X(A)})}if("object"!=typeof WebAssembly)return K.printErr("no native wasm support detected"),!1;if(!(K.wasmMemory instanceof WebAssembly.Memory))return K.printErr("no native wasm Memory in use"),!1;if(g.memory=K.wasmMemory,n.global={NaN:NaN,Infinity:1/0},n["global.Math"]=I.Math,n.env=g,S("wasm-instantiate"),K.instantiateWasm)try{return K.instantiateWasm(n,i)}catch(A){return K.printErr("Module.instantiateWasm callback failed with error: "+A),!1}return K.wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||0===Q.indexOf("data:")?E(e):WebAssembly.instantiateStreaming(fetch(Q,{credentials:"same-origin"}),n).then(e).catch(function(A){K.printErr("wasm streaming compile failed: "+A),K.printErr("falling back to ArrayBuffer instantiation"),E(e)}),{}}var i=K.wasmJSMethod||"native-wasm";K.wasmJSMethod=i;var e=K.wasmTextFile||"",Q=K.wasmBinaryFile||"data:application/octet-stream;base64,",E=K.asmjsCodeFile||"";"function"==typeof K.locateFile&&(e=K.locateFile(e),Q=K.locateFile(Q),E=K.locateFile(E));var n={global:null,env:null,asm2wasm:{"f64-rem":function(A,I){return A%I},"f64-to-int":function(A){return 0|A},"i32s-div":function(A,I){return(0|A)/(0|I)|0},"i32u-div":function(A,I){return(A>>>0)/(I>>>0)>>>0},"i32s-rem":function(A,I){return(0|A)%(0|I)|0},"i32u-rem":function(A,I){return(A>>>0)%(I>>>0)>>>0},debugger:function(){}},parent:K},t=null;K.asmPreload=K.asm;var r=K.reallocBuffer,a=function(A){A=h(A,K.usingWasm?_A:dA);var I=K.buffer,g=I.byteLength;if(!K.usingWasm)return t.__growWasmMemory((A-g)/65536),K.buffer!==I?K.buffer:null;try{return-1!==K.wasmMemory.grow((A-g)/65536)?K.buffer=K.wasmMemory.buffer:null}catch(A){return null}};K.reallocBuffer=function(A){return"asmjs"===o?r(A):a(A)};var o="";K.asm=function(A,g,B){if(A=I(A),!(g=I(g)).table){var i=K.wasmTableSize;void 0===i&&(i=1024);var e=K.wasmMaxTableSize;"object"==typeof WebAssembly&&"function"==typeof WebAssembly.Table?g.table=void 0!==e?new WebAssembly.Table({initial:i,maximum:e,element:"anyfunc"}):new WebAssembly.Table({initial:i,element:"anyfunc"}):g.table=new Array(i),K.wasmTable=g.table}g.memoryBase||(g.memoryBase=K.STATIC_BASE),g.tableBase||(g.tableBase=0);var Q;return(Q=C(A,g))||X("no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods"),Q};K.asm}();var KA=[function(){return K.getRandomValue()},function(){if(void 0===K.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),K.getRandomValue=g}catch(A){try{var B=__webpack_require__(53),C=function(){var A=B.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),K.getRandomValue=C}catch(A){throw"No secure random number generator found"}}}];yA=$.GLOBAL_BASE,wA=yA+36464,kA.push(),XA=null;K.STATIC_BASE=yA,K.STATIC_BUMP=36464;var VA=wA;wA+=16;var jA={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};pA=E(1,"i32",CA),lA=(hA=$.alignMemory(wA))+GA,uA=$.alignMemory(lA),aA[pA>>2]=uA,sA=!0;var TA=function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B))}return I.join("")};K.intArrayFromString=R,K.intArrayToString=TA;var ZA="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",WA="function"==typeof atob?atob:function(A){var I,g,B,C,i,e,Q="",E=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=ZA.indexOf(A.charAt(E++))<<2|(C=ZA.indexOf(A.charAt(E++)))>>4,g=(15&C)<<4|(i=ZA.indexOf(A.charAt(E++)))>>2,B=(3&i)<<6|(e=ZA.indexOf(A.charAt(E++))),Q+=String.fromCharCode(I),64!==i&&(Q+=String.fromCharCode(g)),64!==e&&(Q+=String.fromCharCode(B))}while(E<A.length);return Q};K.wasmTableSize=0,K.wasmMaxTableSize=0,K.asmGlobalArg={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:1/0},K.asmLibraryArg={abort:X,assert:C,enlargeMemory:D,getTotalMemory:function(){return FA},abortOnCannotGrowMemory:p,_emscripten_asm_const_i:function(A){return KA[A]()},___assert_fail:function(A,I,g,B){throw gA=!0,"Assertion failed: "+n(A)+", at: "+[I?n(I):"unknown filename",g,B?n(B):"unknown function"]+" at "+s()},_abort:function(){K.abort()},___setErrNo:N,_emscripten_memcpy_big:function(A,I,g){return nA.set(nA.subarray(I,I+g),A),A},_sysconf:function(A){switch(A){case 30:return DA;case 85:return nA.length/DA;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator?navigator.hardwareConcurrency||1:1}return N(jA.EINVAL),-1},DYNAMICTOP_PTR:pA,tempDoublePtr:VA,ABORT:gA,STACKTOP:hA,STACK_MAX:lA};var qA=K.asm(K.asmGlobalArg,K.asmLibraryArg,QA);K.asm=qA;K._sodium_library_version_minor=function(){return K.asm._sodium_library_version_minor.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_init_push=function(){return K.asm._crypto_secretstream_xchacha20poly1305_init_push.apply(null,arguments)},K._crypto_kx_publickeybytes=function(){return K.asm._crypto_kx_publickeybytes.apply(null,arguments)},K._sodium_unpad=function(){return K.asm._sodium_unpad.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_statebytes=function(){return K.asm._crypto_secretstream_xchacha20poly1305_statebytes.apply(null,arguments)},K._crypto_box_noncebytes=function(){return K.asm._crypto_box_noncebytes.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_keybytes.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_encrypt_detached.apply(null,arguments)},K._sodium_pad=function(){return K.asm._sodium_pad.apply(null,arguments)},K._crypto_scalarmult_base=function(){return K.asm._crypto_scalarmult_base.apply(null,arguments)},K._crypto_aead_chacha20poly1305_abytes=function(){return K.asm._crypto_aead_chacha20poly1305_abytes.apply(null,arguments)},K._crypto_core_hchacha20_outputbytes=function(){return K.asm._crypto_core_hchacha20_outputbytes.apply(null,arguments)},K._crypto_auth_bytes=function(){return K.asm._crypto_auth_bytes.apply(null,arguments)},K._crypto_sign_statebytes=function(){return K.asm._crypto_sign_statebytes.apply(null,arguments)},K._crypto_sign_open=function(){return K.asm._crypto_sign_open.apply(null,arguments)},K._crypto_aead_chacha20poly1305_decrypt_detached=function(){return K.asm._crypto_aead_chacha20poly1305_decrypt_detached.apply(null,arguments)},K._sbrk=function(){return K.asm._sbrk.apply(null,arguments)},K._memcpy=function(){return K.asm._memcpy.apply(null,arguments)},K._crypto_kdf_bytes_max=function(){return K.asm._crypto_kdf_bytes_max.apply(null,arguments)},K._crypto_kdf_bytes_min=function(){return K.asm._crypto_kdf_bytes_min.apply(null,arguments)},K._crypto_box_seed_keypair=function(){return K.asm._crypto_box_seed_keypair.apply(null,arguments)},K._crypto_box_beforenmbytes=function(){return K.asm._crypto_box_beforenmbytes.apply(null,arguments)},K._crypto_box_open_easy_afternm=function(){return K.asm._crypto_box_open_easy_afternm.apply(null,arguments)},K._crypto_sign_ed25519_sk_to_curve25519=function(){return K.asm._crypto_sign_ed25519_sk_to_curve25519.apply(null,arguments)},K._emscripten_get_global_libc=function(){return K.asm._emscripten_get_global_libc.apply(null,arguments)};var OA=K._free=function(){return K.asm._free.apply(null,arguments)},zA=(K.stackAlloc=function(){return K.asm.stackAlloc.apply(null,arguments)},K._crypto_aead_chacha20poly1305_keybytes=function(){return K.asm._crypto_aead_chacha20poly1305_keybytes.apply(null,arguments)},K.stackSave=function(){return K.asm.stackSave.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_tag_message=function(){return K.asm._crypto_secretstream_xchacha20poly1305_tag_message.apply(null,arguments)},K._crypto_box_seal=function(){return K.asm._crypto_box_seal.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_keygen.apply(null,arguments)},K._crypto_kx_keypair=function(){return K.asm._crypto_kx_keypair.apply(null,arguments)},K.runPostSets=function(){return K.asm.runPostSets.apply(null,arguments)},K._crypto_kx_client_session_keys=function(){return K.asm._crypto_kx_client_session_keys.apply(null,arguments)},K._crypto_generichash_bytes_min=function(){return K.asm._crypto_generichash_bytes_min.apply(null,arguments)},K._crypto_shorthash=function(){return K.asm._crypto_shorthash.apply(null,arguments)},K._crypto_auth_keybytes=function(){return K.asm._crypto_auth_keybytes.apply(null,arguments)},K._crypto_aead_chacha20poly1305_npubbytes=function(){return K.asm._crypto_aead_chacha20poly1305_npubbytes.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return K.asm._crypto_secretstream_xchacha20poly1305_tag_rekey.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_abytes.apply(null,arguments)},K._crypto_sign_seedbytes=function(){return K.asm._crypto_sign_seedbytes.apply(null,arguments)},K._crypto_box_detached_afternm=function(){return K.asm._crypto_box_detached_afternm.apply(null,arguments)},K._crypto_auth=function(){return K.asm._crypto_auth.apply(null,arguments)},K._randombytes_random=function(){return K.asm._randombytes_random.apply(null,arguments)},K._crypto_sign_keypair=function(){return K.asm._crypto_sign_keypair.apply(null,arguments)},K._crypto_generichash_keybytes_min=function(){return K.asm._crypto_generichash_keybytes_min.apply(null,arguments)},K._crypto_generichash_statebytes=function(){return K.asm._crypto_generichash_statebytes.apply(null,arguments)},K._randombytes_buf_deterministic=function(){return K.asm._randombytes_buf_deterministic.apply(null,arguments)},K._crypto_aead_chacha20poly1305_encrypt_detached=function(){return K.asm._crypto_aead_chacha20poly1305_encrypt_detached.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_keygen=function(){return K.asm._crypto_secretstream_xchacha20poly1305_keygen.apply(null,arguments)},K._sodium_library_version_major=function(){return K.asm._sodium_library_version_major.apply(null,arguments)},K._crypto_sign_final_verify=function(){return K.asm._crypto_sign_final_verify.apply(null,arguments)},K._crypto_secretbox_keygen=function(){return K.asm._crypto_secretbox_keygen.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return K.asm._crypto_secretstream_xchacha20poly1305_headerbytes.apply(null,arguments)},K._sodium_version_string=function(){return K.asm._sodium_version_string.apply(null,arguments)},K._crypto_generichash_keybytes_max=function(){return K.asm._crypto_generichash_keybytes_max.apply(null,arguments)},K._crypto_sign_ed25519_pk_to_curve25519=function(){return K.asm._crypto_sign_ed25519_pk_to_curve25519.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_push=function(){return K.asm._crypto_secretstream_xchacha20poly1305_push.apply(null,arguments)},K._crypto_generichash=function(){return K.asm._crypto_generichash.apply(null,arguments)},K.getTempRet0=function(){return K.asm.getTempRet0.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_nsecbytes.apply(null,arguments)},K._randombytes_stir=function(){return K.asm._randombytes_stir.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_encrypt.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_tag_push=function(){return K.asm._crypto_secretstream_xchacha20poly1305_tag_push.apply(null,arguments)},K._crypto_core_hchacha20=function(){return K.asm._crypto_core_hchacha20.apply(null,arguments)},K._crypto_box_beforenm=function(){return K.asm._crypto_box_beforenm.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_decrypt.apply(null,arguments)},K._randombytes_close=function(){return K.asm._randombytes_close.apply(null,arguments)},K._crypto_kx_server_session_keys=function(){return K.asm._crypto_kx_server_session_keys.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_tag_final=function(){return K.asm._crypto_secretstream_xchacha20poly1305_tag_final.apply(null,arguments)},K._crypto_core_hchacha20_constbytes=function(){return K.asm._crypto_core_hchacha20_constbytes.apply(null,arguments)},K._crypto_shorthash_bytes=function(){return K.asm._crypto_shorthash_bytes.apply(null,arguments)},K._crypto_kdf_keybytes=function(){return K.asm._crypto_kdf_keybytes.apply(null,arguments)},K.setThrew=function(){return K.asm.setThrew.apply(null,arguments)},K.establishStackSpace=function(){return K.asm.establishStackSpace.apply(null,arguments)},K._crypto_sign_final_create=function(){return K.asm._crypto_sign_final_create.apply(null,arguments)},K._crypto_aead_chacha20poly1305_encrypt=function(){return K.asm._crypto_aead_chacha20poly1305_encrypt.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_decrypt_detached.apply(null,arguments)},K._crypto_kx_secretkeybytes=function(){return K.asm._crypto_kx_secretkeybytes.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return K.asm._crypto_secretstream_xchacha20poly1305_messagebytes_max.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_abytes=function(){return K.asm._crypto_secretstream_xchacha20poly1305_abytes.apply(null,arguments)},K._crypto_box_detached=function(){return K.asm._crypto_box_detached.apply(null,arguments)},K._randombytes_buf=function(){return K.asm._randombytes_buf.apply(null,arguments)},K._crypto_generichash_init=function(){return K.asm._crypto_generichash_init.apply(null,arguments)},K._crypto_box_open_detached=function(){return K.asm._crypto_box_open_detached.apply(null,arguments)},K._crypto_scalarmult_bytes=function(){return K.asm._crypto_scalarmult_bytes.apply(null,arguments)},K._crypto_kx_seedbytes=function(){return K.asm._crypto_kx_seedbytes.apply(null,arguments)},K._crypto_auth_verify=function(){return K.asm._crypto_auth_verify.apply(null,arguments)},K._crypto_box_seal_open=function(){return K.asm._crypto_box_seal_open.apply(null,arguments)},K._crypto_secretbox_detached=function(){return K.asm._crypto_secretbox_detached.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_nsecbytes.apply(null,arguments)},K._crypto_secretbox_easy=function(){return K.asm._crypto_secretbox_easy.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_init_pull=function(){return K.asm._crypto_secretstream_xchacha20poly1305_init_pull.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_encrypt.apply(null,arguments)},K._memset=function(){return K.asm._memset.apply(null,arguments)},K._crypto_generichash_keygen=function(){return K.asm._crypto_generichash_keygen.apply(null,arguments)},K._crypto_box_open_detached_afternm=function(){return K.asm._crypto_box_open_detached_afternm.apply(null,arguments)},K._sodium_bin2hex=function(){return K.asm._sodium_bin2hex.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_decrypt.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_keygen=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_keygen.apply(null,arguments)},K._crypto_box_seedbytes=function(){return K.asm._crypto_box_seedbytes.apply(null,arguments)},K._crypto_core_hchacha20_inputbytes=function(){return K.asm._crypto_core_hchacha20_inputbytes.apply(null,arguments)},K._crypto_auth_keygen=function(){return K.asm._crypto_auth_keygen.apply(null,arguments)},K._crypto_hash=function(){return K.asm._crypto_hash.apply(null,arguments)},K._sodium_library_minimal=function(){return K.asm._sodium_library_minimal.apply(null,arguments)},K._crypto_box_easy_afternm=function(){return K.asm._crypto_box_easy_afternm.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_encrypt_detached.apply(null,arguments)},K._sodium_bin2base64=function(){return K.asm._sodium_bin2base64.apply(null,arguments)},K._crypto_box_macbytes=function(){return K.asm._crypto_box_macbytes.apply(null,arguments)},K._randombytes_seedbytes=function(){return K.asm._randombytes_seedbytes.apply(null,arguments)},K._crypto_box_publickeybytes=function(){return K.asm._crypto_box_publickeybytes.apply(null,arguments)},K._crypto_box_sealbytes=function(){return K.asm._crypto_box_sealbytes.apply(null,arguments)},K._crypto_sign_secretkeybytes=function(){return K.asm._crypto_sign_secretkeybytes.apply(null,arguments)},K._crypto_box_secretkeybytes=function(){return K.asm._crypto_box_secretkeybytes.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_keybytes.apply(null,arguments)},K._crypto_scalarmult_scalarbytes=function(){return K.asm._crypto_scalarmult_scalarbytes.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_rekey=function(){return K.asm._crypto_secretstream_xchacha20poly1305_rekey.apply(null,arguments)},K._crypto_shorthash_keybytes=function(){return K.asm._crypto_shorthash_keybytes.apply(null,arguments)},K._crypto_aead_chacha20poly1305_keygen=function(){return K.asm._crypto_aead_chacha20poly1305_keygen.apply(null,arguments)},K._crypto_kx_sessionkeybytes=function(){return K.asm._crypto_kx_sessionkeybytes.apply(null,arguments)},K._malloc=function(){return K.asm._malloc.apply(null,arguments)});K._crypto_aead_chacha20poly1305_decrypt=function(){return K.asm._crypto_aead_chacha20poly1305_decrypt.apply(null,arguments)},K._crypto_secretbox_open_easy=function(){return K.asm._crypto_secretbox_open_easy.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_decrypt_detached.apply(null,arguments)},K._crypto_sign=function(){return K.asm._crypto_sign.apply(null,arguments)},K._crypto_secretbox_noncebytes=function(){return K.asm._crypto_secretbox_noncebytes.apply(null,arguments)},K._crypto_box_keypair=function(){return K.asm._crypto_box_keypair.apply(null,arguments)},K._crypto_generichash_keybytes=function(){return K.asm._crypto_generichash_keybytes.apply(null,arguments)},K._sodium_hex2bin=function(){return K.asm._sodium_hex2bin.apply(null,arguments)},K._sodium_init=function(){return K.asm._sodium_init.apply(null,arguments)},K._crypto_secretbox_macbytes=function(){return K.asm._crypto_secretbox_macbytes.apply(null,arguments)},K._crypto_secretbox_keybytes=function(){return K.asm._crypto_secretbox_keybytes.apply(null,arguments)},K._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return K.asm._crypto_aead_xchacha20poly1305_ietf_npubbytes.apply(null,arguments)},K._randombytes=function(){return K.asm._randombytes.apply(null,arguments)},K._crypto_sign_publickeybytes=function(){return K.asm._crypto_sign_publickeybytes.apply(null,arguments)},K._crypto_sign_update=function(){return K.asm._crypto_sign_update.apply(null,arguments)},K.setTempRet0=function(){return K.asm.setTempRet0.apply(null,arguments)},K._crypto_generichash_bytes=function(){return K.asm._crypto_generichash_bytes.apply(null,arguments)},K._crypto_generichash_bytes_max=function(){return K.asm._crypto_generichash_bytes_max.apply(null,arguments)},K._crypto_secretbox_open_detached=function(){return K.asm._crypto_secretbox_open_detached.apply(null,arguments)},K._crypto_sign_init=function(){return K.asm._crypto_sign_init.apply(null,arguments)},K._crypto_core_hchacha20_keybytes=function(){return K.asm._crypto_core_hchacha20_keybytes.apply(null,arguments)},K._crypto_sign_verify_detached=function(){return K.asm._crypto_sign_verify_detached.apply(null,arguments)},K._crypto_kx_seed_keypair=function(){return K.asm._crypto_kx_seed_keypair.apply(null,arguments)},K._crypto_box_open_easy=function(){return K.asm._crypto_box_open_easy.apply(null,arguments)},K._crypto_hash_bytes=function(){return K.asm._crypto_hash_bytes.apply(null,arguments)},K._crypto_aead_chacha20poly1305_nsecbytes=function(){return K.asm._crypto_aead_chacha20poly1305_nsecbytes.apply(null,arguments)},K._crypto_kdf_contextbytes=function(){return K.asm._crypto_kdf_contextbytes.apply(null,arguments)},K._crypto_sign_bytes=function(){return K.asm._crypto_sign_bytes.apply(null,arguments)},K._crypto_generichash_update=function(){return K.asm._crypto_generichash_update.apply(null,arguments)},K._crypto_scalarmult=function(){return K.asm._crypto_scalarmult.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_abytes=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_abytes.apply(null,arguments)},K.stackRestore=function(){return K.asm.stackRestore.apply(null,arguments)},K._crypto_kdf_keygen=function(){return K.asm._crypto_kdf_keygen.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_keybytes=function(){return K.asm._crypto_secretstream_xchacha20poly1305_keybytes.apply(null,arguments)},K._crypto_sign_detached=function(){return K.asm._crypto_sign_detached.apply(null,arguments)},K._crypto_box_easy=function(){return K.asm._crypto_box_easy.apply(null,arguments)},K._crypto_secretstream_xchacha20poly1305_pull=function(){return K.asm._crypto_secretstream_xchacha20poly1305_pull.apply(null,arguments)},K._sodium_base642bin=function(){return K.asm._sodium_base642bin.apply(null,arguments)},K._sodium_base64_encoded_len=function(){return K.asm._sodium_base64_encoded_len.apply(null,arguments)},K._memmove=function(){return K.asm._memmove.apply(null,arguments)},K._crypto_generichash_final=function(){return K.asm._crypto_generichash_final.apply(null,arguments)},K._crypto_stream_keygen=function(){return K.asm._crypto_stream_keygen.apply(null,arguments)},K._randombytes_uniform=function(){return K.asm._randombytes_uniform.apply(null,arguments)},K._crypto_sign_seed_keypair=function(){return K.asm._crypto_sign_seed_keypair.apply(null,arguments)},K._crypto_kdf_derive_from_key=function(){return K.asm._crypto_kdf_derive_from_key.apply(null,arguments)},K._crypto_shorthash_keygen=function(){return K.asm._crypto_shorthash_keygen.apply(null,arguments)},K._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return K.asm._crypto_aead_chacha20poly1305_ietf_npubbytes.apply(null,arguments)};if($.stackAlloc=K.stackAlloc,$.stackSave=K.stackSave,$.stackRestore=K.stackRestore,$.establishStackSpace=K.establishStackSpace,$.setTempRet0=K.setTempRet0,$.getTempRet0=K.getTempRet0,K.asm=qA,XA)if("function"==typeof K.locateFile?XA=K.locateFile(XA):K.memoryInitializerPrefixURL&&(XA=K.memoryInitializerPrefixURL+XA),W||q){var $A=K.readBinary(XA);nA.set($A,$.GLOBAL_BASE)}else{S("memory initializer");var AI=function(A){A.byteLength&&(A=new Uint8Array(A)),nA.set(A,$.GLOBAL_BASE),K.memoryInitializerRequest&&delete K.memoryInitializerRequest.response,m("memory initializer")};function II(){K.readAsync(XA,AI,function(){throw"could not load memory initializer "+XA})}var gI=P(XA);if(gI)AI(gI.buffer);else if(K.memoryInitializerRequest){function BI(){var A=K.memoryInitializerRequest,I=A.response;if(200!==A.status&&0!==A.status){var g=P(K.memoryInitializerRequestURL);if(!g)return void II();I=g.buffer}AI(I)}K.memoryInitializerRequest.response?setTimeout(BI,0):K.memoryInitializerRequest.addEventListener("load",BI)}else II()}J.prototype=new Error,J.prototype.constructor=J;var CI,iI=null,eI=!1;xA=function A(){K.calledRun||L(),K.calledRun||(xA=A)},K.callMain=K.callMain=function(A){function I(){for(var A=0;A<3;A++)B.push(0)}A=A||[],G();var g=A.length+1,B=[E(R(K.thisProgram),"i8",0)];I();for(var C=0;C<g-1;C+=1)B.push(E(R(A[C]),"i8",0)),I();B.push(0),B=E(B,"i32",0);try{x(K._main(g,B,0),!0)}catch(A){if(A instanceof J)return;if("SimulateInfiniteLoop"==A)return void(K.noExitRuntime=!0);var i=A;A&&"object"==typeof A&&A.stack&&(i=[A,A.stack]),K.printErr("exception thrown: "+i),K.quit(1,A)}finally{eI=!0}},K.run=K.run=L,K.exit=K.exit=x;var QI=[];if(K.abort=K.abort=X,K.preInit)for("function"==typeof K.preInit&&(K.preInit=[K.preInit]);K.preInit.length>0;)K.preInit.pop()();var EI=!0;K.noInitialRun&&(EI=!1),L()}).catch(function(){function A(A){U("NO_DYNAMIC_EXECUTION=1 was set, cannot eval")}function I(A,I){A||U("Assertion failed: "+I)}function g(A){var g=P["_"+A];return g||U("NO_DYNAMIC_EXECUTION=1 was set, cannot eval"),I(g,"Cannot call unknown function "+A+" (perhaps LLVM optimizations or closure removed it?)"),g}function C(A,I,g,B){switch("*"===(g=g||"i8").charAt(g.length-1)&&(g="i32"),g){case"i1":case"i8":BA[A>>0]=I;break;case"i16":iA[A>>1]=I;break;case"i32":QA[A>>2]=I;break;case"i64":tempI64=[I>>>0,(tempDouble=I,+HA(tempDouble)>=1?tempDouble>0?(0|YA(+MA(tempDouble/4294967296),4294967295))>>>0:~~+kA((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],QA[A>>2]=tempI64[0],QA[A+4>>2]=tempI64[1];break;case"float":nA[A>>2]=I;break;case"double":tA[A>>3]=I;break;default:U("invalid type for setValue: "+g)}}function i(A,I,g){switch("*"===(I=I||"i8").charAt(I.length-1)&&(I="i32"),I){case"i1":case"i8":return BA[A>>0];case"i16":return iA[A>>1];case"i32":case"i64":return QA[A>>2];case"float":return nA[A>>2];case"double":return tA[A>>3];default:U("invalid type for setValue: "+I)}return null}function e(A,g,B,i){var e,Q;"number"==typeof A?(e=!0,Q=A):(e=!1,Q=A.length);var E,n="string"==typeof g?g:null;if(E=B==AA?i:["function"==typeof KA?KA:Z.staticAlloc,Z.stackAlloc,Z.staticAlloc,Z.dynamicAlloc][void 0===B?$:B](Math.max(Q,n?1:g.length)),e){var t,i=E;for(I(0==(3&E)),t=E+(-4&Q);i<t;i+=4)QA[i>>2]=0;for(t=E+Q;i<t;)BA[i++>>0]=0;return E}if("i8"===n)return A.subarray||A.slice?CA.set(A,E):CA.set(new Uint8Array(A),E),E;for(var r,a,o,c=0;c<Q;){var f=A[c];"function"==typeof f&&(f=Z.getFunctionIndex(f)),0!==(r=n||g[c])?("i64"==r&&(r="i32"),C(E+c,f,r),o!==r&&(a=Z.getNativeTypeSize(r),o=r),c+=a):c++}return E}function Q(A,I){if(0===I||!A)return"";for(var g,B=0,C=0;;){if(g=CA[A+C>>0],B|=g,0==g&&!I)break;if(C++,I&&C==I)break}I||(I=C);var i="";if(B<128){for(var e;I>0;)e=String.fromCharCode.apply(String,CA.subarray(A,A+Math.min(I,1024))),i=i?i+e:e,A+=1024,I-=1024;return i}return P.UTF8ToString(A)}function E(A,I){for(var g=I;A[g];)++g;if(g-I>16&&A.subarray&&IA)return IA.decode(A.subarray(I,g));for(var B,C,i,e,Q,E="";;){if(!(B=A[I++]))return E;if(128&B)if(C=63&A[I++],192!=(224&B))if(i=63&A[I++],224==(240&B)?B=(15&B)<<12|C<<6|i:(e=63&A[I++],240==(248&B)?B=(7&B)<<18|C<<12|i<<6|e:(Q=63&A[I++],B=248==(252&B)?(3&B)<<24|C<<18|i<<12|e<<6|Q:(1&B)<<30|C<<24|i<<18|e<<12|Q<<6|63&A[I++])),B<65536)E+=String.fromCharCode(B);else{var n=B-65536;E+=String.fromCharCode(55296|n>>10,56320|1023&n)}else E+=String.fromCharCode((31&B)<<6|C);else E+=String.fromCharCode(B)}}function n(A,I,g,B){if(!(B>0))return 0;for(var C=g,i=g+B-1,e=0;e<A.length;++e){var Q=A.charCodeAt(e);if(Q>=55296&&Q<=57343&&(Q=65536+((1023&Q)<<10)|1023&A.charCodeAt(++e)),Q<=127){if(g>=i)break;I[g++]=Q}else if(Q<=2047){if(g+1>=i)break;I[g++]=192|Q>>6,I[g++]=128|63&Q}else if(Q<=65535){if(g+2>=i)break;I[g++]=224|Q>>12,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else if(Q<=2097151){if(g+3>=i)break;I[g++]=240|Q>>18,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else if(Q<=67108863){if(g+4>=i)break;I[g++]=248|Q>>24,I[g++]=128|Q>>18&63,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}else{if(g+5>=i)break;I[g++]=252|Q>>30,I[g++]=128|Q>>24&63,I[g++]=128|Q>>18&63,I[g++]=128|Q>>12&63,I[g++]=128|Q>>6&63,I[g++]=128|63&Q}}return I[g]=0,g-C}function t(A,I,g){return n(A,CA,I,g)}function r(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:B<=2097151?4:B<=67108863?5:6}return I}function a(A){var I=P.___cxa_demangle||P.__cxa_demangle;if(I){try{var g=A.substr(1),B=r(g)+1,C=KA(B);t(g,C,B);var e=KA(4),E=I(C,0,0,e);if(0===i(e,"i32")&&E)return Q(E)}catch(A){}finally{C&&XA(C),e&&XA(e),E&&XA(E)}return A}return Z.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"),A}function o(A){var I=/__Z[\w\d_]+/g;return A.replace(I,function(A){var I=a(A);return A===I?A:A+" ["+I+"]"})}function c(){var A=new Error;if(!A.stack){try{throw new Error(0)}catch(I){A=I}if(!A.stack)return"(no stack trace available)"}return A.stack.toString()}function y(){var A=c();return P.extraStackTrace&&(A+="\n"+P.extraStackTrace()),o(A)}function w(){U("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+lA+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function s(){w()}function h(A){for(;A.length>0;){var I=A.shift();if("function"!=typeof I){var g=I.func;"number"==typeof g?void 0===I.arg?P.dynCall_v(g):P.dynCall_vi(g,I.arg):g(void 0===I.arg?null:I.arg)}else I()}}function l(){if(P.preRun)for("function"==typeof P.preRun&&(P.preRun=[P.preRun]);P.preRun.length;)d(P.preRun.shift());h(uA)}function u(){GA||(GA=!0,h(pA))}function p(){h(DA)}function D(){h(_A),FA=!0}function _(){if(P.postRun)for("function"==typeof P.postRun&&(P.postRun=[P.postRun]);P.postRun.length;)G(P.postRun.shift());h(dA)}function d(A){uA.unshift(A)}function G(A){dA.unshift(A)}function F(A,I){BA.set(A,I)}function H(A,I,g){for(var B=0;B<A.length;++B)BA[I++>>0]=A.charCodeAt(B);g||(BA[I>>0]=0)}function k(A){bA++,P.monitorRunDependencies&&P.monitorRunDependencies(bA)}function M(A){if(bA--,P.monitorRunDependencies&&P.monitorRunDependencies(bA),0==bA&&(null!==vA&&(clearInterval(vA),vA=null),SA)){var I=SA;SA=null,I()}}function Y(A){return P.___errno_location&&(QA[P.___errno_location()>>2]=A),A}function b(A,I,g){var B=g>0?g:r(A)+1,C=new Array(B),i=n(A,C,0,C.length);return I&&(C.length=i),C}function v(A){if("boolean"==typeof K&&K){var I;try{I=Buffer.from(A,"base64")}catch(g){I=new Buffer(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=LA(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function S(A){var I="data:application/octet-stream;base64,";if(String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I))return v(A.slice(I.length))}function m(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function N(A){function I(){P.calledRun||(P.calledRun=!0,O||(u(),p(),P.onRuntimeInitialized&&P.onRuntimeInitialized(),P._main&&AI&&P.callMain(A),_()))}A=A||P.arguments,null===OA&&(OA=Date.now()),bA>0||(l(),bA>0||P.calledRun||(P.setStatus?(P.setStatus("Running..."),setTimeout(function(){setTimeout(function(){P.setStatus("")},1),I()},1)):I()))}function R(A,I){I&&P.noExitRuntime||(P.noExitRuntime||(O=!0,z=A,cA=qA,D(),P.onExit&&P.onExit(A)),K&&process.exit(A),P.quit(A,new m(A)))}function U(A){P.onAbort&&P.onAbort(A),void 0!==A?(P.print(A),P.printErr(A),A=JSON.stringify(A)):A="",O=!0,z=1;var I="abort("+A+") at "+y()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";throw $A&&$A.forEach(function(g){I=g(I,A)}),I}(P=B).onAbort=void 0,P.onRuntimeInitialized=void 0;var P;P||(P=(void 0!==P?P:null)||{});var J={};for(var L in P)P.hasOwnProperty(L)&&(J[L]=P[L]);var x=!1,X=!1,K=!1,V=!1;if(P.ENVIRONMENT)if("WEB"===P.ENVIRONMENT)x=!0;else if("WORKER"===P.ENVIRONMENT)X=!0;else if("NODE"===P.ENVIRONMENT)K=!0;else{if("SHELL"!==P.ENVIRONMENT)throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");V=!0}else x="object"==typeof window,X="function"==typeof importScripts,K="object"==typeof process&&"function"=="function"&&!x&&!X,V=!x&&!K&&!X;if(K){P.print||(P.print=console.log),P.printErr||(P.printErr=console.warn);var j,T;P.read=function(A,I){var g;return(g=S(A))||(j||(j=__webpack_require__(51)),T||(T=__webpack_require__(52)),A=T.normalize(A),g=j.readFileSync(A)),I?g:g.toString()},P.readBinary=function(A){var g=P.read(A,!0);return g.buffer||(g=new Uint8Array(g)),I(g.buffer),g},P.load=function(I){A(read(I))},P.thisProgram||(process.argv.length>1?P.thisProgram=process.argv[1].replace(/\\/g,"/"):P.thisProgram="unknown-program"),P.arguments=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=P),process.on("uncaughtException",function(A){if(!(A instanceof m))throw A}),P.inspect=function(){return"[Emscripten Module object]"}}else if(V)P.print||(P.print=print),"undefined"!=typeof printErr&&(P.printErr=printErr),"undefined"!=typeof read?P.read=function(A){var I=S(A);return I?PA(I):read(A)}:P.read=function(){throw"no read() available"},P.readBinary=function(A){var g;return(g=S(A))?g:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(g=read(A,"binary"),I("object"==typeof g),g)},"undefined"!=typeof scriptArgs?P.arguments=scriptArgs:void 0!==arguments&&(P.arguments=arguments),"function"==typeof quit&&(P.quit=function(A,I){quit(A)});else{if(!x&&!X)throw new Error("Unknown runtime environment. Where are we?");if(P.read=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=S(A);if(g)return PA(g);throw I}},X&&(P.readBinary=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(A){var g=S(f);if(g)return g;throw A}}),P.readAsync=function(A,I,g){var B=new XMLHttpRequest;B.open("GET",A,!0),B.responseType="arraybuffer",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var C=S(A);C?I(C.buffer):g()}},B.onerror=g,B.send(null)},void 0!==arguments&&(P.arguments=arguments),"undefined"!=typeof console)P.print||(P.print=function(A){}),P.printErr||(P.printErr=function(A){});else{P.print||(P.print=function(A){})}X&&(P.load=importScripts),void 0===P.setWindowTitle&&(P.setWindowTitle=function(A){document.title=A})}!P.load&&P.read&&(P.load=function(I){A(P.read(I))}),P.print||(P.print=function(){}),P.printErr||(P.printErr=P.print),P.arguments||(P.arguments=[]),P.thisProgram||(P.thisProgram="./this.program"),P.quit||(P.quit=function(A,I){throw I}),P.print=P.print,P.printErr=P.printErr,P.preRun=[],P.postRun=[];for(var L in J)J.hasOwnProperty(L)&&(P[L]=J[L]);J=void 0;var Z={setTempRet0:function(A){return tempRet0=A,A},getTempRet0:function(){return tempRet0},stackSave:function(){return cA},stackRestore:function(A){cA=A},getNativeTypeSize:function(A){switch(A){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===A[A.length-1])return Z.QUANTUM_SIZE;if("i"===A[0]){var g=parseInt(A.substr(1));return I(g%8==0),g/8}return 0}},getNativeFieldSize:function(A){return Math.max(Z.getNativeTypeSize(A),Z.QUANTUM_SIZE)},STACK_ALIGN:16,prepVararg:function(A,g){return"double"===g||"i64"===g?7&A&&(I(4==(7&A)),A+=4):I(0==(3&A)),A},getAlignSize:function(A,I,g){return g||"i64"!=A&&"double"!=A?A?Math.min(I||(A?Z.getNativeFieldSize(A):0),Z.QUANTUM_SIZE):Math.min(I,8):8},dynCall:function(A,I,g){return g&&g.length?P["dynCall_"+A].apply(null,[I].concat(g)):P["dynCall_"+A].call(null,I)},functionPointers:[null,null,null,null,null,null,null,null],addFunction:function(A){for(var I=0;I<Z.functionPointers.length;I++)if(!Z.functionPointers[I])return Z.functionPointers[I]=A,1*(1+I);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."},removeFunction:function(A){Z.functionPointers[(A-1)/1]=null},warnOnce:function(A){Z.warnOnce.shown||(Z.warnOnce.shown={}),Z.warnOnce.shown[A]||(Z.warnOnce.shown[A]=1,P.printErr(A))},funcWrappers:{},getFuncWrapper:function(A,g){if(A){I(g),Z.funcWrappers[g]||(Z.funcWrappers[g]={});var B=Z.funcWrappers[g];return B[A]||(1===g.length?B[A]=function(){return Z.dynCall(g,A)}:2===g.length?B[A]=function(I){return Z.dynCall(g,A,[I])}:B[A]=function(){return Z.dynCall(g,A,Array.prototype.slice.call(arguments))}),B[A]}},getCompilerSetting:function(A){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"},stackAlloc:function(A){var I=cA;return cA=cA+A|0,cA=cA+15&-16,I},staticAlloc:function(A){var I=aA;return aA=aA+A|0,aA=aA+15&-16,I},dynamicAlloc:function(A){var I=QA[wA>>2],g=-16&(I+A+15|0);return QA[wA>>2]=g,g>=lA&&!s()?(QA[wA>>2]=I,0):I},alignMemory:function(A,I){return A=Math.ceil(A/(I||16))*(I||16)},makeBigInt:function(A,I,g){return g?+(A>>>0)+4294967296*+(I>>>0):+(A>>>0)+4294967296*+(0|I)},GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};P.Runtime=Z;var W,q,O=0,z=0;!function(){var A={stackSave:function(){Z.stackSave()},stackRestore:function(){Z.stackRestore()},arrayToC:function(A){var I=Z.stackAlloc(A.length);return F(A,I),I},stringToC:function(A){var I=0;if(null!==A&&void 0!==A&&0!==A){var g=1+(A.length<<2);t(A,I=Z.stackAlloc(g),g)}return I}},I={string:A.stringToC,array:A.arrayToC};q=function(A,B,C,i,e){var E=g(A),n=[],t=0;if(i)for(var r=0;r<i.length;r++){var a=I[C[r]];a?(0===t&&(t=Z.stackSave()),n[r]=a(i[r])):n[r]=i[r]}var o=E.apply(null,n);if("string"===B&&(o=Q(o)),0!==t){if(e&&e.async)return void EmterpreterAsync.asyncFinalizers.push(function(){Z.stackRestore(t)});Z.stackRestore(t)}return o},W=function(A,I,g){return function(){return q(A,I,g,arguments)}}}(),P.ccall=q,P.cwrap=W,P.setValue=C,P.getValue=i;var $=2,AA=4;P.ALLOC_NORMAL=0,P.ALLOC_STACK=1,P.ALLOC_STATIC=$,P.ALLOC_DYNAMIC=3,P.ALLOC_NONE=AA,P.allocate=e,P.getMemory=function(A){return oA?GA?KA(A):Z.dynamicAlloc(A):Z.staticAlloc(A)},P.Pointer_stringify=Q,P.AsciiToString=function(A){for(var I="";;){var g=BA[A++>>0];if(!g)return I;I+=String.fromCharCode(g)}},P.stringToAscii=function(A,I){return H(A,I,!1)};var IA="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;P.UTF8ArrayToString=E,P.UTF8ToString=function(A){return E(CA,A)},P.stringToUTF8Array=n,P.stringToUTF8=t,P.lengthBytesUTF8=r;"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");P.stackTrace=y;var gA,BA,CA,iA,eA,QA,EA,nA,tA,rA,aA,oA,cA,fA,yA,wA,sA=16384;rA=aA=cA=fA=yA=wA=0,oA=!1;var hA=P.TOTAL_STACK||5242880,lA=P.TOTAL_MEMORY||16777216;if(lA<hA&&P.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+lA+"! (TOTAL_STACK="+hA+")"),gA=P.buffer?P.buffer:new ArrayBuffer(lA),P.HEAP8=BA=new Int8Array(gA),P.HEAP16=iA=new Int16Array(gA),P.HEAP32=QA=new Int32Array(gA),P.HEAPU8=CA=new Uint8Array(gA),P.HEAPU16=eA=new Uint16Array(gA),P.HEAPU32=EA=new Uint32Array(gA),P.HEAPF32=nA=new Float32Array(gA),P.HEAPF64=tA=new Float64Array(gA),QA[0]=1668509029,iA[1]=25459,115!==CA[2]||99!==CA[3])throw"Runtime error: expected the system to be little-endian!";P.HEAP=void 0,P.buffer=gA,P.HEAP8=BA,P.HEAP16=iA,P.HEAP32=QA,P.HEAPU8=CA,P.HEAPU16=eA,P.HEAPU32=EA,P.HEAPF32=nA,P.HEAPF64=tA;var uA=[],pA=[],DA=[],_A=[],dA=[],GA=!1,FA=!1;P.addOnPreRun=d,P.addOnInit=function(A){pA.unshift(A)},P.addOnPreMain=function(A){DA.unshift(A)},P.addOnExit=function(A){_A.unshift(A)},P.addOnPostRun=G,P.writeStringToMemory=function(A,I,g){Z.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");var B,C;g&&(C=I+r(A),B=BA[C]),t(A,I,1/0),g&&(BA[C]=B)},P.writeArrayToMemory=F,P.writeAsciiToMemory=H,Math.imul&&-5===Math.imul(4294967295,5)||(Math.imul=function(A,I){var g=65535&A,B=65535&I;return g*B+((A>>>16)*B+g*(I>>>16)<<16)|0}),Math.imul=Math.imul,Math.clz32||(Math.clz32=function(A){A>>>=0;for(var I=0;I<32;I++)if(A&1<<31-I)return I;return 32}),Math.clz32=Math.clz32,Math.trunc||(Math.trunc=function(A){return A<0?Math.ceil(A):Math.floor(A)}),Math.trunc=Math.trunc;var HA=Math.abs,kA=(Math.cos,Math.sin,Math.tan,Math.acos,Math.asin,Math.atan,Math.atan2,Math.exp,Math.log,Math.sqrt,Math.ceil),MA=Math.floor,YA=(Math.pow,Math.imul,Math.fround,Math.round,Math.min),bA=(Math.clz32,Math.trunc,0),vA=null,SA=null;P.addRunDependency=k,P.removeRunDependency=M,P.preloadedImages={},P.preloadedAudios={};var mA=null,NA=[function(){return P.getRandomValue()},function(){if(void 0===P.getRandomValue)try{var A="object"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),P.getRandomValue=g}catch(A){try{var B=__webpack_require__(53),C=function(){var A=B.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),P.getRandomValue=C}catch(A){throw"No secure random number generator found"}}}];rA=Z.GLOBAL_BASE,aA=rA+35456,pA.push(),mA="data:application/octet-stream;base64,";var RA=aA;aA+=16;var UA={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};wA=e(1,"i32",$),fA=(cA=Z.alignMemory(aA))+hA,yA=Z.alignMemory(fA),QA[wA>>2]=yA,oA=!0;var PA=function(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(B&=255),I.push(String.fromCharCode(B))}return I.join("")};P.intArrayFromString=b,P.intArrayToString=PA;var JA="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",LA="function"==typeof atob?atob:function(A){var I,g,B,C,i,e,Q="",E=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=JA.indexOf(A.charAt(E++))<<2|(C=JA.indexOf(A.charAt(E++)))>>4,g=(15&C)<<4|(i=JA.indexOf(A.charAt(E++)))>>2,B=(3&i)<<6|(e=JA.indexOf(A.charAt(E++))),Q+=String.fromCharCode(I),64!==i&&(Q+=String.fromCharCode(g)),64!==e&&(Q+=String.fromCharCode(B))}while(E<A.length);return Q};P.asmGlobalArg={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:1/0},P.asmLibraryArg={abort:U,assert:I,enlargeMemory:s,getTotalMemory:function(){return lA},abortOnCannotGrowMemory:w,_emscripten_asm_const_i:function(A){return NA[A]()},_sysconf:function(A){switch(A){case 30:return sA;case 85:return CA.length/sA;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator?navigator.hardwareConcurrency||1:1}return Y(UA.EINVAL),-1},_abort:function(){P.abort()},___setErrNo:Y,_emscripten_memcpy_big:function(A,I,g){return CA.set(CA.subarray(I,I+g),A),A},___assert_fail:function(A,I,g,B){throw O=!0,"Assertion failed: "+Q(A)+", at: "+[I?Q(I):"unknown filename",g,B?Q(B):"unknown function"]+" at "+y()},DYNAMICTOP_PTR:wA,tempDoublePtr:RA,ABORT:O,STACKTOP:cA,STACK_MAX:fA};var xA=function(A,I,g){"";function B(A,I){A|=0,I|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0;C=oB,i=oB=oB+63&-64,oB=oB+256|0,g=0;do{e=0|dI(I+(g<<3)|0),tB[(B=i+128+(g<<3)|0)>>2]=e,tB[B+4>>2]=wB,g=g+1|0}while(16!=(0|g));I=A,B=(g=i)+64|0;do{tB[g>>2]=tB[I>>2],g=g+4|0,I=I+4|0}while((0|g)<(0|B));for(tB[i+88>>2]=1595750129,tB[i+88+4>>2]=-1521486534,$=-1377402159^tB[A+64>>2],f=1359893119^tB[A+64+4>>2],e=725511199^tB[A+72>>2],l=-1694144372^tB[A+72+4>>2],r=-79577749^tB[A+80>>2],y=528734635^tB[A+80+4>>2],v=327033209^tB[A+88>>2],z=1541459225^tB[A+88+4>>2],tB[i+120>>2]=v,tB[i+120+4>>2]=z,g=0|Qg(0|(g=0|Qg(0|(N=0|Qg(0|(N=0|Qg(0|(s=0|tB[i+32>>2]),0|(B=0|tB[i+32+4>>2]),0|tB[i>>2],0|tB[i+4>>2])),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2])),0|(g=wB),0|(B=0|HI(s^(K=0|Qg(0|(f=0|HI($^N,f^g,32)),0|($=wB),-205731576,1779033703)),B^(R=wB),24)),0|(s=wB))),0|wB,0|tB[(N=i+128+8|0)>>2],0|tB[N+4>>2]),J=wB,tB[i>>2]=g,tB[i+4>>2]=J,$=0|HI(f^g,$^J,16),f=wB,tB[i+96>>2]=$,tB[i+96+4>>2]=f,f=0|Qg(0|K,0|R,0|$,0|f),$=wB,tB[i+64>>2]=f,tB[i+64+4>>2]=$,$=0|HI(B^f,s^$,63),tB[i+32>>2]=$,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(f=0|Qg(0|(f=0|Qg(0|($=0|tB[i+40>>2]),0|(s=0|tB[i+40+4>>2]),0|tB[i+8>>2],0|tB[i+8+4>>2])),0|wB,0|tB[(B=i+128+16|0)>>2],0|tB[B+4>>2])),l^(R=wB),32))^(R=0|Qg(0|(R=0|Qg(0|f,0|R,0|(s=0|HI($^(K=0|Qg(0|l,0|(e=wB),-2067093701,-1150833019)),s^(G=wB),24)),0|($=wB))),0|wB,0|tB[(f=i+128+24|0)>>2],0|tB[f+4>>2])),e^(u=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,G=0|Qg(0|K,0|G,0|e,0|l),K=wB,tB[i+72>>2]=G,tB[i+72+4>>2]=K,K=0|HI(s^G,$^K,63),$=wB,r=0|HI((y=0|HI(r^(w=0|Qg(0|(w=0|Qg(0|(G=0|tB[i+48>>2]),0|(s=0|tB[i+48+4>>2]),0|tB[i+16>>2],0|tB[i+16+4>>2])),0|wB,0|tB[(j=i+128+32|0)>>2],0|tB[j+4>>2])),y^(Q=wB),32))^(Q=0|Qg(0|(Q=0|Qg(0|w,0|Q,0|(s=0|HI(G^(d=0|Qg(0|y,0|(r=wB),-23791573,1013904242)),s^(I=wB),24)),0|(G=wB))),0|wB,0|tB[(w=i+128+40|0)>>2],0|tB[w+4>>2])),r^(U=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,G=0|HI(s^(I=0|Qg(0|d,0|I,0|r,0|y)),G^(d=wB),63),s=wB,z=0|HI(v^(h=0|Qg(0|(h=0|Qg(0|(t=0|tB[i+56>>2]),0|(a=0|tB[i+56+4>>2]),0|tB[i+24>>2],0|tB[i+24+4>>2])),0|wB,0|tB[(c=i+128+48|0)>>2],0|tB[c+4>>2])),z^(O=wB),32),v=wB,t=0|HI((a=0|HI(t^(_=0|Qg(0|tB[i+88>>2],0|tB[i+88+4>>2],0|z,0|v)),a^(H=wB),24))^(H=0|Qg(0|_,0|H,0|(v=0|HI(z^(O=0|Qg(0|(O=0|Qg(0|h,0|O,0|a,0|(t=wB))),0|wB,0|tB[(h=i+128+56|0)>>2],0|tB[h+4>>2])),v^(p=wB),16)),0|(z=wB))),t^(_=wB),63),a=wB,v=0|HI((z=0|HI(v^(J=0|Qg(0|(J=0|Qg(0|K,0|$,0|g,0|J)),0|wB,0|tB[(g=i+128+64|0)>>2],0|tB[g+4>>2])),z^(L=wB),32))^(L=0|Qg(0|(L=0|Qg(0|J,0|L,0|($=0|HI(K^(d=0|Qg(0|I,0|d,0|z,0|(v=wB))),$^(I=wB),24)),0|(K=wB))),0|wB,0|tB[(J=i+128+72|0)>>2],0|tB[J+4>>2])),v^(q=wB),16),z=wB,tB[i+120>>2]=v,tB[i+120+4>>2]=z,z=0|Qg(0|d,0|I,0|v,0|z),v=wB,tB[i+80>>2]=z,tB[i+80+4>>2]=v,v=0|HI($^z,K^v,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,u=0|Qg(0|G,0|s,0|R,0|u),z=0|tB[(R=i+128+80|0)>>2],$=0|tB[R+4>>2],u=0|Qg(0|u,0|wB,0|z,0|$),I=wB,H=0|Qg(0|(_=0|Qg(0|H,0|_,0|(d=0|HI(tB[i+96>>2]^u,tB[i+96+4>>2]^I,32)),0|(D=wB))),0|(H=wB),0|(D=0|HI(d^(I=0|Qg(0|(I=0|Qg(0|u,0|I,0|(s=0|HI(G^_,s^H,24)),0|(G=wB))),0|wB,0|tB[(u=i+128+88|0)>>2],0|tB[u+4>>2])),D^(m=wB),16)),0|(d=wB)),_=wB,tB[i+88>>2]=H,tB[i+88+4>>2]=_,_=0|HI(s^H,G^_,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,l=0|HI(e^(U=0|Qg(0|(U=0|Qg(0|t,0|a,0|Q,0|U)),0|wB,0|tB[(Q=i+128+96|0)>>2],0|tB[Q+4>>2])),l^(H=wB),32),e=wB,H=0|Qg(0|U,0|H,0|(a=0|HI(t^(s=0|Qg(0|tB[i+64>>2],0|tB[i+64+4>>2],0|l,0|e)),a^(o=wB),24)),0|(t=wB)),AA=0|tB[(U=i+128+104|0)>>2],W=0|tB[U+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(H=0|Qg(0|H,0|wB,0|AA,0|W)),e^(F=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,p=0|Qg(0|(n=0|tB[i+32>>2]),0|(BA=0|tB[i+32+4>>2]),0|O,0|p),x=0|tB[(O=i+128+112|0)>>2],E=0|tB[O+4>>2],y=0|HI(r^(p=0|Qg(0|p,0|wB,0|x,0|E)),y^(iA=wB),32),r=wB,iA=0|Qg(0|p,0|iA,0|(BA=0|HI(n^(Y=0|Qg(0|tB[i+72>>2],0|tB[i+72+4>>2],0|y,0|r)),BA^(X=wB),24)),0|(n=wB)),M=0|tB[(p=i+128+120|0)>>2],gA=0|tB[p+4>>2],D=0|HI((d=0|HI(D^(E=0|Qg(0|(q=0|Qg(0|L,0|q,0|(n=0|HI(BA^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(iA=0|Qg(0|iA,0|wB,0|M,0|gA)),r^(P=wB),16)),0|(y=wB))),n^(Y=wB),63)),0|(BA=wB))),0|wB,0|x,0|E)),d^(x=wB),32))^($=0|Qg(0|(x=0|Qg(0|E,0|x,0|(BA=0|HI(n^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),BA^(o=wB),24)),0|(n=wB))),0|wB,0|z,0|$)),D^(z=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,n=0|HI(BA^o,n^s,63),tB[i+32>>2]=n,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(m=0|Qg(0|(m=0|Qg(0|v,0|K,0|I,0|m)),0|wB,0|tB[j>>2],0|tB[j+4>>2])),l^(I=wB),32))^(I=0|Qg(0|(I=0|Qg(0|m,0|I,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|tB[g>>2],0|tB[g+4>>2])),e^(m=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,y=0|HI(r^(F=0|Qg(0|(F=0|Qg(0|_,0|G,0|H,0|F)),0|wB,0|tB[J>>2],0|tB[J+4>>2])),y^(H=wB),32),r=wB,r=0|HI(y^(gA=0|Qg(0|(H=0|Qg(0|F,0|H,0|(G=0|HI(_^(n=0|Qg(0|tB[i+80>>2],0|tB[i+80+4>>2],0|y,0|r)),G^(BA=wB),24)),0|(_=wB))),0|wB,0|M,0|gA)),r^(M=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(BA=0|Qg(0|n,0|BA,0|r,0|y)),_^(n=wB),63),G=wB,W=0|Qg(0|(P=0|Qg(0|t,0|a,0|iA,0|P)),0|wB,0|AA,0|W),AA=wB,P=0|HI(tB[i+120>>2]^W,tB[i+120+4>>2]^AA,32),iA=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|tB[i+88>>2],0|tB[i+88+4>>2],0|P,0|iA)),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(iA=0|HI(P^(AA=0|Qg(0|(AA=0|Qg(0|W,0|AA,0|a,0|(t=wB))),0|wB,0|tB[c>>2],0|tB[c+4>>2])),iA^(W=wB),16)),0|(P=wB))),t^(H=wB),63),a=wB,$=0|Qg(0|(z=0|Qg(0|(z=0|Qg(0|v,0|K,0|$,0|z)),0|wB,0|tB[N>>2],0|tB[N+4>>2])),0|($=wB),0|(K=0|HI(v^(n=0|Qg(0|BA,0|n,0|(P=0|HI(iA^z,P^$,32)),0|(iA=wB))),K^(BA=wB),24)),0|(v=wB)),z=0|tB[Q>>2],x=0|tB[Q+4>>2],iA=0|HI(P^($=0|Qg(0|$,0|wB,0|z,0|x)),iA^(E=wB),16),P=wB,tB[i+120>>2]=iA,tB[i+120+4>>2]=P,P=0|Qg(0|n,0|BA,0|iA,0|P),iA=wB,tB[i+80>>2]=P,tB[i+80+4>>2]=iA,v=0|HI(K^P,v^iA,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,m=0|Qg(0|_,0|G,0|I,0|m),I=0|tB[i+128>>2],BA=0|tB[i+128+4>>2],n=0|Qg(0|(m=0|Qg(0|m,0|wB,0|I,0|BA)),0|(n=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^m,d^n,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),m=0|tB[B>>2],q=0|tB[B+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(n=0|Qg(0|n,0|wB,0|m,0|q)),D^(L=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,M=0|Qg(0|t,0|a,0|gA,0|M),gA=0|tB[u>>2],CA=0|tB[u+4>>2],t=0|HI((a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^(M=0|Qg(0|M,0|wB,0|gA,0|CA)),l^(S=wB),32)),0|(e=wB))),a^(o=wB),24))^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(S=0|Qg(0|(S=0|Qg(0|M,0|S,0|a,0|(t=wB))),0|wB,0|tB[h>>2],0|tB[h+4>>2])),e^(M=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,W=0|Qg(0|(Z=0|tB[i+32>>2]),0|(V=0|tB[i+32+4>>2]),0|AA,0|W),AA=0|tB[w>>2],k=0|tB[w+4>>2],IA=0|Qg(0|(W=0|Qg(0|W,0|wB,0|AA,0|k)),0|(IA=wB),0|(V=0|HI(Z^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^W,y^IA,32)),0|(r=wB))),V^(X=wB),24)),0|(Z=wB)),W=0|tB[f>>2],b=0|tB[f+4>>2],D=0|HI((d=0|HI(D^(CA=0|Qg(0|(E=0|Qg(0|$,0|E,0|(Z=0|HI(V^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(IA=0|Qg(0|IA,0|wB,0|W,0|b)),r^(T=wB),16)),0|(y=wB))),Z^(Y=wB),63)),0|(V=wB))),0|wB,0|gA,0|CA)),d^(gA=wB),32))^(gA=0|Qg(0|(gA=0|Qg(0|CA,0|gA,0|(V=0|HI(Z^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),V^(o=wB),24)),0|(Z=wB))),0|wB,0|tB[g>>2],0|tB[g+4>>2])),D^(CA=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,Z=0|HI(V^o,Z^s,63),tB[i+32>>2]=Z,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(x=0|Qg(0|(L=0|Qg(0|v,0|K,0|n,0|L)),0|wB,0|z,0|x)),l^(z=wB),32))^(BA=0|Qg(0|(z=0|Qg(0|x,0|z,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|I,0|BA)),e^(I=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(k=0|Qg(0|(M=0|Qg(0|_,0|G,0|S,0|M)),0|wB,0|AA,0|k)),y^(AA=wB),32))^(q=0|Qg(0|(AA=0|Qg(0|k,0|AA,0|(G=0|HI(_^(iA=0|Qg(0|P,0|iA,0|y,0|(r=wB))),G^(P=wB),24)),0|(_=wB))),0|wB,0|m,0|q)),r^(m=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(P=0|Qg(0|iA,0|P,0|r,0|y)),_^(iA=wB),63),G=wB,T=0|Qg(0|(T=0|Qg(0|t,0|a,0|IA,0|T)),0|wB,0|tB[p>>2],0|tB[p+4>>2]),IA=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(AA=0|HI(tB[i+120>>2]^T,tB[i+120+4>>2]^IA,32)),0|(k=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(k=0|HI(AA^(IA=0|Qg(0|(IA=0|Qg(0|T,0|IA,0|a,0|(t=wB))),0|wB,0|tB[U>>2],0|tB[U+4>>2])),k^(T=wB),16)),0|(AA=wB))),t^(H=wB),63),a=wB,k=0|HI((AA=0|HI(k^(CA=0|Qg(0|(CA=0|Qg(0|v,0|K,0|gA,0|CA)),0|wB,0|tB[R>>2],0|tB[R+4>>2])),AA^(gA=wB),32))^(gA=0|Qg(0|(gA=0|Qg(0|CA,0|gA,0|(K=0|HI(v^(iA=0|Qg(0|P,0|iA,0|AA,0|(k=wB))),K^(P=wB),24)),0|(v=wB))),0|wB,0|tB[O>>2],0|tB[O+4>>2])),k^(CA=wB),16),AA=wB,tB[i+120>>2]=k,tB[i+120+4>>2]=AA,AA=0|Qg(0|iA,0|P,0|k,0|AA),k=wB,tB[i+80>>2]=AA,tB[i+80+4>>2]=k,v=0|HI(K^AA,v^k,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,F=0|Qg(0|(H=0|Qg(0|F,0|H,0|(d=0|HI(D^(b=0|Qg(0|(I=0|Qg(0|_,0|G,0|BA,0|I)),0|wB,0|W,0|b)),d^(W=wB),32)),0|(D=wB))),0|(F=wB),0|(D=0|HI(d^(W=0|Qg(0|(W=0|Qg(0|b,0|W,0|(G=0|HI(_^H,G^F,24)),0|(_=wB))),0|wB,0|tB[c>>2],0|tB[c+4>>2])),D^(b=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,m=0|Qg(0|t,0|a,0|q,0|m),q=0|tB[h>>2],I=0|tB[h+4>>2],BA=0|Qg(0|(m=0|Qg(0|m,0|wB,0|q,0|I)),0|(BA=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^m,l^BA,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),m=0|tB[N>>2],P=0|tB[N+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(BA=0|Qg(0|BA,0|wB,0|m,0|P)),e^(iA=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,T=0|Qg(0|(M=0|tB[i+32>>2]),0|(S=0|tB[i+32+4>>2]),0|IA,0|T),IA=0|tB[J>>2],z=0|tB[J+4>>2],D=0|HI((d=0|HI(D^(I=0|Qg(0|(CA=0|Qg(0|gA,0|CA,0|(M=0|HI((S=0|HI(M^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^(T=0|Qg(0|T,0|wB,0|IA,0|z)),y^(x=wB),32)),0|(r=wB))),S^(X=wB),24))^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(x=0|Qg(0|(x=0|Qg(0|T,0|x,0|S,0|(M=wB))),0|wB,0|tB[j>>2],0|tB[j+4>>2])),r^(T=wB),16)),0|(y=wB))),M^(Y=wB),63)),0|(S=wB))),0|wB,0|q,0|I)),d^(q=wB),32))^(z=0|Qg(0|(q=0|Qg(0|I,0|q,0|(S=0|HI(M^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),S^(o=wB),24)),0|(M=wB))),0|wB,0|IA,0|z)),D^(IA=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,M=0|HI(S^o,M^s,63),tB[i+32>>2]=M,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(b=0|Qg(0|(b=0|Qg(0|v,0|K,0|W,0|b)),0|wB,0|tB[f>>2],0|tB[f+4>>2])),l^(W=wB),32))^(P=0|Qg(0|(W=0|Qg(0|b,0|W,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|m,0|P)),e^(m=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(iA=0|Qg(0|(iA=0|Qg(0|_,0|G,0|BA,0|iA)),0|wB,0|tB[U>>2],0|tB[U+4>>2])),y^(BA=wB),32))^(BA=0|Qg(0|(BA=0|Qg(0|iA,0|BA,0|(G=0|HI(_^(k=0|Qg(0|AA,0|k,0|y,0|(r=wB))),G^(AA=wB),24)),0|(_=wB))),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),r^(iA=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(AA=0|Qg(0|k,0|AA,0|r,0|y)),_^(k=wB),63),G=wB,T=0|Qg(0|(T=0|Qg(0|t,0|a,0|x,0|T)),0|wB,0|tB[u>>2],0|tB[u+4>>2]),x=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(W=0|HI(tB[i+120>>2]^T,tB[i+120+4>>2]^x,32)),0|(b=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(b=0|HI(W^(x=0|Qg(0|(x=0|Qg(0|T,0|x,0|a,0|(t=wB))),0|wB,0|tB[O>>2],0|tB[O+4>>2])),b^(T=wB),16)),0|(W=wB))),t^(H=wB),63),a=wB,b=0|HI((W=0|HI(b^(IA=0|Qg(0|(IA=0|Qg(0|v,0|K,0|z,0|IA)),0|wB,0|tB[B>>2],0|tB[B+4>>2])),W^(z=wB),32))^(z=0|Qg(0|(z=0|Qg(0|IA,0|z,0|(K=0|HI(v^(k=0|Qg(0|AA,0|k,0|W,0|(b=wB))),K^(AA=wB),24)),0|(v=wB))),0|wB,0|tB[c>>2],0|tB[c+4>>2])),b^(IA=wB),16),W=wB,tB[i+120>>2]=b,tB[i+120+4>>2]=W,W=0|Qg(0|k,0|AA,0|b,0|W),b=wB,tB[i+80>>2]=W,tB[i+80+4>>2]=b,v=0|HI(K^W,v^b,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,m=0|Qg(0|_,0|G,0|P,0|m),P=0|tB[w>>2],AA=0|tB[w+4>>2],k=0|Qg(0|(m=0|Qg(0|m,0|wB,0|P,0|AA)),0|(k=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^m,d^k,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),m=0|tB[R>>2],M=0|tB[R+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(k=0|Qg(0|k,0|wB,0|m,0|M)),D^(S=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,iA=0|Qg(0|t,0|a,0|BA,0|iA),BA=0|tB[j>>2],q=0|tB[j+4>>2],I=0|Qg(0|(iA=0|Qg(0|iA,0|wB,0|BA,0|q)),0|(I=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^iA,l^I,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),iA=0|tB[i+128>>2],CA=0|tB[i+128+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(I=0|Qg(0|I,0|wB,0|iA,0|CA)),e^(gA=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,T=0|Qg(0|(L=0|tB[i+32>>2]),0|(n=0|tB[i+32+4>>2]),0|x,0|T),x=0|tB[p>>2],Z=0|tB[p+4>>2],D=0|HI((d=0|HI(D^(IA=0|Qg(0|(IA=0|Qg(0|z,0|IA,0|(L=0|HI((n=0|HI(L^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^(T=0|Qg(0|T,0|wB,0|x,0|Z)),y^(V=wB),32)),0|(r=wB))),n^(X=wB),24))^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(V=0|Qg(0|(V=0|Qg(0|T,0|V,0|n,0|(L=wB))),0|wB,0|tB[g>>2],0|tB[g+4>>2])),r^(T=wB),16)),0|(y=wB))),L^(Y=wB),63)),0|(n=wB))),0|wB,0|tB[J>>2],0|tB[J+4>>2])),d^(z=wB),32))^(CA=0|Qg(0|(z=0|Qg(0|IA,0|z,0|(n=0|HI(L^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),n^(o=wB),24)),0|(L=wB))),0|wB,0|iA,0|CA)),D^(iA=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,L=0|HI(n^o,L^s,63),tB[i+32>>2]=L,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(AA=0|Qg(0|(S=0|Qg(0|v,0|K,0|k,0|S)),0|wB,0|P,0|AA)),l^(P=wB),32))^(P=0|Qg(0|(P=0|Qg(0|AA,0|P,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|tB[h>>2],0|tB[h+4>>2])),e^(AA=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(gA=0|Qg(0|(gA=0|Qg(0|_,0|G,0|I,0|gA)),0|wB,0|tB[B>>2],0|tB[B+4>>2])),y^(I=wB),32))^(q=0|Qg(0|(I=0|Qg(0|gA,0|I,0|(G=0|HI(_^(b=0|Qg(0|W,0|b,0|y,0|(r=wB))),G^(W=wB),24)),0|(_=wB))),0|wB,0|BA,0|q)),r^(BA=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(W=0|Qg(0|b,0|W,0|r,0|y)),_^(b=wB),63),G=wB,M=0|Qg(0|(T=0|Qg(0|t,0|a,0|V,0|T)),0|wB,0|m,0|M),m=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(T=0|HI(tB[i+120>>2]^M,tB[i+120+4>>2]^m,32)),0|(V=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(V=0|HI(T^(Z=0|Qg(0|(m=0|Qg(0|M,0|m,0|a,0|(t=wB))),0|wB,0|x,0|Z)),V^(x=wB),16)),0|(T=wB))),t^(H=wB),63),a=wB,V=0|HI((T=0|HI(V^(iA=0|Qg(0|(iA=0|Qg(0|v,0|K,0|CA,0|iA)),0|wB,0|tB[O>>2],0|tB[O+4>>2])),T^(CA=wB),32))^(CA=0|Qg(0|(CA=0|Qg(0|iA,0|CA,0|(K=0|HI(v^(b=0|Qg(0|W,0|b,0|T,0|(V=wB))),K^(W=wB),24)),0|(v=wB))),0|wB,0|tB[N>>2],0|tB[N+4>>2])),V^(iA=wB),16),T=wB,tB[i+120>>2]=V,tB[i+120+4>>2]=T,T=0|Qg(0|b,0|W,0|V,0|T),V=wB,tB[i+80>>2]=T,tB[i+80+4>>2]=V,v=0|HI(K^T,v^V,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,AA=0|Qg(0|_,0|G,0|P,0|AA),P=0|tB[u>>2],W=0|tB[u+4>>2],b=0|Qg(0|(AA=0|Qg(0|AA,0|wB,0|P,0|W)),0|(b=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^AA,d^b,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),AA=0|tB[Q>>2],m=0|tB[Q+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(b=0|Qg(0|b,0|wB,0|AA,0|m)),D^(M=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,BA=0|Qg(0|t,0|a,0|q,0|BA),q=0|tB[c>>2],I=0|tB[c+4>>2],gA=0|Qg(0|(BA=0|Qg(0|BA,0|wB,0|q,0|I)),0|(gA=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^BA,l^gA,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),BA=0|tB[g>>2],S=0|tB[g+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(gA=0|Qg(0|gA,0|wB,0|BA,0|S)),e^(k=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,x=0|Qg(0|(L=0|tB[i+32>>2]),0|(n=0|tB[i+32+4>>2]),0|Z,0|x),Z=0|tB[f>>2],z=0|tB[f+4>>2],IA=0|Qg(0|(x=0|Qg(0|x,0|wB,0|Z,0|z)),0|(IA=wB),0|(n=0|HI(L^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^x,y^IA,32)),0|(r=wB))),n^(X=wB),24)),0|(L=wB)),x=0|tB[U>>2],E=0|tB[U+4>>2],D=0|HI((d=0|HI(D^(iA=0|Qg(0|(iA=0|Qg(0|CA,0|iA,0|(L=0|HI(n^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(IA=0|Qg(0|IA,0|wB,0|x,0|E)),r^($=wB),16)),0|(y=wB))),L^(Y=wB),63)),0|(n=wB))),0|wB,0|tB[B>>2],0|tB[B+4>>2])),d^(CA=wB),32))^(m=0|Qg(0|(CA=0|Qg(0|iA,0|CA,0|(n=0|HI(L^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),n^(o=wB),24)),0|(L=wB))),0|wB,0|AA,0|m)),D^(AA=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,L=0|HI(n^o,L^s,63),tB[i+32>>2]=L,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(I=0|Qg(0|(M=0|Qg(0|v,0|K,0|b,0|M)),0|wB,0|q,0|I)),l^(q=wB),32))^(q=0|Qg(0|(q=0|Qg(0|I,0|q,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|tB[R>>2],0|tB[R+4>>2])),e^(I=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(k=0|Qg(0|(k=0|Qg(0|_,0|G,0|gA,0|k)),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2])),y^(gA=wB),32))^(W=0|Qg(0|(gA=0|Qg(0|k,0|gA,0|(G=0|HI(_^(V=0|Qg(0|T,0|V,0|y,0|(r=wB))),G^(T=wB),24)),0|(_=wB))),0|wB,0|P,0|W)),r^(P=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(T=0|Qg(0|V,0|T,0|r,0|y)),_^(V=wB),63),G=wB,S=0|Qg(0|($=0|Qg(0|t,0|a,0|IA,0|$)),0|wB,0|BA,0|S),BA=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|($=0|HI(tB[i+120>>2]^S,tB[i+120+4>>2]^BA,32)),0|(IA=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(IA=0|HI($^(z=0|Qg(0|(BA=0|Qg(0|S,0|BA,0|a,0|(t=wB))),0|wB,0|Z,0|z)),IA^(Z=wB),16)),0|($=wB))),t^(H=wB),63),a=wB,IA=0|HI(($=0|HI(IA^(AA=0|Qg(0|(AA=0|Qg(0|v,0|K,0|m,0|AA)),0|wB,0|tB[j>>2],0|tB[j+4>>2])),$^(m=wB),32))^(E=0|Qg(0|(m=0|Qg(0|AA,0|m,0|(K=0|HI(v^(V=0|Qg(0|T,0|V,0|$,0|(IA=wB))),K^(T=wB),24)),0|(v=wB))),0|wB,0|x,0|E)),IA^(x=wB),16),$=wB,tB[i+120>>2]=IA,tB[i+120+4>>2]=$,$=0|Qg(0|V,0|T,0|IA,0|$),IA=wB,tB[i+80>>2]=$,tB[i+80+4>>2]=IA,v=0|HI(K^$,v^IA,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,q=0|Qg(0|(I=0|Qg(0|(I=0|Qg(0|_,0|G,0|q,0|I)),0|wB,0|tB[h>>2],0|tB[h+4>>2])),0|(q=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^I,d^q,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),I=0|tB[w>>2],T=0|tB[w+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(q=0|Qg(0|q,0|wB,0|I,0|T)),D^(V=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,P=0|Qg(0|t,0|a,0|W,0|P),W=0|tB[p>>2],m=0|tB[p+4>>2],AA=0|Qg(0|(P=0|Qg(0|P,0|wB,0|W,0|m)),0|(AA=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^P,l^AA,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),P=0|tB[O>>2],BA=0|tB[O+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(AA=0|Qg(0|AA,0|wB,0|P,0|BA)),e^(S=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,Z=0|Qg(0|(gA=0|tB[i+32>>2]),0|(k=0|tB[i+32+4>>2]),0|z,0|Z),z=0|tB[N>>2],M=0|tB[N+4>>2],D=0|HI((d=0|HI(D^(x=0|Qg(0|(x=0|Qg(0|E,0|x,0|(gA=0|HI((k=0|HI(gA^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^(Z=0|Qg(0|Z,0|wB,0|z,0|M)),y^(b=wB),32)),0|(r=wB))),k^(X=wB),24))^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(b=0|Qg(0|(b=0|Qg(0|Z,0|b,0|k,0|(gA=wB))),0|wB,0|tB[J>>2],0|tB[J+4>>2])),r^(Z=wB),16)),0|(y=wB))),gA^(Y=wB),63)),0|(k=wB))),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),d^(E=wB),32))^(T=0|Qg(0|(E=0|Qg(0|x,0|E,0|(k=0|HI(gA^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),k^(o=wB),24)),0|(gA=wB))),0|wB,0|I,0|T)),D^(I=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,gA=0|HI(k^o,gA^s,63),tB[i+32>>2]=gA,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(M=0|Qg(0|(V=0|Qg(0|v,0|K,0|q,0|V)),0|wB,0|z,0|M)),l^(z=wB),32))^(m=0|Qg(0|(z=0|Qg(0|M,0|z,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|W,0|m)),e^(W=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,P=0|Qg(0|(BA=0|Qg(0|(S=0|Qg(0|_,0|G,0|AA,0|S)),0|wB,0|P,0|BA)),0|(P=wB),0|(G=0|HI(_^(IA=0|Qg(0|$,0|IA,0|(y=0|HI(r^BA,y^P,32)),0|(r=wB))),G^($=wB),24)),0|(_=wB)),BA=0|tB[U>>2],S=0|tB[U+4>>2],r=0|HI(y^(P=0|Qg(0|P,0|wB,0|BA,0|S)),r^(AA=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^($=0|Qg(0|IA,0|$,0|r,0|y)),_^(IA=wB),63),G=wB,Z=0|Qg(0|(Z=0|Qg(0|t,0|a,0|b,0|Z)),0|wB,0|tB[j>>2],0|tB[j+4>>2]),b=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(z=0|HI(tB[i+120>>2]^Z,tB[i+120+4>>2]^b,32)),0|(M=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(M=0|HI(z^(b=0|Qg(0|(b=0|Qg(0|Z,0|b,0|a,0|(t=wB))),0|wB,0|tB[R>>2],0|tB[R+4>>2])),M^(Z=wB),16)),0|(z=wB))),t^(H=wB),63),a=wB,T=0|Qg(0|(I=0|Qg(0|(I=0|Qg(0|v,0|K,0|T,0|I)),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2])),0|(T=wB),0|(K=0|HI(v^(IA=0|Qg(0|$,0|IA,0|(z=0|HI(M^I,z^T,32)),0|(M=wB))),K^($=wB),24)),0|(v=wB)),I=0|tB[h>>2],V=0|tB[h+4>>2],M=0|HI(z^(T=0|Qg(0|T,0|wB,0|I,0|V)),M^(q=wB),16),z=wB,tB[i+120>>2]=M,tB[i+120+4>>2]=z,z=0|Qg(0|IA,0|$,0|M,0|z),M=wB,tB[i+80>>2]=z,tB[i+80+4>>2]=M,v=0|HI(K^z,v^M,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,m=0|Qg(0|(W=0|Qg(0|(W=0|Qg(0|_,0|G,0|m,0|W)),0|wB,0|tB[c>>2],0|tB[c+4>>2])),0|(m=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^W,d^m,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),W=0|tB[f>>2],$=0|tB[f+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(m=0|Qg(0|m,0|wB,0|W,0|$)),D^(IA=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,AA=0|Qg(0|t,0|a,0|P,0|AA),P=0|tB[J>>2],gA=0|tB[J+4>>2],t=0|HI((a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^(AA=0|Qg(0|AA,0|wB,0|P,0|gA)),l^(k=wB),32)),0|(e=wB))),a^(o=wB),24))^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(k=0|Qg(0|(k=0|Qg(0|AA,0|k,0|a,0|(t=wB))),0|wB,0|tB[B>>2],0|tB[B+4>>2])),e^(AA=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,b=0|Qg(0|(Z=0|Qg(0|(Z=0|Qg(0|(E=0|tB[i+32>>2]),0|(x=0|tB[i+32+4>>2]),0|b,0|Z)),0|wB,0|tB[g>>2],0|tB[g+4>>2])),0|(b=wB),0|(x=0|HI(E^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^Z,y^b,32)),0|(r=wB))),x^(X=wB),24)),0|(E=wB)),Z=0|tB[u>>2],L=0|tB[u+4>>2],D=0|HI((d=0|HI(D^(S=0|Qg(0|(q=0|Qg(0|T,0|q,0|(E=0|HI(x^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(b=0|Qg(0|b,0|wB,0|Z,0|L)),r^(n=wB),16)),0|(y=wB))),E^(Y=wB),63)),0|(x=wB))),0|wB,0|BA,0|S)),d^(BA=wB),32))^(L=0|Qg(0|(BA=0|Qg(0|S,0|BA,0|(x=0|HI(E^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),x^(o=wB),24)),0|(E=wB))),0|wB,0|Z,0|L)),D^(Z=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,E=0|HI(x^o,E^s,63),tB[i+32>>2]=E,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(V=0|Qg(0|(IA=0|Qg(0|v,0|K,0|m,0|IA)),0|wB,0|I,0|V)),l^(I=wB),32))^(I=0|Qg(0|(I=0|Qg(0|V,0|I,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|tB[O>>2],0|tB[O+4>>2])),e^(V=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(AA=0|Qg(0|(AA=0|Qg(0|_,0|G,0|k,0|AA)),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),y^(k=wB),32))^(k=0|Qg(0|(k=0|Qg(0|AA,0|k,0|(G=0|HI(_^(M=0|Qg(0|z,0|M,0|y,0|(r=wB))),G^(z=wB),24)),0|(_=wB))),0|wB,0|tB[N>>2],0|tB[N+4>>2])),r^(AA=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(z=0|Qg(0|M,0|z,0|r,0|y)),_^(M=wB),63),G=wB,$=0|Qg(0|(n=0|Qg(0|t,0|a,0|b,0|n)),0|wB,0|W,0|$),W=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(n=0|HI(tB[i+120>>2]^$,tB[i+120+4>>2]^W,32)),0|(b=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(b=0|HI(n^(gA=0|Qg(0|(W=0|Qg(0|$,0|W,0|a,0|(t=wB))),0|wB,0|P,0|gA)),b^(P=wB),16)),0|(n=wB))),t^(H=wB),63),a=wB,b=0|HI((n=0|HI(b^(Z=0|Qg(0|(Z=0|Qg(0|v,0|K,0|L,0|Z)),0|wB,0|tB[w>>2],0|tB[w+4>>2])),n^(L=wB),32))^(L=0|Qg(0|(L=0|Qg(0|Z,0|L,0|(K=0|HI(v^(M=0|Qg(0|z,0|M,0|n,0|(b=wB))),K^(z=wB),24)),0|(v=wB))),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2])),b^(Z=wB),16),n=wB,tB[i+120>>2]=b,tB[i+120+4>>2]=n,n=0|Qg(0|M,0|z,0|b,0|n),b=wB,tB[i+80>>2]=n,tB[i+80+4>>2]=b,v=0|HI(K^n,v^b,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,V=0|Qg(0|_,0|G,0|I,0|V),I=0|tB[p>>2],z=0|tB[p+4>>2],F=0|Qg(0|(H=0|Qg(0|F,0|H,0|(d=0|HI(D^(V=0|Qg(0|V,0|wB,0|I,0|z)),d^(M=wB),32)),0|(D=wB))),0|(F=wB),0|(D=0|HI(d^(M=0|Qg(0|(M=0|Qg(0|V,0|M,0|(G=0|HI(_^H,G^F,24)),0|(_=wB))),0|wB,0|tB[j>>2],0|tB[j+4>>2])),D^(V=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,AA=0|Qg(0|t,0|a,0|k,0|AA),k=0|tB[g>>2],W=0|tB[g+4>>2],$=0|Qg(0|(AA=0|Qg(0|AA,0|wB,0|k,0|W)),0|($=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^AA,l^$,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),AA=0|tB[c>>2],IA=0|tB[c+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^($=0|Qg(0|$,0|wB,0|AA,0|IA)),e^(m=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,P=0|Qg(0|(E=0|tB[i+32>>2]),0|(x=0|tB[i+32+4>>2]),0|gA,0|P),gA=0|tB[B>>2],BA=0|tB[B+4>>2],D=0|HI((d=0|HI(D^(IA=0|Qg(0|(Z=0|Qg(0|L,0|Z,0|(E=0|HI((x=0|HI(E^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^(P=0|Qg(0|P,0|wB,0|gA,0|BA)),y^(S=wB),32)),0|(r=wB))),x^(X=wB),24))^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(S=0|Qg(0|(S=0|Qg(0|P,0|S,0|x,0|(E=wB))),0|wB,0|tB[R>>2],0|tB[R+4>>2])),r^(P=wB),16)),0|(y=wB))),E^(Y=wB),63)),0|(x=wB))),0|wB,0|AA,0|IA)),d^(AA=wB),32))^(z=0|Qg(0|(AA=0|Qg(0|IA,0|AA,0|(x=0|HI(E^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),x^(o=wB),24)),0|(E=wB))),0|wB,0|I,0|z)),D^(I=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,E=0|HI(x^o,E^s,63),tB[i+32>>2]=E,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(V=0|Qg(0|(V=0|Qg(0|v,0|K,0|M,0|V)),0|wB,0|tB[O>>2],0|tB[O+4>>2])),l^(M=wB),32))^(M=0|Qg(0|(M=0|Qg(0|V,0|M,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|tB[J>>2],0|tB[J+4>>2])),e^(V=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(m=0|Qg(0|(m=0|Qg(0|_,0|G,0|$,0|m)),0|wB,0|tB[u>>2],0|tB[u+4>>2])),y^($=wB),32))^($=0|Qg(0|($=0|Qg(0|m,0|$,0|(G=0|HI(_^(b=0|Qg(0|n,0|b,0|y,0|(r=wB))),G^(n=wB),24)),0|(_=wB))),0|wB,0|tB[f>>2],0|tB[f+4>>2])),r^(m=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(n=0|Qg(0|b,0|n,0|r,0|y)),_^(b=wB),63),G=wB,P=0|Qg(0|(P=0|Qg(0|t,0|a,0|S,0|P)),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2]),S=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(E=0|HI(tB[i+120>>2]^P,tB[i+120+4>>2]^S,32)),0|(x=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(x=0|HI(E^(W=0|Qg(0|(S=0|Qg(0|P,0|S,0|a,0|(t=wB))),0|wB,0|k,0|W)),x^(k=wB),16)),0|(E=wB))),t^(H=wB),63),a=wB,x=0|HI((E=0|HI(x^(I=0|Qg(0|(I=0|Qg(0|v,0|K,0|z,0|I)),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),E^(z=wB),32))^(BA=0|Qg(0|(z=0|Qg(0|I,0|z,0|(K=0|HI(v^(b=0|Qg(0|n,0|b,0|E,0|(x=wB))),K^(n=wB),24)),0|(v=wB))),0|wB,0|gA,0|BA)),x^(gA=wB),16),E=wB,tB[i+120>>2]=x,tB[i+120+4>>2]=E,E=0|Qg(0|b,0|n,0|x,0|E),x=wB,tB[i+80>>2]=E,tB[i+80+4>>2]=x,v=0|HI(K^E,v^x,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,M=0|Qg(0|(V=0|Qg(0|(V=0|Qg(0|_,0|G,0|M,0|V)),0|wB,0|tB[U>>2],0|tB[U+4>>2])),0|(M=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^V,d^M,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB)),V=0|tB[h>>2],n=0|tB[h+4>>2],F=0|Qg(0|H,0|F,0|(D=0|HI(d^(M=0|Qg(0|M,0|wB,0|V,0|n)),D^(b=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,m=0|Qg(0|t,0|a,0|$,0|m),$=0|tB[N>>2],z=0|tB[N+4>>2],I=0|Qg(0|(m=0|Qg(0|m,0|wB,0|$,0|z)),0|(I=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^m,l^I,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),m=0|tB[j>>2],S=0|tB[j+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(I=0|Qg(0|I,0|wB,0|m,0|S)),e^(P=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,k=0|Qg(0|(AA=0|tB[i+32>>2]),0|(IA=0|tB[i+32+4>>2]),0|W,0|k),W=0|tB[R>>2],Z=0|tB[R+4>>2],L=0|Qg(0|(k=0|Qg(0|k,0|wB,0|W,0|Z)),0|(L=wB),0|(IA=0|HI(AA^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^k,y^L,32)),0|(r=wB))),IA^(X=wB),24)),0|(AA=wB)),k=0|tB[w>>2],q=0|tB[w+4>>2],D=0|HI((d=0|HI(D^(Z=0|Qg(0|(gA=0|Qg(0|BA,0|gA,0|(AA=0|HI(IA^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(L=0|Qg(0|L,0|wB,0|k,0|q)),r^(T=wB),16)),0|(y=wB))),AA^(Y=wB),63)),0|(IA=wB))),0|wB,0|W,0|Z)),d^(W=wB),32))^(W=0|Qg(0|(W=0|Qg(0|Z,0|W,0|(IA=0|HI(AA^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),IA^(o=wB),24)),0|(AA=wB))),0|wB,0|tB[B>>2],0|tB[B+4>>2])),D^(Z=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,AA=0|HI(IA^o,AA^s,63),tB[i+32>>2]=AA,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(b=0|Qg(0|(b=0|Qg(0|v,0|K,0|M,0|b)),0|wB,0|tB[g>>2],0|tB[g+4>>2])),l^(M=wB),32))^(S=0|Qg(0|(M=0|Qg(0|b,0|M,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|m,0|S)),e^(m=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(n=0|Qg(0|(P=0|Qg(0|_,0|G,0|I,0|P)),0|wB,0|V,0|n)),y^(V=wB),32))^(V=0|Qg(0|(V=0|Qg(0|n,0|V,0|(G=0|HI(_^(x=0|Qg(0|E,0|x,0|y,0|(r=wB))),G^(E=wB),24)),0|(_=wB))),0|wB,0|tB[c>>2],0|tB[c+4>>2])),r^(n=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(E=0|Qg(0|x,0|E,0|r,0|y)),_^(x=wB),63),G=wB,z=0|Qg(0|(T=0|Qg(0|t,0|a,0|L,0|T)),0|wB,0|$,0|z),$=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(T=0|HI(tB[i+120>>2]^z,tB[i+120+4>>2]^$,32)),0|(L=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(L=0|HI(T^(q=0|Qg(0|($=0|Qg(0|z,0|$,0|a,0|(t=wB))),0|wB,0|k,0|q)),L^(k=wB),16)),0|(T=wB))),t^(H=wB),63),a=wB,L=0|HI((T=0|HI(L^(Z=0|Qg(0|(Z=0|Qg(0|v,0|K,0|W,0|Z)),0|wB,0|tB[p>>2],0|tB[p+4>>2])),T^(W=wB),32))^(W=0|Qg(0|(W=0|Qg(0|Z,0|W,0|(K=0|HI(v^(x=0|Qg(0|E,0|x,0|T,0|(L=wB))),K^(E=wB),24)),0|(v=wB))),0|wB,0|tB[u>>2],0|tB[u+4>>2])),L^(Z=wB),16),T=wB,tB[i+120>>2]=L,tB[i+120+4>>2]=T,T=0|Qg(0|x,0|E,0|L,0|T),L=wB,tB[i+80>>2]=T,tB[i+80+4>>2]=L,v=0|HI(K^T,v^L,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,F=0|Qg(0|(H=0|Qg(0|F,0|H,0|(d=0|HI(D^(m=0|Qg(0|(m=0|Qg(0|_,0|G,0|S,0|m)),0|wB,0|tB[J>>2],0|tB[J+4>>2])),d^(S=wB),32)),0|(D=wB))),0|(F=wB),0|(D=0|HI(d^(S=0|Qg(0|(S=0|Qg(0|m,0|S,0|(G=0|HI(_^H,G^F,24)),0|(_=wB))),0|wB,0|tB[O>>2],0|tB[O+4>>2])),D^(m=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,n=0|Qg(0|t,0|a,0|V,0|n),V=0|tB[f>>2],E=0|tB[f+4>>2],t=0|HI((a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^(n=0|Qg(0|n,0|wB,0|V,0|E)),l^(x=wB),32)),0|(e=wB))),a^(o=wB),24))^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(x=0|Qg(0|(x=0|Qg(0|n,0|x,0|a,0|(t=wB))),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),e^(n=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,q=0|Qg(0|(k=0|Qg(0|(k=0|Qg(0|($=0|tB[i+32>>2]),0|(z=0|tB[i+32+4>>2]),0|q,0|k)),0|wB,0|tB[U>>2],0|tB[U+4>>2])),0|(q=wB),0|(z=0|HI($^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^k,y^q,32)),0|(r=wB))),z^(X=wB),24)),0|($=wB)),k=0|tB[i+128>>2],P=0|tB[i+128+4>>2],D=0|HI((d=0|HI(D^(P=0|Qg(0|(Z=0|Qg(0|W,0|Z,0|($=0|HI(z^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(q=0|Qg(0|q,0|wB,0|k,0|P)),r^(I=wB),16)),0|(y=wB))),$^(Y=wB),63)),0|(z=wB))),0|wB,0|k,0|P)),d^(k=wB),32))^(k=0|Qg(0|(k=0|Qg(0|P,0|k,0|(z=0|HI($^(s=0|Qg(0|o,0|s,0|d,0|(D=wB))),z^(o=wB),24)),0|($=wB))),0|wB,0|tB[N>>2],0|tB[N+4>>2])),D^(P=wB),16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,o=0|Qg(0|s,0|o,0|D,0|d),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,$=0|HI(z^o,$^s,63),tB[i+32>>2]=$,tB[i+32+4>>2]=wB,e=0|HI((l=0|HI(e^(m=0|Qg(0|(m=0|Qg(0|v,0|K,0|S,0|m)),0|wB,0|tB[B>>2],0|tB[B+4>>2])),l^(S=wB),32))^(E=0|Qg(0|(S=0|Qg(0|m,0|S,0|(K=0|HI(v^(Y=0|Qg(0|X,0|Y,0|l,0|(e=wB))),K^(X=wB),24)),0|(v=wB))),0|wB,0|V,0|E)),e^(V=wB),16),l=wB,tB[i+104>>2]=e,tB[i+104+4>>2]=l,X=0|Qg(0|Y,0|X,0|e,0|l),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,v=0|HI(K^X,v^Y,63),K=wB,r=0|HI((y=0|HI(r^(n=0|Qg(0|(n=0|Qg(0|_,0|G,0|x,0|n)),0|wB,0|tB[j>>2],0|tB[j+4>>2])),y^(x=wB),32))^(x=0|Qg(0|(x=0|Qg(0|n,0|x,0|(G=0|HI(_^(L=0|Qg(0|T,0|L,0|y,0|(r=wB))),G^(T=wB),24)),0|(_=wB))),0|wB,0|tB[w>>2],0|tB[w+4>>2])),r^(n=wB),16),y=wB,tB[i+112>>2]=r,tB[i+112+4>>2]=y,_=0|HI(G^(T=0|Qg(0|L,0|T,0|r,0|y)),_^(L=wB),63),G=wB,I=0|Qg(0|(I=0|Qg(0|t,0|a,0|q,0|I)),0|wB,0|tB[c>>2],0|tB[c+4>>2]),q=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(S=0|HI(tB[i+120>>2]^I,tB[i+120+4>>2]^q,32)),0|(m=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(m=0|HI(S^(q=0|Qg(0|(q=0|Qg(0|I,0|q,0|a,0|(t=wB))),0|wB,0|tB[h>>2],0|tB[h+4>>2])),m^(I=wB),16)),0|(S=wB))),t^(H=wB),63),a=wB,P=0|Qg(0|v,0|K,0|k,0|P),k=0|tB[g>>2],g=0|tB[g+4>>2],$=0|Qg(0|(P=0|Qg(0|P,0|wB,0|k,0|g)),0|($=wB),0|(K=0|HI(v^(L=0|Qg(0|T,0|L,0|(S=0|HI(m^P,S^$,32)),0|(m=wB))),K^(T=wB),24)),0|(v=wB)),P=0|tB[J>>2],J=0|tB[J+4>>2],m=0|HI(S^($=0|Qg(0|$,0|wB,0|P,0|J)),m^(z=wB),16),S=wB,tB[i+120>>2]=m,tB[i+120+4>>2]=S,S=0|Qg(0|L,0|T,0|m,0|S),m=wB,tB[i+80>>2]=S,tB[i+80+4>>2]=m,v=0|HI(K^S,v^m,63),K=wB,tB[i+40>>2]=v,tB[i+40+4>>2]=K,V=0|Qg(0|_,0|G,0|E,0|V),E=0|tB[R>>2],R=0|tB[R+4>>2],F=0|Qg(0|(H=0|Qg(0|F,0|H,0|(d=0|HI(D^(V=0|Qg(0|V,0|wB,0|E,0|R)),d^(T=wB),32)),0|(D=wB))),0|(F=wB),0|(D=0|HI(d^(T=0|Qg(0|(T=0|Qg(0|V,0|T,0|(G=0|HI(_^H,G^F,24)),0|(_=wB))),0|wB,0|tB[u>>2],0|tB[u+4>>2])),D^(V=wB),16)),0|(d=wB)),H=wB,tB[i+88>>2]=F,tB[i+88+4>>2]=H,_=0|HI(G^F,_^H,63),G=wB,tB[i+48>>2]=_,tB[i+48+4>>2]=G,x=0|Qg(0|(n=0|Qg(0|(n=0|Qg(0|t,0|a,0|x,0|n)),0|wB,0|tB[Q>>2],0|tB[Q+4>>2])),0|(x=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^n,l^x,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB)),n=0|tB[U>>2],U=0|tB[U+4>>2],t=0|HI(a^(o=0|Qg(0|s,0|o,0|(e=0|HI(l^(x=0|Qg(0|x,0|wB,0|n,0|U)),e^(L=wB),16)),0|(l=wB))),t^(s=wB),63),a=wB,tB[i+56>>2]=t,tB[i+56+4>>2]=a,I=0|Qg(0|(Z=0|tB[i+32>>2]),0|(W=0|tB[i+32+4>>2]),0|q,0|I),q=0|tB[O>>2],O=0|tB[O+4>>2],M=0|Qg(0|(I=0|Qg(0|I,0|wB,0|q,0|O)),0|(M=wB),0|(W=0|HI(Z^(Y=0|Qg(0|X,0|Y,0|(y=0|HI(r^I,y^M,32)),0|(r=wB))),W^(X=wB),24)),0|(Z=wB)),I=0|tB[p>>2],p=0|tB[p+4>>2],o=0|Qg(0|(s=0|Qg(0|o,0|s,0|(d=0|HI(D^(O=0|Qg(0|(z=0|Qg(0|$,0|z,0|(Z=0|HI(W^(X=0|Qg(0|Y,0|X,0|(r=0|HI(y^(M=0|Qg(0|M,0|wB,0|I,0|p)),r^(b=wB),16)),0|(y=wB))),Z^(Y=wB),63)),0|(W=wB))),0|wB,0|q,0|O)),d^(q=wB),32)),0|(D=wB))),0|(o=wB),0|(D=0|HI(d^(R=0|Qg(0|(q=0|Qg(0|O,0|q,0|(W=0|HI(Z^s,W^o,24)),0|(Z=wB))),0|wB,0|E,0|R)),D^(E=wB),16)),0|(d=wB)),s=wB,tB[i+64>>2]=o,tB[i+64+4>>2]=s,Z=0|HI(W^o,Z^s,63),tB[i+32>>2]=Z,tB[i+32+4>>2]=wB,X=0|Qg(0|(Y=0|Qg(0|X,0|Y,0|(l=0|HI(e^(j=0|Qg(0|(V=0|Qg(0|v,0|K,0|T,0|V)),0|wB,0|tB[j>>2],0|tB[j+4>>2])),l^(V=wB),32)),0|(e=wB))),0|(X=wB),0|(e=0|HI(l^(g=0|Qg(0|(V=0|Qg(0|j,0|V,0|(K=0|HI(v^Y,K^X,24)),0|(v=wB))),0|wB,0|k,0|g)),e^(k=wB),16)),0|(l=wB)),Y=wB,tB[i+72>>2]=X,tB[i+72+4>>2]=Y,Y=0|HI(K^X,v^Y,63),v=wB,_=0|HI((G=0|HI(_^(m=0|Qg(0|S,0|m,0|(y=0|HI(r^(J=0|Qg(0|(L=0|Qg(0|_,0|G,0|x,0|L)),0|wB,0|P,0|J)),y^(P=wB),32)),0|(r=wB))),G^(S=wB),24))^(S=0|Qg(0|m,0|S,0|(r=0|HI(y^(p=0|Qg(0|(P=0|Qg(0|J,0|P,0|G,0|(_=wB))),0|wB,0|I,0|p)),r^(I=wB),16)),0|(y=wB))),_^(m=wB),63),G=wB,U=0|Qg(0|(b=0|Qg(0|t,0|a,0|M,0|b)),0|wB,0|n,0|U),n=wB,t=0|HI((a=0|HI(t^(H=0|Qg(0|F,0|H,0|(b=0|HI(tB[i+120>>2]^U,tB[i+120+4>>2]^n,32)),0|(M=wB))),a^(F=wB),24))^(F=0|Qg(0|H,0|F,0|(M=0|HI(b^(c=0|Qg(0|(n=0|Qg(0|U,0|n,0|a,0|(t=wB))),0|wB,0|tB[c>>2],0|tB[c+4>>2])),M^(n=wB),16)),0|(b=wB))),t^(H=wB),63),a=wB,Q=0|Qg(0|(E=0|Qg(0|(N=0|Qg(0|(E=0|Qg(0|Y,0|v,0|R,0|E)),0|wB,0|tB[N>>2],0|tB[N+4>>2])),0|(E=wB),0|(v=0|HI(Y^(m=0|Qg(0|S,0|m,0|(b=0|HI(M^N,b^E,32)),0|(M=wB))),v^(S=wB),24)),0|(Y=wB))),0|wB,0|tB[Q>>2],0|tB[Q+4>>2]),E=wB,tB[i>>2]=Q,tB[i+4>>2]=E,M=0|HI(b^Q,M^E,16),b=wB,tB[i+120>>2]=M,tB[i+120+4>>2]=b,b=0|Qg(0|m,0|S,0|M,0|b),M=wB,tB[i+80>>2]=b,tB[i+80+4>>2]=M,M=0|HI(v^b,Y^M,63),tB[i+40>>2]=M,tB[i+40+4>>2]=wB,B=0|Qg(0|(g=0|Qg(0|(k=0|Qg(0|(k=0|Qg(0|_,0|G,0|g,0|k)),0|wB,0|tB[i+128>>2],0|tB[i+128+4>>2])),0|(g=wB),0|(G=0|HI(_^(H=0|Qg(0|F,0|H,0|(d=0|HI(D^k,d^g,32)),0|(D=wB))),G^(F=wB),24)),0|(_=wB))),0|wB,0|tB[B>>2],0|tB[B+4>>2]),g=wB,tB[i+8>>2]=B,tB[i+8+4>>2]=g,D=0|HI(d^B,D^g,16),d=wB,tB[i+96>>2]=D,tB[i+96+4>>2]=d,d=0|Qg(0|H,0|F,0|D,0|d),D=wB,tB[i+88>>2]=d,tB[i+88+4>>2]=D,D=0|HI(G^d,_^D,63),tB[i+48>>2]=D,tB[i+48+4>>2]=wB,h=0|Qg(0|(I=0|Qg(0|(u=0|Qg(0|(I=0|Qg(0|t,0|a,0|p,0|I)),0|wB,0|tB[u>>2],0|tB[u+4>>2])),0|(I=wB),0|(a=0|HI(t^(s=0|Qg(0|o,0|s,0|(l=0|HI(e^u,l^I,32)),0|(e=wB))),a^(o=wB),24)),0|(t=wB))),0|wB,0|tB[h>>2],0|tB[h+4>>2]),I=wB,tB[i+16>>2]=h,tB[i+16+4>>2]=I,I=0|HI(l^h,e^I,16),e=wB,tB[i+104>>2]=I,tB[i+104+4>>2]=e,e=0|Qg(0|s,0|o,0|I,0|e),I=wB,tB[i+64>>2]=e,tB[i+64+4>>2]=I,t=0|HI(a^e,t^I,63),tB[i+56>>2]=t,tB[i+56+4>>2]=wB,y=0|HI(r^(w=0|Qg(0|(n=0|Qg(0|(t=0|tB[i+32>>2]),0|(a=0|tB[i+32+4>>2]),0|c,0|n)),0|wB,0|tB[w>>2],0|tB[w+4>>2])),y^(n=wB),32),r=wB,f=0|Qg(0|(n=0|Qg(0|w,0|n,0|(a=0|HI(t^(c=0|Qg(0|tB[i+72>>2],0|tB[i+72+4>>2],0|y,0|r)),a^(o=wB),24)),0|(t=wB))),0|wB,0|tB[f>>2],0|tB[f+4>>2]),n=wB,tB[i+24>>2]=f,tB[i+24+4>>2]=n,n=0|HI(y^f,r^n,16),r=wB,tB[i+112>>2]=n,tB[i+112+4>>2]=r,r=0|Qg(0|c,0|o,0|n,0|r),n=wB,tB[i+72>>2]=r,tB[i+72+4>>2]=n,n=0|HI(a^r,t^n,63),tB[i+32>>2]=n,tB[i+32+4>>2]=wB,I=E^tB[A+4>>2]^I,tB[A>>2]=Q^tB[A>>2]^e,tB[A+4>>2]=I,I=1;;){if(iA=A+(I<<3)|0,CA=i+(I+8<<3)|0,g=g^tB[iA+4>>2]^tB[CA+4>>2],tB[iA>>2]=B^tB[iA>>2]^tB[CA>>2],tB[iA+4>>2]=g,8==(0|(g=I+1|0)))break;I=g,B=0|tB[i+(g<<3)>>2],g=0|tB[i+(g<<3)+4>>2]}oB=C}function C(A,I,g,B){A|=0,g|=0,B|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0,tA=0,rA=0,aA=0,oA=0,cA=0,fA=0,yA=0,wA=0,sA=0,hA=0,lA=0,uA=0,pA=0,DA=0,_A=0,dA=0,GA=0,FA=0,HA=0,kA=0,MA=0,YA=0,bA=0,vA=0,SA=0,mA=0,NA=0,RA=0,UA=0,PA=0,JA=0,LA=0,xA=0,XA=0,KA=0,VA=0,jA=0,TA=0,ZA=0,WA=0,qA=0,OA=0,$A=0,AI=0,II=0,gI=0,BI=0,CI=0,iI=0,eI=0,QI=0,EI=0,nI=0,tI=0,rI=0,aI=0,oI=0,cI=0,fI=0,yI=0,wI=0,sI=0,hI=0,lI=0,uI=0,pI=0,DI=0,_I=0,dI=0,FI=0,HI=0,kI=0,YI=0,bI=0,SI=0,mI=0,NI=0,RI=0,UI=0,PI=0,JI=0,LI=0,xI=0,XI=0,KI=0,VI=0,jI=0,TI=0,qI=0,OI=0,zI=0,$I=0,Ag=0,Ig=0,gg=0,Bg=0,Cg=0,eg=0,Eg=0,ng=0,tg=0,rg=0,ag=0,og=0,cg=0,fg=0,yg=0,wg=0,sg=0,hg=0,lg=0,ug=0,pg=0;WA=0|vI(0|nB[(I|=0)>>0],0|nB[I+1>>0],0|nB[I+2>>0]),aI=0|WI(0|(aI=0|zA(I+2|0)),0|wB,5),_=0|WI(0|(_=0|vI(0|nB[I+5>>0],0|nB[I+6>>0],0|nB[I+7>>0])),0|wB,2),nI=0|WI(0|(nI=0|zA(I+7|0)),0|wB,7),t=0|WI(0|(t=0|zA(I+10|0)),0|wB,4),v=0|WI(0|(v=0|vI(0|nB[I+13>>0],0|nB[I+14>>0],0|nB[I+15>>0])),0|wB,1),k=0|WI(0|(k=0|zA(I+15|0)),0|wB,6),gA=0|WI(0|(gA=0|vI(0|nB[I+18>>0],0|nB[I+19>>0],0|nB[I+20>>0])),0|wB,3),QI=0|vI(0|nB[I+21>>0],0|nB[I+22>>0],0|nB[I+23>>0]),b=0|WI(0|(b=0|zA(I+23|0)),0|wB,5),pg=0|WI(0|(pg=0|vI(0|nB[I+26>>0],0|nB[I+27>>0],0|nB[I+28>>0])),0|wB,2),a=0|WI(0|(a=0|zA(I+28|0)),0|wB,7),sA=wB,hI=0|vI(0|nB[g>>0],0|nB[g+1>>0],0|nB[g+2>>0]),bA=0|WI(0|(bA=0|zA(g+2|0)),0|wB,5),jA=0|WI(0|(jA=0|vI(0|nB[g+5>>0],0|nB[g+6>>0],0|nB[g+7>>0])),0|wB,2),AA=0|WI(0|(AA=0|zA(g+7|0)),0|wB,7),P=0|WI(0|(P=0|zA(g+10|0)),0|wB,4),wA=0|WI(0|(wA=0|vI(0|nB[g+13>>0],0|nB[g+14>>0],0|nB[g+15>>0])),0|wB,1),uA=0|WI(0|(uA=0|zA(g+15|0)),0|wB,6),yI=0|WI(0|(yI=0|vI(0|nB[g+18>>0],0|nB[g+19>>0],0|nB[g+20>>0])),0|wB,3),rA=0|vI(0|nB[g+21>>0],0|nB[g+22>>0],0|nB[g+23>>0]),U=0|WI(0|(U=0|zA(g+23|0)),0|wB,5),vA=0|WI(0|(vA=0|vI(0|nB[g+26>>0],0|nB[g+27>>0],0|nB[g+28>>0])),0|wB,2),u=0|WI(0|(u=0|zA(g+28|0)),0|wB,7),cA=wB,V=0|vI(0|nB[B>>0],0|nB[B+1>>0],0|nB[B+2>>0]),aA=0|WI(0|(aA=0|zA(B+2|0)),0|wB,5),yA=0|WI(0|(yA=0|vI(0|nB[B+5>>0],0|nB[B+6>>0],0|nB[B+7>>0])),0|wB,2),RA=0|WI(0|(RA=0|zA(B+7|0)),0|wB,7),tA=0|WI(0|(tA=0|zA(B+10|0)),0|wB,4),FA=0|WI(0|(FA=0|vI(0|nB[B+13>>0],0|nB[B+14>>0],0|nB[B+15>>0])),0|wB,1),CI=0|WI(0|(CI=0|zA(B+15|0)),0|wB,6),i=0|WI(0|(i=0|vI(0|nB[B+18>>0],0|nB[B+19>>0],0|nB[B+20>>0])),0|wB,3),LA=0|vI(0|nB[B+21>>0],0|nB[B+22>>0],0|nB[B+23>>0]),H=0|WI(0|(H=0|zA(B+23|0)),0|wB,5),JA=0|WI(0|(JA=0|vI(0|nB[B+26>>0],0|nB[B+27>>0],0|nB[B+28>>0])),0|wB,2),I=0|WI(0|(I=0|zA(B+28|0)),0|wB,7),e=wB,oA=0|Qg(2097151&V|0,0,0|(oA=0|MI(2097151&hI|0,0,2097151&WA|0,0)),0|wB),V=wB,ug=0|MI(2097151&bA|0,0,2097151&WA|0,0),lg=wB,hg=0|MI(2097151&hI|0,0,2097151&aI|0,0),s=wB,QA=0|MI(2097151&jA|0,0,2097151&WA|0,0),fA=wB,yA=0|Qg(0|(fA=0|Qg(0|(x=0|Qg(0|(EA=0|MI(2097151&bA|0,0,2097151&aI|0,0)),0|(cg=wB),0|(x=0|MI(2097151&hI|0,0,2097151&_|0,0)),0|wB)),0|wB,0|QA,0|fA)),0|wB,2097151&yA|0,0),fA=wB,QA=0|MI(2097151&AA|0,0,2097151&WA|0,0),x=wB,cg=0|MI(2097151&jA|0,0,2097151&aI|0,0),EA=wB,sg=0|MI(2097151&bA|0,0,2097151&_|0,0),wg=wB,yg=0|MI(2097151&hI|0,0,2097151&nI|0,0),fg=wB,GA=0|MI(2097151&P|0,0,2097151&WA|0,0),nA=wB,Bg=0|MI(2097151&AA|0,0,2097151&aI|0,0),q=wB,eg=0|MI(2097151&jA|0,0,2097151&_|0,0),dA=wB,tA=0|Qg(0|(nA=0|Qg(0|(q=0|Qg(0|(dA=0|Qg(0|(Cg=0|Qg(0|(Eg=0|MI(2097151&bA|0,0,2097151&nI|0,0)),0|(ng=wB),0|(Cg=0|MI(2097151&hI|0,0,2097151&t|0,0)),0|wB)),0|wB,0|eg,0|dA)),0|wB,0|Bg,0|q)),0|wB,0|GA,0|nA)),0|wB,2097151&tA|0,0),nA=wB,GA=0|MI(2097151&wA|0,0,2097151&WA|0,0),q=wB,Bg=0|MI(2097151&P|0,0,2097151&aI|0,0),dA=wB,eg=0|MI(2097151&AA|0,0,2097151&_|0,0),Cg=wB,ng=0|MI(2097151&jA|0,0,2097151&nI|0,0),Eg=wB,og=0|MI(2097151&bA|0,0,2097151&t|0,0),ag=wB,rg=0|MI(2097151&hI|0,0,2097151&v|0,0),tg=wB,Z=0|MI(2097151&uA|0,0,2097151&WA|0,0),OA=wB,xI=0|MI(2097151&wA|0,0,2097151&aI|0,0),d=wB,KI=0|MI(2097151&P|0,0,2097151&_|0,0),T=wB,jI=0|MI(2097151&AA|0,0,2097151&nI|0,0),XI=wB,qI=0|MI(2097151&jA|0,0,2097151&t|0,0),VI=wB,CI=0|Qg(0|(OA=0|Qg(0|(d=0|Qg(0|(T=0|Qg(0|(XI=0|Qg(0|(VI=0|Qg(0|(TI=0|Qg(0|(OI=0|MI(2097151&bA|0,0,2097151&v|0,0)),0|(zI=wB),0|(TI=0|MI(2097151&hI|0,0,2097151&k|0,0)),0|wB)),0|wB,0|qI,0|VI)),0|wB,0|jI,0|XI)),0|wB,0|KI,0|T)),0|wB,0|xI,0|d)),0|wB,0|Z,0|OA)),0|wB,2097151&CI|0,0),OA=wB,Z=0|MI(2097151&yI|0,0,2097151&WA|0,0),d=wB,xI=0|MI(2097151&uA|0,0,2097151&aI|0,0),T=wB,KI=0|MI(2097151&wA|0,0,2097151&_|0,0),XI=wB,jI=0|MI(2097151&P|0,0,2097151&nI|0,0),VI=wB,qI=0|MI(2097151&AA|0,0,2097151&t|0,0),TI=wB,zI=0|MI(2097151&jA|0,0,2097151&v|0,0),OI=wB,gg=0|MI(2097151&bA|0,0,2097151&k|0,0),Ig=wB,Ag=0|MI(2097151&hI|0,0,2097151&gA|0,0),$I=wB,_I=0|MI(2097151&rA|0,0,2097151&WA|0,0),B=wB,Q=0|MI(2097151&yI|0,0,2097151&aI|0,0),xA=wB,pI=0|MI(2097151&uA|0,0,2097151&_|0,0),DI=wB,FI=0|MI(2097151&wA|0,0,2097151&nI|0,0),hA=wB,kI=0|MI(2097151&P|0,0,2097151&t|0,0),dI=wB,bI=0|MI(2097151&AA|0,0,2097151&v|0,0),HI=wB,mI=0|MI(2097151&jA|0,0,2097151&k|0,0),YI=wB,LA=0|Qg(0|(xA=0|Qg(0|(B=0|Qg(0|(DI=0|Qg(0|(hA=0|Qg(0|(dI=0|Qg(0|(HI=0|Qg(0|(YI=0|Qg(0|(SI=0|Qg(0|(NI=0|MI(2097151&bA|0,0,2097151&gA|0,0)),0|(RI=wB),0|(SI=0|MI(2097151&hI|0,0,2097151&QI|0,0)),0|wB)),0|wB,0|mI,0|YI)),0|wB,0|bI,0|HI)),0|wB,0|kI,0|dI)),0|wB,0|FI,0|hA)),0|wB,0|pI,0|DI)),0|wB,0|_I,0|B)),0|wB,0|Q,0|xA)),0|wB,2097151&LA|0,0),xA=wB,Q=0|MI(2097151&U|0,0,2097151&WA|0,0),B=wB,_I=0|MI(2097151&rA|0,0,2097151&aI|0,0),DI=wB,pI=0|MI(2097151&yI|0,0,2097151&_|0,0),hA=wB,FI=0|MI(2097151&uA|0,0,2097151&nI|0,0),dI=wB,kI=0|MI(2097151&wA|0,0,2097151&t|0,0),HI=wB,bI=0|MI(2097151&P|0,0,2097151&v|0,0),YI=wB,mI=0|MI(2097151&AA|0,0,2097151&k|0,0),SI=wB,RI=0|MI(2097151&jA|0,0,2097151&gA|0,0),NI=wB,LI=0|MI(2097151&bA|0,0,2097151&QI|0,0),JI=wB,PI=0|MI(2097151&hI|0,0,2097151&b|0,0),UI=wB,qA=0|MI(2097151&vA|0,0,2097151&WA|0,0),PA=wB,$A=0|MI(2097151&U|0,0,2097151&aI|0,0),iI=wB,O=0|MI(2097151&rA|0,0,2097151&_|0,0),z=wB,K=0|MI(2097151&yI|0,0,2097151&nI|0,0),X=wB,rI=0|MI(2097151&uA|0,0,2097151&t|0,0),tI=wB,NA=0|MI(2097151&wA|0,0,2097151&v|0,0),mA=wB,BI=0|MI(2097151&P|0,0,2097151&k|0,0),gI=wB,MA=0|MI(2097151&AA|0,0,2097151&gA|0,0),kA=wB,KA=0|MI(2097151&jA|0,0,2097151&QI|0,0),XA=wB,JA=0|Qg(0|(PA=0|Qg(0|(iI=0|Qg(0|(X=0|Qg(0|(z=0|Qg(0|(tI=0|Qg(0|(mA=0|Qg(0|(gI=0|Qg(0|(kA=0|Qg(0|(XA=0|Qg(0|(J=0|Qg(0|(uI=0|MI(2097151&bA|0,0,2097151&b|0,0)),0|(m=wB),0|(J=0|MI(2097151&hI|0,0,2097151&pg|0,0)),0|wB)),0|wB,0|KA,0|XA)),0|wB,0|MA,0|kA)),0|wB,0|BI,0|gI)),0|wB,0|NA,0|mA)),0|wB,0|rI,0|tI)),0|wB,0|O,0|z)),0|wB,0|K,0|X)),0|wB,0|$A,0|iI)),0|wB,0|qA,0|PA)),0|wB,2097151&JA|0,0),PA=wB,WA=0|MI(0|u,0|cA,2097151&WA|0,0),qA=wB,iI=0|MI(2097151&vA|0,0,2097151&aI|0,0),$A=wB,X=0|MI(2097151&U|0,0,2097151&_|0,0),K=wB,z=0|MI(2097151&rA|0,0,2097151&nI|0,0),O=wB,tI=0|MI(2097151&yI|0,0,2097151&t|0,0),rI=wB,mA=0|MI(2097151&uA|0,0,2097151&v|0,0),NA=wB,gI=0|MI(2097151&wA|0,0,2097151&k|0,0),BI=wB,kA=0|MI(2097151&P|0,0,2097151&gA|0,0),MA=wB,XA=0|MI(2097151&AA|0,0,2097151&QI|0,0),KA=wB,J=0|MI(2097151&jA|0,0,2097151&b|0,0),m=wB,uI=0|MI(2097151&bA|0,0,2097151&pg|0,0),lI=wB,hI=0|MI(2097151&hI|0,0,0|a,0|sA),sI=wB,aI=0|MI(0|u,0|cA,2097151&aI|0,0),oI=wB,AI=0|MI(2097151&vA|0,0,2097151&_|0,0),l=wB,N=0|MI(2097151&U|0,0,2097151&nI|0,0),II=wB,cI=0|MI(2097151&rA|0,0,2097151&t|0,0),h=wB,c=0|MI(2097151&yI|0,0,2097151&v|0,0),eI=wB,f=0|MI(2097151&uA|0,0,2097151&k|0,0),fI=wB,iA=0|MI(2097151&wA|0,0,2097151&gA|0,0),D=wB,IA=0|MI(2097151&P|0,0,2097151&QI|0,0),eA=wB,YA=0|MI(2097151&AA|0,0,2097151&b|0,0),L=wB,oI=0|Qg(0|(l=0|Qg(0|(II=0|Qg(0|(eI=0|Qg(0|(h=0|Qg(0|(fI=0|Qg(0|(D=0|Qg(0|(eA=0|Qg(0|(L=0|Qg(0|(bA=0|Qg(0|(EI=0|MI(2097151&jA|0,0,2097151&pg|0,0)),0|(VA=wB),0|(bA=0|MI(2097151&bA|0,0,0|a,0|sA)),0|wB)),0|wB,0|YA,0|L)),0|wB,0|IA,0|eA)),0|wB,0|iA,0|D)),0|wB,0|f,0|fI)),0|wB,0|cI,0|h)),0|wB,0|c,0|eI)),0|wB,0|N,0|II)),0|wB,0|AI,0|l)),0|wB,0|aI,0|oI),aI=wB,_=0|MI(0|u,0|cA,2097151&_|0,0),l=wB,AI=0|MI(2097151&vA|0,0,2097151&nI|0,0),II=wB,N=0|MI(2097151&U|0,0,2097151&t|0,0),eI=wB,c=0|MI(2097151&rA|0,0,2097151&v|0,0),h=wB,cI=0|MI(2097151&yI|0,0,2097151&k|0,0),fI=wB,f=0|MI(2097151&uA|0,0,2097151&gA|0,0),D=wB,iA=0|MI(2097151&wA|0,0,2097151&QI|0,0),eA=wB,IA=0|MI(2097151&P|0,0,2097151&b|0,0),L=wB,YA=0|MI(2097151&AA|0,0,2097151&pg|0,0),bA=wB,jA=0|MI(2097151&jA|0,0,0|a,0|sA),VA=wB,nI=0|MI(0|u,0|cA,2097151&nI|0,0),EI=wB,TA=0|MI(2097151&vA|0,0,2097151&t|0,0),E=wB,r=0|MI(2097151&U|0,0,2097151&v|0,0),ZA=wB,j=0|MI(2097151&rA|0,0,2097151&k|0,0),M=wB,W=0|MI(2097151&yI|0,0,2097151&gA|0,0),C=wB,DA=0|MI(2097151&uA|0,0,2097151&QI|0,0),y=wB,lA=0|MI(2097151&wA|0,0,2097151&b|0,0),n=wB,EI=0|Qg(0|(E=0|Qg(0|(ZA=0|Qg(0|(C=0|Qg(0|(M=0|Qg(0|(y=0|Qg(0|(n=0|Qg(0|(AA=0|Qg(0|(wI=0|MI(2097151&P|0,0,2097151&pg|0,0)),0|(o=wB),0|(AA=0|MI(2097151&AA|0,0,0|a,0|sA)),0|wB)),0|wB,0|lA,0|n)),0|wB,0|DA,0|y)),0|wB,0|j,0|M)),0|wB,0|W,0|C)),0|wB,0|r,0|ZA)),0|wB,0|TA,0|E)),0|wB,0|nI,0|EI),nI=wB,t=0|MI(0|u,0|cA,2097151&t|0,0),E=wB,TA=0|MI(2097151&vA|0,0,2097151&v|0,0),ZA=wB,r=0|MI(2097151&U|0,0,2097151&k|0,0),C=wB,W=0|MI(2097151&rA|0,0,2097151&gA|0,0),M=wB,j=0|MI(2097151&yI|0,0,2097151&QI|0,0),y=wB,DA=0|MI(2097151&uA|0,0,2097151&b|0,0),n=wB,lA=0|MI(2097151&wA|0,0,2097151&pg|0,0),AA=wB,P=0|MI(2097151&P|0,0,0|a,0|sA),o=wB,v=0|MI(0|u,0|cA,2097151&v|0,0),wI=wB,BA=0|MI(2097151&vA|0,0,2097151&k|0,0),SA=wB,HA=0|MI(2097151&U|0,0,2097151&gA|0,0),G=wB,$=0|MI(2097151&rA|0,0,2097151&QI|0,0),w=wB,F=0|MI(2097151&yI|0,0,2097151&b|0,0),_A=wB,wI=0|Qg(0|(SA=0|Qg(0|(G=0|Qg(0|(_A=0|Qg(0|(w=0|Qg(0|(g=0|Qg(0|(S=0|MI(2097151&uA|0,0,2097151&pg|0,0)),0|(pA=wB),0|(g=0|MI(2097151&wA|0,0,0|a,0|sA)),0|wB)),0|wB,0|$,0|w)),0|wB,0|F,0|_A)),0|wB,0|HA,0|G)),0|wB,0|BA,0|SA)),0|wB,0|v,0|wI),v=wB,k=0|MI(0|u,0|cA,2097151&k|0,0),SA=wB,BA=0|MI(2097151&vA|0,0,2097151&gA|0,0),G=wB,HA=0|MI(2097151&U|0,0,2097151&QI|0,0),_A=wB,F=0|MI(2097151&rA|0,0,2097151&b|0,0),w=wB,$=0|MI(2097151&yI|0,0,2097151&pg|0,0),g=wB,uA=0|MI(2097151&uA|0,0,0|a,0|sA),pA=wB,gA=0|MI(0|u,0|cA,2097151&gA|0,0),S=wB,wA=0|MI(2097151&vA|0,0,2097151&QI|0,0),R=wB,UA=0|MI(2097151&U|0,0,2097151&b|0,0),Y=wB,p=0|MI(2097151&rA|0,0,2097151&pg|0,0),CA=wB,S=0|Qg(0|(R=0|Qg(0|(Y=0|Qg(0|(CA=0|Qg(0|(yI=0|MI(2097151&yI|0,0,0|a,0|sA)),0|wB,0|p,0|CA)),0|wB,0|UA,0|Y)),0|wB,0|wA,0|R)),0|wB,0|gA,0|S),gA=wB,QI=0|MI(0|u,0|cA,2097151&QI|0,0),R=wB,wA=0|MI(2097151&vA|0,0,2097151&b|0,0),Y=wB,UA=0|MI(2097151&U|0,0,2097151&pg|0,0),CA=wB,rA=0|MI(2097151&rA|0,0,0|a,0|sA),p=wB,b=0|MI(0|u,0|cA,2097151&b|0,0),yI=wB,yI=0|Qg(0|(U=0|Qg(0|(0|MI(2097151&vA|0,0,2097151&pg|0,0)),0|wB,0|(U=0|MI(2097151&U|0,0,0|a,0|sA)),0|wB)),0|wB,0|b,0|yI),b=wB,vA=0|Qg(0|(pg=0|MI(0|u,0|cA,2097151&pg|0,0)),0|(U=wB),0|(vA=0|MI(2097151&vA|0,0,0|a,0|sA)),0|wB),U=wB,sA=0|MI(0|u,0|cA,0|a,0|sA),a=wB,cA=0|WI(0|(cA=0|Qg(0|oA,0|V,1048576,0)),0|wB,21),u=wB,aA=0|Qg(0|(aA=0|Qg(0|(s=0|Qg(0|ug,0|lg,0|hg,0|s)),0|wB,2097151&aA|0,0)),0|wB,0|cA,0|u),s=wB,u=0|ig(0|oA,0|V,0|(u=0|ZI(0|cA,0|u,21)),0|wB),V=wB,oA=0|WI(0|(oA=0|Qg(0|yA,0|fA,1048576,0)),0|wB,21),cA=wB,RA=0|Qg(0|(RA=0|Qg(0|(x=0|Qg(0|(EA=0|Qg(0|(fg=0|Qg(0|sg,0|wg,0|yg,0|fg)),0|wB,0|cg,0|EA)),0|wB,0|QA,0|x)),0|wB,2097151&RA|0,0)),0|wB,0|oA,0|cA),x=wB,cA=0|ZI(0|oA,0|cA,21),oA=wB,QA=0|GI(0|(QA=0|Qg(0|tA,0|nA,1048576,0)),0|wB,21),EA=wB,FA=0|Qg(0|(FA=0|Qg(0|(q=0|Qg(0|(dA=0|Qg(0|(Cg=0|Qg(0|(Eg=0|Qg(0|(tg=0|Qg(0|og,0|ag,0|rg,0|tg)),0|wB,0|ng,0|Eg)),0|wB,0|eg,0|Cg)),0|wB,0|Bg,0|dA)),0|wB,0|GA,0|q)),0|wB,2097151&FA|0,0)),0|wB,0|QA,0|EA),q=wB,EA=0|ZI(0|QA,0|EA,21),QA=wB,GA=0|GI(0|(GA=0|Qg(0|CI,0|OA,1048576,0)),0|wB,21),dA=wB,i=0|Qg(0|(i=0|Qg(0|(d=0|Qg(0|(T=0|Qg(0|(XI=0|Qg(0|(VI=0|Qg(0|(TI=0|Qg(0|(OI=0|Qg(0|($I=0|Qg(0|gg,0|Ig,0|Ag,0|$I)),0|wB,0|zI,0|OI)),0|wB,0|qI,0|TI)),0|wB,0|jI,0|VI)),0|wB,0|KI,0|XI)),0|wB,0|xI,0|T)),0|wB,0|Z,0|d)),0|wB,2097151&i|0,0)),0|wB,0|GA,0|dA),d=wB,dA=0|ZI(0|GA,0|dA,21),GA=wB,Z=0|GI(0|(Z=0|Qg(0|LA,0|xA,1048576,0)),0|wB,21),T=wB,B=0|Qg(0|(B=0|Qg(0|(B=0|Qg(0|(hA=0|Qg(0|(DI=0|Qg(0|(dI=0|Qg(0|(HI=0|Qg(0|(YI=0|Qg(0|(SI=0|Qg(0|(NI=0|Qg(0|(UI=0|Qg(0|LI,0|JI,0|PI,0|UI)),0|wB,0|RI,0|NI)),0|wB,0|mI,0|SI)),0|wB,0|bI,0|YI)),0|wB,0|kI,0|HI)),0|wB,0|FI,0|dI)),0|wB,0|_I,0|DI)),0|wB,0|pI,0|hA)),0|wB,0|Q,0|B)),0|wB,2097151&H|0,0)),0|wB,0|Z,0|T),H=wB,T=0|ZI(0|Z,0|T,21),Z=wB,Q=0|GI(0|(Q=0|Qg(0|JA,0|PA,1048576,0)),0|wB,21),hA=wB,e=0|Qg(0|(e=0|Qg(0|($A=0|Qg(0|(qA=0|Qg(0|(K=0|Qg(0|(rI=0|Qg(0|(O=0|Qg(0|(NA=0|Qg(0|(BI=0|Qg(0|(MA=0|Qg(0|(KA=0|Qg(0|(m=0|Qg(0|(sI=0|Qg(0|uI,0|lI,0|hI,0|sI)),0|wB,0|J,0|m)),0|wB,0|XA,0|KA)),0|wB,0|kA,0|MA)),0|wB,0|gI,0|BI)),0|wB,0|mA,0|NA)),0|wB,0|z,0|O)),0|wB,0|tI,0|rI)),0|wB,0|X,0|K)),0|wB,0|WA,0|qA)),0|wB,0|iI,0|$A)),0|wB,0|I,0|e)),0|wB,0|Q,0|hA),I=wB,hA=0|ZI(0|Q,0|hA,21),Q=wB,$A=0|GI(0|($A=0|Qg(0|oI,0|aI,1048576,0)),0|wB,21),iI=wB,l=0|Qg(0|(l=0|Qg(0|(II=0|Qg(0|(eI=0|Qg(0|(fI=0|Qg(0|(h=0|Qg(0|(D=0|Qg(0|(eA=0|Qg(0|(L=0|Qg(0|(VA=0|Qg(0|YA,0|bA,0|jA,0|VA)),0|wB,0|IA,0|L)),0|wB,0|iA,0|eA)),0|wB,0|f,0|D)),0|wB,0|c,0|h)),0|wB,0|cI,0|fI)),0|wB,0|N,0|eI)),0|wB,0|AI,0|II)),0|wB,0|_,0|l)),0|wB,0|$A,0|iI),_=wB,iI=0|ZI(0|$A,0|iI,21),$A=wB,II=0|GI(0|(II=0|Qg(0|EI,0|nI,1048576,0)),0|wB,21),AI=wB,E=0|Qg(0|(E=0|Qg(0|(ZA=0|Qg(0|(C=0|Qg(0|(y=0|Qg(0|(M=0|Qg(0|(n=0|Qg(0|(o=0|Qg(0|lA,0|AA,0|P,0|o)),0|wB,0|DA,0|n)),0|wB,0|W,0|M)),0|wB,0|j,0|y)),0|wB,0|r,0|C)),0|wB,0|TA,0|ZA)),0|wB,0|t,0|E)),0|wB,0|II,0|AI),t=wB,AI=0|ZI(0|II,0|AI,21),II=wB,ZA=0|GI(0|(ZA=0|Qg(0|wI,0|v,1048576,0)),0|wB,21),TA=wB,SA=0|Qg(0|(SA=0|Qg(0|(G=0|Qg(0|(_A=0|Qg(0|(g=0|Qg(0|(pA=0|Qg(0|F,0|w,0|uA,0|pA)),0|wB,0|$,0|g)),0|wB,0|HA,0|_A)),0|wB,0|BA,0|G)),0|wB,0|k,0|SA)),0|wB,0|ZA,0|TA),k=wB,TA=0|ZI(0|ZA,0|TA,21),ZA=wB,G=0|GI(0|(G=0|Qg(0|S,0|gA,1048576,0)),0|wB,21),BA=wB,R=0|Qg(0|(R=0|Qg(0|(Y=0|Qg(0|(p=0|Qg(0|UA,0|CA,0|rA,0|p)),0|wB,0|wA,0|Y)),0|wB,0|QI,0|R)),0|wB,0|G,0|BA),QI=wB,BA=0|ig(0|S,0|gA,0|(BA=0|ZI(0|G,0|BA,21)),0|wB),gA=wB,U=0|Qg(0|vA,0|U,0|(S=0|GI(0|(S=0|Qg(0|yI,0|b,1048576,0)),0|wB,21)),0|(G=wB)),vA=wB,G=0|ig(0|yI,0|b,0|(G=0|ZI(0|S,0|G,21)),0|wB),b=wB,Y=0|ig(0|sA,0|a,0|(Y=0|ZI(0|(yI=0|GI(0|(yI=0|Qg(0|sA,0|a,1048576,0)),0|wB,21)),0|(S=wB),21)),0|wB),a=wB,p=0|ig(0|aA,0|s,0|(p=0|ZI(0|(sA=0|WI(0|(sA=0|Qg(0|aA,0|s,1048576,0)),0|wB,21)),0|(wA=wB),21)),0|wB),s=wB,CA=0|ig(0|RA,0|x,0|(CA=0|ZI(0|(aA=0|GI(0|(aA=0|Qg(0|RA,0|x,1048576,0)),0|wB,21)),0|(rA=wB),21)),0|wB),x=wB,_A=0|ig(0|FA,0|q,0|(_A=0|ZI(0|(RA=0|GI(0|(RA=0|Qg(0|FA,0|q,1048576,0)),0|wB,21)),0|(UA=wB),21)),0|wB),q=wB,g=0|ZI(0|(FA=0|GI(0|(FA=0|Qg(0|i,0|d,1048576,0)),0|wB,21)),0|(HA=wB),21),$=wB,w=0|ZI(0|(pA=0|GI(0|(pA=0|Qg(0|B,0|H,1048576,0)),0|wB,21)),0|(uA=wB),21),F=wB,y=0|ZI(0|(C=0|GI(0|(C=0|Qg(0|e,0|I,1048576,0)),0|wB,21)),0|(r=wB),21),j=wB,n=0|ZI(0|(M=0|GI(0|(M=0|Qg(0|l,0|_,1048576,0)),0|wB,21)),0|(W=wB),21),DA=wB,AA=0|ZI(0|(o=0|GI(0|(o=0|Qg(0|E,0|t,1048576,0)),0|wB,21)),0|(P=wB),21),lA=wB,gA=0|Qg(0|(eI=0|GI(0|(eI=0|Qg(0|SA,0|k,1048576,0)),0|wB,21)),0|(N=wB),0|BA,0|gA),BA=wB,N=0|ig(0|SA,0|k,0|(N=0|ZI(0|eI,0|N,21)),0|wB),k=wB,b=0|Qg(0|(SA=0|GI(0|(SA=0|Qg(0|R,0|QI,1048576,0)),0|wB,21)),0|(eI=wB),0|G,0|b),G=wB,eI=0|ig(0|R,0|QI,0|(eI=0|ZI(0|SA,0|eI,21)),0|wB),QI=wB,a=0|Qg(0|(R=0|GI(0|(R=0|Qg(0|U,0|vA,1048576,0)),0|wB,21)),0|(SA=wB),0|Y,0|a),Y=wB,SA=0|ig(0|U,0|vA,0|(SA=0|ZI(0|R,0|SA,21)),0|wB),vA=wB,U=0|MI(0|yI,0|S,666643,0),R=wB,fI=0|MI(0|yI,0|S,470296,0),cI=wB,h=0|MI(0|yI,0|S,654183,0),c=wB,D=0|MI(0|yI,0|S,-997805,-1),f=wB,eA=0|MI(0|yI,0|S,136657,0),iA=wB,P=0|Qg(0|(ZA=0|ig(0|(S=0|Qg(0|wI,0|v,0|(S=0|MI(0|yI,0|S,-683901,-1)),0|wB)),0|wB,0|TA,0|ZA)),0|wB,0|o,0|P),o=wB,ZA=0|MI(0|a,0|Y,666643,0),TA=wB,S=0|MI(0|a,0|Y,470296,0),v=wB,wI=0|MI(0|a,0|Y,654183,0),yI=wB,L=0|MI(0|a,0|Y,-997805,-1),IA=wB,VA=0|MI(0|a,0|Y,136657,0),jA=wB,Y=0|MI(0|a,0|Y,-683901,-1),a=wB,bA=0|MI(0|SA,0|vA,666643,0),YA=wB,qA=0|MI(0|SA,0|vA,470296,0),WA=wB,K=0|MI(0|SA,0|vA,654183,0),X=wB,rI=0|MI(0|SA,0|vA,-997805,-1),tI=wB,O=0|MI(0|SA,0|vA,136657,0),z=wB,vA=0|MI(0|SA,0|vA,-683901,-1),SA=wB,W=0|Qg(0|(II=0|ig(0|(SA=0|Qg(0|(jA=0|Qg(0|(f=0|Qg(0|EI,0|nI,0|D,0|f)),0|wB,0|VA,0|jA)),0|wB,0|vA,0|SA)),0|wB,0|AI,0|II)),0|wB,0|M,0|W),M=wB,II=0|MI(0|b,0|G,666643,0),AI=wB,SA=0|MI(0|b,0|G,470296,0),vA=wB,jA=0|MI(0|b,0|G,654183,0),VA=wB,f=0|MI(0|b,0|G,-997805,-1),D=wB,nI=0|MI(0|b,0|G,136657,0),EI=wB,G=0|MI(0|b,0|G,-683901,-1),b=wB,NA=0|MI(0|eI,0|QI,666643,0),mA=wB,BI=0|MI(0|eI,0|QI,470296,0),gI=wB,MA=0|MI(0|eI,0|QI,654183,0),kA=wB,KA=0|MI(0|eI,0|QI,-997805,-1),XA=wB,m=0|MI(0|eI,0|QI,136657,0),J=wB,QI=0|MI(0|eI,0|QI,-683901,-1),eI=wB,r=0|Qg(0|($A=0|ig(0|(eI=0|Qg(0|(EI=0|Qg(0|(tI=0|Qg(0|(aI=0|Qg(0|(cI=0|Qg(0|wI,0|yI,0|fI,0|cI)),0|wB,0|oI,0|aI)),0|wB,0|rI,0|tI)),0|wB,0|nI,0|EI)),0|wB,0|QI,0|eI)),0|wB,0|iI,0|$A)),0|wB,0|C,0|r),C=wB,GA=0|ig(0|(UA=0|Qg(0|($A=0|Qg(0|CI,0|OA,0|($A=0|MI(0|gA,0|BA,666643,0)),0|wB)),0|wB,0|RA,0|UA)),0|wB,0|dA,0|GA),dA=wB,UA=0|MI(0|gA,0|BA,470296,0),RA=wB,$A=0|MI(0|gA,0|BA,654183,0),OA=wB,Z=0|ig(0|(HA=0|Qg(0|(xA=0|Qg(0|(OA=0|Qg(0|(AI=0|Qg(0|BI,0|gI,0|II,0|AI)),0|wB,0|$A,0|OA)),0|wB,0|LA,0|xA)),0|wB,0|FA,0|HA)),0|wB,0|T,0|Z),T=wB,HA=0|MI(0|gA,0|BA,-997805,-1),FA=wB,xA=0|MI(0|gA,0|BA,136657,0),LA=wB,Q=0|ig(0|(uA=0|Qg(0|(PA=0|Qg(0|(LA=0|Qg(0|(XA=0|Qg(0|(VA=0|Qg(0|(TA=0|Qg(0|qA,0|WA,0|ZA,0|TA)),0|wB,0|jA,0|VA)),0|wB,0|KA,0|XA)),0|wB,0|xA,0|LA)),0|wB,0|JA,0|PA)),0|wB,0|pA,0|uA)),0|wB,0|hA,0|Q),hA=wB,BA=0|MI(0|gA,0|BA,-683901,-1),gA=wB,uA=0|GI(0|(uA=0|Qg(0|GA,0|dA,1048576,0)),0|wB,21),pA=wB,$=0|Qg(0|($=0|ig(0|(d=0|Qg(0|(mA=0|Qg(0|UA,0|RA,0|NA,0|mA)),0|wB,0|i,0|d)),0|wB,0|g,0|$)),0|wB,0|uA,0|pA),g=wB,pA=0|ZI(0|uA,0|pA,21),uA=wB,d=0|GI(0|(d=0|Qg(0|Z,0|T,1048576,0)),0|wB,21),i=wB,F=0|Qg(0|(F=0|ig(0|(H=0|Qg(0|(FA=0|Qg(0|(kA=0|Qg(0|(YA=0|Qg(0|SA,0|vA,0|bA,0|YA)),0|wB,0|MA,0|kA)),0|wB,0|HA,0|FA)),0|wB,0|B,0|H)),0|wB,0|w,0|F)),0|wB,0|d,0|i),w=wB,i=0|ZI(0|d,0|i,21),d=wB,H=0|GI(0|(H=0|Qg(0|Q,0|hA,1048576,0)),0|wB,21),B=wB,j=0|Qg(0|(j=0|ig(0|(I=0|Qg(0|(gA=0|Qg(0|(J=0|Qg(0|(D=0|Qg(0|(X=0|Qg(0|(R=0|Qg(0|S,0|v,0|U,0|R)),0|wB,0|K,0|X)),0|wB,0|f,0|D)),0|wB,0|m,0|J)),0|wB,0|BA,0|gA)),0|wB,0|e,0|I)),0|wB,0|y,0|j)),0|wB,0|H,0|B),y=wB,B=0|ZI(0|H,0|B,21),H=wB,I=0|GI(0|(I=0|Qg(0|r,0|C,1048576,0)),0|wB,21),e=wB,DA=0|Qg(0|(DA=0|ig(0|(_=0|Qg(0|(b=0|Qg(0|(z=0|Qg(0|(c=0|Qg(0|L,0|IA,0|h,0|c)),0|wB,0|O,0|z)),0|wB,0|G,0|b)),0|wB,0|l,0|_)),0|wB,0|n,0|DA)),0|wB,0|I,0|e),n=wB,e=0|ig(0|r,0|C,0|(e=0|ZI(0|I,0|e,21)),0|wB),C=wB,r=0|GI(0|(r=0|Qg(0|W,0|M,1048576,0)),0|wB,21),I=wB,lA=0|Qg(0|(lA=0|ig(0|(t=0|Qg(0|(iA=0|Qg(0|Y,0|a,0|eA,0|iA)),0|wB,0|E,0|t)),0|wB,0|AA,0|lA)),0|wB,0|r,0|I),AA=wB,I=0|ig(0|W,0|M,0|(I=0|ZI(0|r,0|I,21)),0|wB),M=wB,k=0|Qg(0|(W=0|GI(0|(W=0|Qg(0|P,0|o,1048576,0)),0|wB,21)),0|(r=wB),0|N,0|k),N=wB,r=0|ig(0|P,0|o,0|(r=0|ZI(0|W,0|r,21)),0|wB),o=wB,t=0|ZI(0|(P=0|GI(0|(P=0|Qg(0|$,0|g,1048576,0)),0|wB,21)),0|(W=wB),21),E=wB,a=0|ZI(0|(iA=0|GI(0|(iA=0|Qg(0|F,0|w,1048576,0)),0|wB,21)),0|(eA=wB),21),Y=wB,C=0|Qg(0|(_=0|GI(0|(_=0|Qg(0|j,0|y,1048576,0)),0|wB,21)),0|(l=wB),0|e,0|C),e=wB,l=0|ig(0|j,0|y,0|(l=0|ZI(0|_,0|l,21)),0|wB),y=wB,M=0|Qg(0|(j=0|GI(0|(j=0|Qg(0|DA,0|n,1048576,0)),0|wB,21)),0|(_=wB),0|I,0|M),I=wB,_=0|ig(0|DA,0|n,0|(_=0|ZI(0|j,0|_,21)),0|wB),n=wB,o=0|Qg(0|(DA=0|GI(0|(DA=0|Qg(0|lA,0|AA,1048576,0)),0|wB,21)),0|(j=wB),0|r,0|o),r=wB,j=0|ig(0|lA,0|AA,0|(j=0|ZI(0|DA,0|j,21)),0|wB),AA=wB,lA=0|Qg(0|_A,0|q,0|(lA=0|MI(0|k,0|N,666643,0)),0|wB),q=wB,_A=0|MI(0|k,0|N,470296,0),DA=wB,b=0|MI(0|k,0|N,654183,0),G=wB,z=0|MI(0|k,0|N,-997805,-1),O=wB,c=0|MI(0|k,0|N,136657,0),h=wB,H=0|ig(0|(eA=0|Qg(0|(N=0|Qg(0|Q,0|hA,0|(N=0|MI(0|k,0|N,-683901,-1)),0|wB)),0|wB,0|iA,0|eA)),0|wB,0|B,0|H),B=wB,eA=0|MI(0|o,0|r,666643,0),iA=wB,N=0|Qg(0|lA,0|q,0|(N=0|MI(0|o,0|r,470296,0)),0|wB),q=wB,lA=0|MI(0|o,0|r,654183,0),hA=wB,Q=0|MI(0|o,0|r,-997805,-1),k=wB,IA=0|MI(0|o,0|r,136657,0),L=wB,r=0|MI(0|o,0|r,-683901,-1),o=wB,gA=0|Qg(0|CA,0|x,0|(gA=0|MI(0|j,0|AA,666643,0)),0|wB),x=wB,CA=0|MI(0|j,0|AA,470296,0),BA=wB,J=0|Qg(0|N,0|q,0|(J=0|MI(0|j,0|AA,654183,0)),0|wB),q=wB,N=0|MI(0|j,0|AA,-997805,-1),m=wB,D=0|MI(0|j,0|AA,136657,0),f=wB,AA=0|MI(0|j,0|AA,-683901,-1),j=wB,d=0|ig(0|(j=0|Qg(0|(L=0|Qg(0|(W=0|Qg(0|(O=0|Qg(0|Z,0|T,0|z,0|O)),0|wB,0|P,0|W)),0|wB,0|IA,0|L)),0|wB,0|AA,0|j)),0|wB,0|i,0|d),i=wB,j=0|MI(0|M,0|I,666643,0),AA=wB,L=0|Qg(0|gA,0|x,0|(L=0|MI(0|M,0|I,470296,0)),0|wB),x=wB,gA=0|MI(0|M,0|I,654183,0),IA=wB,W=0|Qg(0|J,0|q,0|(W=0|MI(0|M,0|I,-997805,-1)),0|wB),q=wB,J=0|MI(0|M,0|I,136657,0),P=wB,I=0|MI(0|M,0|I,-683901,-1),M=wB,O=0|MI(0|_,0|n,666643,0),z=wB,T=0|MI(0|_,0|n,470296,0),Z=wB,X=0|MI(0|_,0|n,654183,0),K=wB,R=0|MI(0|_,0|n,-997805,-1),U=wB,v=0|MI(0|_,0|n,136657,0),S=wB,n=0|MI(0|_,0|n,-683901,-1),_=wB,_=0|Qg(0|(P=0|Qg(0|(m=0|Qg(0|(hA=0|Qg(0|(uA=0|ig(0|(DA=0|Qg(0|GA,0|dA,0|_A,0|DA)),0|wB,0|pA,0|uA)),0|wB,0|lA,0|hA)),0|wB,0|N,0|m)),0|wB,0|J,0|P)),0|wB,0|n,0|_),n=wB,V=0|Qg(0|(P=0|MI(0|C,0|e,666643,0)),0|wB,0|u,0|V),u=wB,P=0|MI(0|C,0|e,470296,0),J=wB,m=0|MI(0|C,0|e,654183,0),N=wB,Z=0|Qg(0|(N=0|Qg(0|(AA=0|Qg(0|(oA=0|ig(0|(fA=0|Qg(0|sA,0|wA,0|yA,0|fA)),0|wB,0|cA,0|oA)),0|wB,0|j,0|AA)),0|wB,0|m,0|N)),0|wB,0|T,0|Z),T=wB,N=0|MI(0|C,0|e,-997805,-1),m=wB,AA=0|MI(0|C,0|e,136657,0),j=wB,U=0|Qg(0|(j=0|Qg(0|(IA=0|Qg(0|(BA=0|Qg(0|(iA=0|Qg(0|(QA=0|ig(0|(nA=0|Qg(0|aA,0|rA,0|tA,0|nA)),0|wB,0|EA,0|QA)),0|wB,0|eA,0|iA)),0|wB,0|CA,0|BA)),0|wB,0|gA,0|IA)),0|wB,0|AA,0|j)),0|wB,0|R,0|U),R=wB,e=0|MI(0|C,0|e,-683901,-1),C=wB,j=0|GI(0|(j=0|Qg(0|V,0|u,1048576,0)),0|wB,21),AA=wB,z=0|Qg(0|(z=0|Qg(0|(J=0|Qg(0|p,0|s,0|P,0|J)),0|wB,0|O,0|z)),0|wB,0|j,0|AA),O=wB,AA=0|ig(0|V,0|u,0|(AA=0|ZI(0|j,0|AA,21)),0|wB),u=wB,V=0|GI(0|(V=0|Qg(0|Z,0|T,1048576,0)),0|wB,21),j=wB,K=0|Qg(0|(K=0|Qg(0|(m=0|Qg(0|L,0|x,0|N,0|m)),0|wB,0|X,0|K)),0|wB,0|V,0|j),X=wB,j=0|ZI(0|V,0|j,21),V=wB,m=0|GI(0|(m=0|Qg(0|U,0|R,1048576,0)),0|wB,21),N=wB,S=0|Qg(0|(S=0|Qg(0|(C=0|Qg(0|W,0|q,0|e,0|C)),0|wB,0|v,0|S)),0|wB,0|m,0|N),v=wB,N=0|ZI(0|m,0|N,21),m=wB,C=0|GI(0|(C=0|Qg(0|_,0|n,1048576,0)),0|wB,21),e=wB,M=0|Qg(0|(M=0|Qg(0|(f=0|Qg(0|(E=0|ig(0|(k=0|Qg(0|(G=0|Qg(0|$,0|g,0|b,0|G)),0|wB,0|Q,0|k)),0|wB,0|t,0|E)),0|wB,0|D,0|f)),0|wB,0|I,0|M)),0|wB,0|C,0|e),I=wB,e=0|ig(0|_,0|n,0|(e=0|ZI(0|C,0|e,21)),0|wB),n=wB,_=0|GI(0|(_=0|Qg(0|d,0|i,1048576,0)),0|wB,21),C=wB,Y=0|Qg(0|(Y=0|ig(0|(w=0|Qg(0|(h=0|Qg(0|r,0|o,0|c,0|h)),0|wB,0|F,0|w)),0|wB,0|a,0|Y)),0|wB,0|_,0|C),a=wB,C=0|ig(0|d,0|i,0|(C=0|ZI(0|_,0|C,21)),0|wB),i=wB,y=0|Qg(0|l,0|y,0|(d=0|GI(0|(d=0|Qg(0|H,0|B,1048576,0)),0|wB,21)),0|(_=wB)),l=wB,_=0|ZI(0|d,0|_,21),d=wB,h=0|ZI(0|(w=0|GI(0|(w=0|Qg(0|z,0|O,1048576,0)),0|wB,21)),0|(F=wB),21),c=wB,f=0|ZI(0|(o=0|GI(0|(o=0|Qg(0|K,0|X,1048576,0)),0|wB,21)),0|(r=wB),21),D=wB,n=0|Qg(0|e,0|n,0|(E=0|GI(0|(E=0|Qg(0|S,0|v,1048576,0)),0|wB,21)),0|(t=wB)),e=wB,t=0|ZI(0|E,0|t,21),E=wB,i=0|Qg(0|C,0|i,0|(k=0|GI(0|(k=0|Qg(0|M,0|I,1048576,0)),0|wB,21)),0|(Q=wB)),C=wB,Q=0|ig(0|M,0|I,0|(Q=0|ZI(0|k,0|Q,21)),0|wB),I=wB,G=0|ig(0|Y,0|a,0|(G=0|ZI(0|(M=0|GI(0|(M=0|Qg(0|Y,0|a,1048576,0)),0|wB,21)),0|(k=wB),21)),0|wB),a=wB,g=0|ig(0|y,0|l,0|(g=0|ZI(0|(Y=0|GI(0|(Y=0|Qg(0|y,0|l,1048576,0)),0|wB,21)),0|(b=wB),21)),0|wB),l=wB,y=0|Qg(0|AA,0|u,0|(y=0|MI(0|Y,0|b,666643,0)),0|wB),u=wB,AA=0|MI(0|Y,0|b,470296,0),$=wB,q=0|MI(0|Y,0|b,654183,0),W=wB,x=0|MI(0|Y,0|b,-997805,-1),L=wB,J=0|MI(0|Y,0|b,136657,0),P=wB,b=0|MI(0|Y,0|b,-683901,-1),Y=wB,s=0|GI(0|y,0|u,21),p=wB,c=0|Qg(0|(c=0|ig(0|(O=0|Qg(0|AA,0|$,0|z,0|O)),0|wB,0|h,0|c)),0|wB,0|s,0|p),h=wB,p=0|ig(0|y,0|u,0|(p=0|ZI(0|s,0|p,21)),0|wB),u=wB,y=0|GI(0|c,0|h,21),s=wB,F=0|Qg(0|(F=0|Qg(0|(V=0|ig(0|(T=0|Qg(0|q,0|W,0|Z,0|T)),0|wB,0|j,0|V)),0|wB,0|w,0|F)),0|wB,0|y,0|s),w=wB,s=0|ig(0|c,0|h,0|(s=0|ZI(0|y,0|s,21)),0|wB),h=wB,c=0|GI(0|F,0|w,21),y=wB,D=0|Qg(0|(D=0|ig(0|(L=0|Qg(0|K,0|X,0|x,0|L)),0|wB,0|f,0|D)),0|wB,0|c,0|y),f=wB,y=0|ig(0|F,0|w,0|(y=0|ZI(0|c,0|y,21)),0|wB),w=wB,F=0|GI(0|D,0|f,21),c=wB,r=0|Qg(0|(r=0|Qg(0|(m=0|ig(0|(R=0|Qg(0|J,0|P,0|U,0|R)),0|wB,0|N,0|m)),0|wB,0|o,0|r)),0|wB,0|F,0|c),o=wB,c=0|ig(0|D,0|f,0|(c=0|ZI(0|F,0|c,21)),0|wB),f=wB,D=0|GI(0|r,0|o,21),F=wB,E=0|Qg(0|(E=0|ig(0|(Y=0|Qg(0|S,0|v,0|b,0|Y)),0|wB,0|t,0|E)),0|wB,0|D,0|F),t=wB,F=0|ig(0|r,0|o,0|(F=0|ZI(0|D,0|F,21)),0|wB),o=wB,e=0|Qg(0|n,0|e,0|(r=0|GI(0|E,0|t,21)),0|(D=wB)),n=wB,D=0|ig(0|E,0|t,0|(D=0|ZI(0|r,0|D,21)),0|wB),t=wB,I=0|Qg(0|(E=0|GI(0|e,0|n,21)),0|(r=wB),0|Q,0|I),Q=wB,r=0|ig(0|e,0|n,0|(r=0|ZI(0|E,0|r,21)),0|wB),n=wB,C=0|Qg(0|i,0|C,0|(e=0|GI(0|I,0|Q,21)),0|(E=wB)),i=wB,E=0|ig(0|I,0|Q,0|(E=0|ZI(0|e,0|E,21)),0|wB),Q=wB,a=0|Qg(0|(I=0|GI(0|C,0|i,21)),0|(e=wB),0|G,0|a),G=wB,e=0|ig(0|C,0|i,0|(e=0|ZI(0|I,0|e,21)),0|wB),i=wB,C=0|GI(0|a,0|G,21),I=wB,d=0|Qg(0|(d=0|ig(0|(B=0|Qg(0|M,0|k,0|H,0|B)),0|wB,0|_,0|d)),0|wB,0|C,0|I),_=wB,I=0|ig(0|a,0|G,0|(I=0|ZI(0|C,0|I,21)),0|wB),G=wB,l=0|Qg(0|(a=0|GI(0|d,0|_,21)),0|(C=wB),0|g,0|l),g=wB,C=0|ig(0|d,0|_,0|(C=0|ZI(0|a,0|C,21)),0|wB),_=wB,B=0|ig(0|l,0|g,0|(B=0|ZI(0|(d=0|GI(0|l,0|g,21)),0|(a=wB),21)),0|wB),g=wB,u=0|Qg(0|(l=0|MI(0|d,0|a,666643,0)),0|wB,0|p,0|u),p=wB,l=0|Qg(0|s,0|h,0|(l=0|MI(0|d,0|a,470296,0)),0|wB),h=wB,s=0|Qg(0|y,0|w,0|(s=0|MI(0|d,0|a,654183,0)),0|wB),w=wB,y=0|Qg(0|c,0|f,0|(y=0|MI(0|d,0|a,-997805,-1)),0|wB),f=wB,c=0|Qg(0|F,0|o,0|(c=0|MI(0|d,0|a,136657,0)),0|wB),o=wB,a=0|Qg(0|D,0|t,0|(a=0|MI(0|d,0|a,-683901,-1)),0|wB),t=wB,h=0|Qg(0|l,0|h,0|(D=0|GI(0|u,0|p,21)),0|(d=wB)),l=wB,d=0|ig(0|u,0|p,0|(d=0|ZI(0|D,0|d,21)),0|wB),p=wB,w=0|Qg(0|s,0|w,0|(u=0|GI(0|h,0|l,21)),0|(D=wB)),s=wB,D=0|ig(0|h,0|l,0|(D=0|ZI(0|u,0|D,21)),0|wB),l=wB,f=0|Qg(0|y,0|f,0|(h=0|GI(0|w,0|s,21)),0|(u=wB)),y=wB,u=0|ig(0|w,0|s,0|(u=0|ZI(0|h,0|u,21)),0|wB),s=wB,o=0|Qg(0|c,0|o,0|(w=0|GI(0|f,0|y,21)),0|(h=wB)),c=wB,h=0|ig(0|f,0|y,0|(h=0|ZI(0|w,0|h,21)),0|wB),y=wB,t=0|Qg(0|a,0|t,0|(f=0|GI(0|o,0|c,21)),0|(w=wB)),a=wB,w=0|ig(0|o,0|c,0|(w=0|ZI(0|f,0|w,21)),0|wB),c=wB,n=0|Qg(0|(o=0|GI(0|t,0|a,21)),0|(f=wB),0|r,0|n),r=wB,f=0|ig(0|t,0|a,0|(f=0|ZI(0|o,0|f,21)),0|wB),a=wB,Q=0|Qg(0|(t=0|GI(0|n,0|r,21)),0|(o=wB),0|E,0|Q),E=wB,o=0|ig(0|n,0|r,0|(o=0|ZI(0|t,0|o,21)),0|wB),r=wB,i=0|Qg(0|(n=0|GI(0|Q,0|E,21)),0|(t=wB),0|e,0|i),e=wB,t=0|ig(0|Q,0|E,0|(t=0|ZI(0|n,0|t,21)),0|wB),E=wB,G=0|Qg(0|(Q=0|GI(0|i,0|e,21)),0|(n=wB),0|I,0|G),I=wB,n=0|ig(0|i,0|e,0|(n=0|ZI(0|Q,0|n,21)),0|wB),e=wB,_=0|Qg(0|(i=0|GI(0|G,0|I,21)),0|(Q=wB),0|C,0|_),C=wB,Q=0|ig(0|G,0|I,0|(Q=0|ZI(0|i,0|Q,21)),0|wB),I=wB,g=0|Qg(0|(G=0|GI(0|_,0|C,21)),0|(i=wB),0|B,0|g),B=wB,i=0|ig(0|_,0|C,0|(i=0|ZI(0|G,0|i,21)),0|wB),C=wB,nB[A>>0]=d,_=0|WI(0|d,0|p,8),nB[A+1>>0]=_,p=0|WI(0|d,0|p,16),d=wB,_=0|ZI(0|D,0|l,5),nB[A+2>>0]=_|p,p=0|WI(0|D,0|l,3),nB[A+3>>0]=p,p=0|WI(0|D,0|l,11),nB[A+4>>0]=p,l=0|WI(0|D,0|l,19),D=wB,p=0|ZI(0|u,0|s,2),nB[A+5>>0]=p|l,l=0|WI(0|u,0|s,6),nB[A+6>>0]=l,s=0|WI(0|u,0|s,14),u=wB,l=0|ZI(0|h,0|y,7),nB[A+7>>0]=l|s,s=0|WI(0|h,0|y,1),nB[A+8>>0]=s,s=0|WI(0|h,0|y,9),nB[A+9>>0]=s,y=0|WI(0|h,0|y,17),h=wB,s=0|ZI(0|w,0|c,4),nB[A+10>>0]=s|y,y=0|WI(0|w,0|c,4),nB[A+11>>0]=y,y=0|WI(0|w,0|c,12),nB[A+12>>0]=y,c=0|WI(0|w,0|c,20),w=wB,y=0|ZI(0|f,0|a,1),nB[A+13>>0]=y|c,c=0|WI(0|f,0|a,7),nB[A+14>>0]=c,a=0|WI(0|f,0|a,15),f=wB,c=0|ZI(0|o,0|r,6),nB[A+15>>0]=c|a,a=0|WI(0|o,0|r,2),nB[A+16>>0]=a,a=0|WI(0|o,0|r,10),nB[A+17>>0]=a,r=0|WI(0|o,0|r,18),o=wB,a=0|ZI(0|t,0|E,3),nB[A+18>>0]=a|r,r=0|WI(0|t,0|E,5),nB[A+19>>0]=r,E=0|WI(0|t,0|E,13),nB[A+20>>0]=E,nB[A+21>>0]=n,E=0|WI(0|n,0|e,8),nB[A+22>>0]=E,e=0|WI(0|n,0|e,16),n=wB,E=0|ZI(0|Q,0|I,5),nB[A+23>>0]=E|e,e=0|WI(0|Q,0|I,3),nB[A+24>>0]=e,e=0|WI(0|Q,0|I,11),nB[A+25>>0]=e,I=0|WI(0|Q,0|I,19),Q=wB,e=0|ZI(0|i,0|C,2),nB[A+26>>0]=e|I,I=0|WI(0|i,0|C,6),nB[A+27>>0]=I,C=0|WI(0|i,0|C,14),i=wB,I=0|ZI(0|g,0|B,7),nB[A+28>>0]=C|I,I=0|WI(0|g,0|B,1),nB[A+29>>0]=I,I=0|WI(0|g,0|B,9),nB[A+30>>0]=I,B=0|WI(0|g,0|B,17),nB[A+31>>0]=B}function i(A,I,g,B){A|=0,B|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0;lI(g|=0,I|=0),C=A,i=(I=B)+64|0;do{tB[I>>2]=tB[C>>2],I=I+4|0,C=C+4|0}while((0|I)<(0|i));for(w=0,I=0|tB[g>>2],C=0|tB[g+4>>2];;){if(_=0|tB[B+32>>2],f=0|tB[B+32+4>>2],Q=0|HI(_,f,14),G=wB,D=0|HI(_,f,18),G^=wB,F=0|HI(_,f,41),y=0|tB[B+40>>2],t=0|tB[B+40+4>>2],n=0|tB[B+48>>2],N=0|tB[B+48+4>>2],o=464+(w<<3)|0,r=0|tB[o>>2],o=0|tB[o+4>>2],u=0|tB[B+56>>2],h=0|tB[B+56+4>>2],G=0|Qg(0|I,0|C,D^Q^F|0,G^wB|0),o=0|Qg(0|G,0|wB,0|r,0|o),o=0|Qg(0|o,0|wB,(n^y)&_^n|0,(N^t)&f^N|0),h=0|Qg(0|o,0|wB,0|u,0|h),u=wB,o=0|Qg(0|h,0|u,0|tB[B+24>>2],0|tB[B+24+4>>2]),r=wB,tB[B+24>>2]=o,tB[B+24+4>>2]=r,G=0|tB[B>>2],F=0|tB[B+4>>2],Q=0|HI(G,F,28),D=wB,E=0|HI(G,F,34),D^=wB,l=0|HI(G,F,39),d=0|tB[B+8>>2],Y=0|tB[B+8+4>>2],H=0|tB[B+16>>2],b=0|tB[B+16+4>>2],D=0|Qg(0|h,0|u,E^Q^l|0,D^wB|0),D=0|Qg(0|D,0|wB,(H|d)&G|H&d|0,(b|Y)&F|b&Y|0),l=wB,tB[B+56>>2]=D,tB[B+56+4>>2]=l,Q=0|HI(o,r,14),E=wB,u=0|HI(o,r,18),E^=wB,h=0|HI(o,r,41),e=1|w,p=0|tB[464+(e<<3)>>2],m=0|tB[464+(e<<3)+4>>2],E=0|Qg(0|tB[g+(e<<3)>>2],0|tB[g+(e<<3)+4>>2],u^Q^h|0,E^wB|0),m=0|Qg(0|E,0|wB,0|p,0|m),m=0|Qg(0|m,0|wB,(y^_)&o^y|0,(t^f)&r^t|0),N=0|Qg(0|m,0|wB,0|n,0|N),n=wB,b=0|Qg(0|N,0|n,0|H,0|b),H=wB,tB[B+16>>2]=b,tB[B+16+4>>2]=H,m=0|HI(D,l,28),p=wB,E=0|HI(D,l,34),p^=wB,h=0|HI(D,l,39),p=0|Qg(0|N,0|n,E^m^h|0,p^wB|0),p=0|Qg(0|p,0|wB,(d|G)&D|d&G|0,(Y|F)&l|Y&F|0),h=wB,tB[B+48>>2]=p,tB[B+48+4>>2]=h,m=0|HI(b,H,14),E=wB,n=0|HI(b,H,18),E^=wB,N=0|HI(b,H,41),Q=2|w,u=0|tB[464+(Q<<3)>>2],a=0|tB[464+(Q<<3)+4>>2],E=0|Qg(0|tB[g+(Q<<3)>>2],0|tB[g+(Q<<3)+4>>2],n^m^N|0,E^wB|0),a=0|Qg(0|E,0|wB,0|u,0|a),f=0|Qg(0|a,0|wB,(_^o)&b^_|0,(f^r)&H^f|0),t=0|Qg(0|f,0|wB,0|y,0|t),y=wB,Y=0|Qg(0|t,0|y,0|d,0|Y),d=wB,tB[B+8>>2]=Y,tB[B+8+4>>2]=d,f=0|HI(p,h,28),_=wB,a=0|HI(p,h,34),_^=wB,u=0|HI(p,h,39),_=0|Qg(0|t,0|y,a^f^u|0,_^wB|0),_=0|Qg(0|_,0|wB,(G|D)&p|G&D|0,(F|l)&h|F&l|0),u=wB,tB[B+40>>2]=_,tB[B+40+4>>2]=u,f=0|HI(Y,d,14),a=wB,y=0|HI(Y,d,18),a^=wB,t=0|HI(Y,d,41),E=3|w,N=0|tB[464+(E<<3)>>2],m=0|tB[464+(E<<3)+4>>2],n=0|tB[B+32>>2],c=0|tB[B+32+4>>2],a=0|Qg(0|tB[g+(E<<3)>>2],0|tB[g+(E<<3)+4>>2],y^f^t|0,a^wB|0),m=0|Qg(0|a,0|wB,0|N,0|m),r=0|Qg(0|m,0|wB,(o^b)&Y^o|0,(r^H)&d^r|0),c=0|Qg(0|r,0|wB,0|n,0|c),n=wB,F=0|Qg(0|c,0|n,0|G,0|F),G=wB,tB[B>>2]=F,tB[B+4>>2]=G,r=0|HI(_,u,28),o=wB,m=0|HI(_,u,34),o^=wB,N=0|HI(_,u,39),o=0|Qg(0|c,0|n,m^r^N|0,o^wB|0),l=0|Qg(0|o,0|wB,(D|p)&_|D&p|0,(l|h)&u|l&h|0),D=wB,tB[B+32>>2]=l,tB[B+32+4>>2]=D,o=0|HI(F,G,14),N=wB,r=0|HI(F,G,18),N^=wB,m=0|HI(F,G,41),n=4|w,c=0|tB[464+(n<<3)>>2],a=0|tB[464+(n<<3)+4>>2],t=0|tB[B+24>>2],f=0|tB[B+24+4>>2],N=0|Qg(0|tB[g+(n<<3)>>2],0|tB[g+(n<<3)+4>>2],r^o^m|0,N^wB|0),a=0|Qg(0|N,0|wB,0|c,0|a),H=0|Qg(0|a,0|wB,(b^Y)&F^b|0,(H^d)&G^H|0),f=0|Qg(0|H,0|wB,0|t,0|f),t=wB,H=0|Qg(0|f,0|t,0|tB[B+56>>2],0|tB[B+56+4>>2]),b=wB,tB[B+56>>2]=H,tB[B+56+4>>2]=b,a=0|HI(l,D,28),c=wB,N=0|HI(l,D,34),c^=wB,m=0|HI(l,D,39),c=0|Qg(0|f,0|t,N^a^m|0,c^wB|0),h=0|Qg(0|c,0|wB,(p|_)&l|p&_|0,(h|u)&D|h&u|0),p=wB,tB[B+24>>2]=h,tB[B+24+4>>2]=p,c=0|HI(H,b,14),m=wB,a=0|HI(H,b,18),m^=wB,N=0|HI(H,b,41),t=5|w,f=0|tB[464+(t<<3)>>2],o=0|tB[464+(t<<3)+4>>2],r=0|tB[B+16>>2],y=0|tB[B+16+4>>2],m=0|Qg(0|tB[g+(t<<3)>>2],0|tB[g+(t<<3)+4>>2],a^c^N|0,m^wB|0),o=0|Qg(0|m,0|wB,0|f,0|o),d=0|Qg(0|o,0|wB,(Y^F)&H^Y|0,(d^G)&b^d|0),y=0|Qg(0|d,0|wB,0|r,0|y),r=wB,d=0|Qg(0|y,0|r,0|tB[B+48>>2],0|tB[B+48+4>>2]),Y=wB,tB[B+48>>2]=d,tB[B+48+4>>2]=Y,o=0|HI(h,p,28),f=wB,m=0|HI(h,p,34),f^=wB,N=0|HI(h,p,39),f=0|Qg(0|y,0|r,m^o^N|0,f^wB|0),u=0|Qg(0|f,0|wB,(_|l)&h|_&l|0,(u|D)&p|u&D|0),_=wB,tB[B+16>>2]=u,tB[B+16+4>>2]=_,f=0|HI(d,Y,14),N=wB,o=0|HI(d,Y,18),N^=wB,m=0|HI(d,Y,41),r=6|w,y=0|tB[464+(r<<3)>>2],c=0|tB[464+(r<<3)+4>>2],a=0|tB[B+8>>2],I=0|tB[B+8+4>>2],N=0|Qg(0|tB[g+(r<<3)>>2],0|tB[g+(r<<3)+4>>2],o^f^m|0,N^wB|0),c=0|Qg(0|N,0|wB,0|y,0|c),G=0|Qg(0|c,0|wB,(F^H)&d^F|0,(G^b)&Y^G|0),I=0|Qg(0|G,0|wB,0|a,0|I),a=wB,G=0|Qg(0|I,0|a,0|tB[B+40>>2],0|tB[B+40+4>>2]),F=wB,tB[B+40>>2]=G,tB[B+40+4>>2]=F,c=0|HI(u,_,28),y=wB,N=0|HI(u,_,34),y^=wB,m=0|HI(u,_,39),y=0|Qg(0|I,0|a,N^c^m|0,y^wB|0),D=0|Qg(0|y,0|wB,(l|h)&u|l&h|0,(D|p)&_|D&p|0),l=wB,tB[B+8>>2]=D,tB[B+8+4>>2]=l,y=0|HI(G,F,14),m=wB,c=0|HI(G,F,18),m^=wB,N=0|HI(G,F,41),a=7|w,I=0|tB[464+(a<<3)>>2],f=0|tB[464+(a<<3)+4>>2],o=0|tB[B>>2],C=0|tB[B+4>>2],m=0|Qg(0|tB[g+(a<<3)>>2],0|tB[g+(a<<3)+4>>2],c^y^N|0,m^wB|0),f=0|Qg(0|m,0|wB,0|I,0|f),b=0|Qg(0|f,0|wB,(H^d)&G^H|0,(b^Y)&F^b|0),C=0|Qg(0|b,0|wB,0|o,0|C),o=wB,b=0|Qg(0|C,0|o,0|tB[B+32>>2],0|tB[B+32+4>>2]),H=wB,tB[B+32>>2]=b,tB[B+32+4>>2]=H,f=0|HI(D,l,28),I=wB,m=0|HI(D,l,34),I^=wB,N=0|HI(D,l,39),I=0|Qg(0|C,0|o,m^f^N|0,I^wB|0),p=0|Qg(0|I,0|wB,(h|u)&D|h&u|0,(p|_)&l|p&_|0),h=wB,tB[B>>2]=p,tB[B+4>>2]=h,I=0|HI(b,H,14),N=wB,f=0|HI(b,H,18),N^=wB,m=0|HI(b,H,41),o=8|w,C=0|tB[464+(o<<3)>>2],y=0|tB[464+(o<<3)+4>>2],c=0|tB[B+56>>2],i=0|tB[B+56+4>>2],N=0|Qg(0|tB[g+(o<<3)>>2],0|tB[g+(o<<3)+4>>2],f^I^m|0,N^wB|0),y=0|Qg(0|N,0|wB,0|C,0|y),Y=0|Qg(0|y,0|wB,(d^G)&b^d|0,(Y^F)&H^Y|0),i=0|Qg(0|Y,0|wB,0|c,0|i),c=wB,Y=0|Qg(0|i,0|c,0|tB[B+24>>2],0|tB[B+24+4>>2]),d=wB,tB[B+24>>2]=Y,tB[B+24+4>>2]=d,y=0|HI(p,h,28),C=wB,N=0|HI(p,h,34),C^=wB,m=0|HI(p,h,39),C=0|Qg(0|i,0|c,N^y^m|0,C^wB|0),_=0|Qg(0|C,0|wB,(u|D)&p|u&D|0,(_|l)&h|_&l|0),u=wB,tB[B+56>>2]=_,tB[B+56+4>>2]=u,C=0|HI(Y,d,14),m=wB,y=0|HI(Y,d,18),m^=wB,N=0|HI(Y,d,41),c=9|w,i=0|tB[464+(c<<3)>>2],I=0|tB[464+(c<<3)+4>>2],f=0|tB[B+48>>2],s=0|tB[B+48+4>>2],m=0|Qg(0|tB[g+(c<<3)>>2],0|tB[g+(c<<3)+4>>2],y^C^N|0,m^wB|0),I=0|Qg(0|m,0|wB,0|i,0|I),F=0|Qg(0|I,0|wB,(G^b)&Y^G|0,(F^H)&d^F|0),s=0|Qg(0|F,0|wB,0|f,0|s),f=wB,F=0|Qg(0|s,0|f,0|tB[B+16>>2],0|tB[B+16+4>>2]),G=wB,tB[B+16>>2]=F,tB[B+16+4>>2]=G,I=0|HI(_,u,28),i=wB,m=0|HI(_,u,34),i^=wB,N=0|HI(_,u,39),i=0|Qg(0|s,0|f,m^I^N|0,i^wB|0),l=0|Qg(0|i,0|wB,(D|p)&_|D&p|0,(l|h)&u|l&h|0),D=wB,tB[B+48>>2]=l,tB[B+48+4>>2]=D,i=0|HI(F,G,14),N=wB,I=0|HI(F,G,18),N^=wB,m=0|HI(F,G,41),f=10|w,s=0|tB[464+(f<<3)>>2],C=0|tB[464+(f<<3)+4>>2],y=0|tB[B+40>>2],k=0|tB[B+40+4>>2],N=0|Qg(0|tB[g+(f<<3)>>2],0|tB[g+(f<<3)+4>>2],I^i^m|0,N^wB|0),C=0|Qg(0|N,0|wB,0|s,0|C),H=0|Qg(0|C,0|wB,(b^Y)&F^b|0,(H^d)&G^H|0),k=0|Qg(0|H,0|wB,0|y,0|k),y=wB,H=0|Qg(0|k,0|y,0|tB[B+8>>2],0|tB[B+8+4>>2]),b=wB,tB[B+8>>2]=H,tB[B+8+4>>2]=b,C=0|HI(l,D,28),s=wB,N=0|HI(l,D,34),s^=wB,m=0|HI(l,D,39),s=0|Qg(0|k,0|y,N^C^m|0,s^wB|0),h=0|Qg(0|s,0|wB,(p|_)&l|p&_|0,(h|u)&D|h&u|0),p=wB,tB[B+40>>2]=h,tB[B+40+4>>2]=p,s=0|HI(H,b,14),m=wB,C=0|HI(H,b,18),m^=wB,N=0|HI(H,b,41),y=11|w,k=0|tB[464+(y<<3)>>2],i=0|tB[464+(y<<3)+4>>2],I=0|tB[B+32>>2],U=0|tB[B+32+4>>2],m=0|Qg(0|tB[g+(y<<3)>>2],0|tB[g+(y<<3)+4>>2],C^s^N|0,m^wB|0),i=0|Qg(0|m,0|wB,0|k,0|i),d=0|Qg(0|i,0|wB,(Y^F)&H^Y|0,(d^G)&b^d|0),U=0|Qg(0|d,0|wB,0|I,0|U),I=wB,d=0|Qg(0|U,0|I,0|tB[B>>2],0|tB[B+4>>2]),Y=wB,tB[B>>2]=d,tB[B+4>>2]=Y,i=0|HI(h,p,28),k=wB,m=0|HI(h,p,34),k^=wB,N=0|HI(h,p,39),k=0|Qg(0|U,0|I,m^i^N|0,k^wB|0),u=0|Qg(0|k,0|wB,(_|l)&h|_&l|0,(u|D)&p|u&D|0),_=wB,tB[B+32>>2]=u,tB[B+32+4>>2]=_,k=0|HI(d,Y,14),N=wB,i=0|HI(d,Y,18),N^=wB,m=0|HI(d,Y,41),I=12|w,U=0|tB[464+(I<<3)>>2],s=0|tB[464+(I<<3)+4>>2],C=0|tB[B+24>>2],v=0|tB[B+24+4>>2],N=0|Qg(0|tB[g+(I<<3)>>2],0|tB[g+(I<<3)+4>>2],i^k^m|0,N^wB|0),s=0|Qg(0|N,0|wB,0|U,0|s),G=0|Qg(0|s,0|wB,(F^H)&d^F|0,(G^b)&Y^G|0),v=0|Qg(0|G,0|wB,0|C,0|v),C=wB,G=0|Qg(0|v,0|C,0|tB[B+56>>2],0|tB[B+56+4>>2]),F=wB,tB[B+56>>2]=G,tB[B+56+4>>2]=F,s=0|HI(u,_,28),U=wB,N=0|HI(u,_,34),U^=wB,m=0|HI(u,_,39),U=0|Qg(0|v,0|C,N^s^m|0,U^wB|0),D=0|Qg(0|U,0|wB,(l|h)&u|l&h|0,(D|p)&_|D&p|0),l=wB,tB[B+24>>2]=D,tB[B+24+4>>2]=l,U=0|HI(G,F,14),m=wB,s=0|HI(G,F,18),m^=wB,N=0|HI(G,F,41),C=13|w,v=0|tB[464+(C<<3)>>2],k=0|tB[464+(C<<3)+4>>2],i=0|tB[B+16>>2],R=0|tB[B+16+4>>2],m=0|Qg(0|tB[g+(C<<3)>>2],0|tB[g+(C<<3)+4>>2],s^U^N|0,m^wB|0),k=0|Qg(0|m,0|wB,0|v,0|k),b=0|Qg(0|k,0|wB,(H^d)&G^H|0,(b^Y)&F^b|0),R=0|Qg(0|b,0|wB,0|i,0|R),i=wB,b=0|Qg(0|R,0|i,0|tB[B+48>>2],0|tB[B+48+4>>2]),H=wB,tB[B+48>>2]=b,tB[B+48+4>>2]=H,k=0|HI(D,l,28),v=wB,m=0|HI(D,l,34),v^=wB,N=0|HI(D,l,39),v=0|Qg(0|R,0|i,m^k^N|0,v^wB|0),p=0|Qg(0|v,0|wB,(h|u)&D|h&u|0,(p|_)&l|p&_|0),h=wB,tB[B+16>>2]=p,tB[B+16+4>>2]=h,v=0|HI(b,H,14),N=wB,k=0|HI(b,H,18),N^=wB,m=0|HI(b,H,41),i=14|w,R=0|tB[464+(i<<3)>>2],U=0|tB[464+(i<<3)+4>>2],s=0|tB[B+8>>2],S=0|tB[B+8+4>>2],N=0|Qg(0|tB[g+(i<<3)>>2],0|tB[g+(i<<3)+4>>2],k^v^m|0,N^wB|0),U=0|Qg(0|N,0|wB,0|R,0|U),Y=0|Qg(0|U,0|wB,(d^G)&b^d|0,(Y^F)&H^Y|0),S=0|Qg(0|Y,0|wB,0|s,0|S),s=wB,Y=0|Qg(0|S,0|s,0|tB[B+40>>2],0|tB[B+40+4>>2]),d=wB,tB[B+40>>2]=Y,tB[B+40+4>>2]=d,U=0|HI(p,h,28),R=wB,N=0|HI(p,h,34),R^=wB,m=0|HI(p,h,39),R=0|Qg(0|S,0|s,N^U^m|0,R^wB|0),_=0|Qg(0|R,0|wB,(u|D)&p|u&D|0,(_|l)&h|_&l|0),u=wB,tB[B+8>>2]=_,tB[B+8+4>>2]=u,R=0|HI(Y,d,14),m=wB,U=0|HI(Y,d,18),m^=wB,N=0|HI(Y,d,41),s=15|w,S=0|tB[464+(s<<3)>>2],v=0|tB[464+(s<<3)+4>>2],k=0|tB[B>>2],M=0|tB[B+4>>2],m=0|Qg(0|tB[g+(s<<3)>>2],0|tB[g+(s<<3)+4>>2],U^R^N|0,m^wB|0),v=0|Qg(0|m,0|wB,0|S,0|v),F=0|Qg(0|v,0|wB,(G^b)&Y^G|0,(F^H)&d^F|0),M=0|Qg(0|F,0|wB,0|k,0|M),k=wB,F=0|Qg(0|M,0|k,0|tB[B+32>>2],0|tB[B+32+4>>2]),tB[B+32>>2]=F,tB[B+32+4>>2]=wB,F=0|HI(_,u,28),d=wB,H=0|HI(_,u,34),d^=wB,G=0|HI(_,u,39),d=0|Qg(0|M,0|k,H^F^G|0,d^wB|0),h=0|Qg(0|d,0|wB,(D|p)&_|D&p|0,(l|h)&u|l&h|0),tB[B>>2]=h,tB[B+4>>2]=wB,64==(0|w)){I=0;break}if(S=0|tB[g+(i<<3)>>2],b=0|tB[g+(i<<3)+4>>2],R=0|HI(S,b,19),G=wB,Y=0|HI(S,b,61),v=wB,b=0|WI(0|S,0|b,6),v=0|Qg(b^R^Y|0,wB^G^v|0,0|tB[g+(c<<3)>>2],0|tB[g+(c<<3)+4>>2]),G=wB,Y=0|tB[g+(e<<3)>>2],R=0|tB[g+(e<<3)+4>>2],b=0|HI(Y,R,1),S=wB,M=0|HI(Y,R,8),m=wB,H=0|WI(0|Y,0|R,7),m^=wB^S,S=g+(w<<3)|0,S=0|Qg(0|v,0|G,0|tB[S>>2],0|tB[S+4>>2]),m=0|Qg(0|S,0|wB,H^b^M|0,0|m),M=wB,w=w+16|0,b=g+(w<<3)|0,tB[b>>2]=m,tB[b+4>>2]=M,b=0|tB[g+(s<<3)>>2],H=0|tB[g+(s<<3)+4>>2],S=0|HI(b,H,19),G=wB,v=0|HI(b,H,61),k=wB,H=0|WI(0|b,0|H,6),k=0|Qg(H^S^v|0,wB^G^k|0,0|tB[g+(e+9<<3)>>2],0|tB[g+(e+9<<3)+4>>2]),G=wB,v=0|tB[g+(e+1<<3)>>2],S=0|tB[g+(e+1<<3)+4>>2],H=0|HI(v,S,1),b=wB,U=0|HI(v,S,8),N=wB,F=0|WI(0|v,0|S,7),N^=wB^b,R=0|Qg(0|k,0|G,0|Y,0|R),N=0|Qg(0|R,0|wB,F^H^U|0,0|N),U=wB,tB[g+(e+16<<3)>>2]=N,tB[g+(e+16<<3)+4>>2]=U,H=0|HI(m,M,19),F=wB,R=0|HI(m,M,61),Y=wB,M=0|WI(0|m,0|M,6),Y=0|Qg(M^H^R|0,wB^F^Y|0,0|tB[g+(y<<3)>>2],0|tB[g+(y<<3)+4>>2]),F=wB,R=0|tB[g+(E<<3)>>2],H=0|tB[g+(E<<3)+4>>2],M=0|HI(R,H,1),m=wB,G=0|HI(R,H,8),k=wB,b=0|WI(0|R,0|H,7),k^=wB^m,S=0|Qg(0|Y,0|F,0|v,0|S),k=0|Qg(0|S,0|wB,b^M^G|0,0|k),G=wB,tB[g+(Q+16<<3)>>2]=k,tB[g+(Q+16<<3)+4>>2]=G,M=0|HI(N,U,19),b=wB,S=0|HI(N,U,61),v=wB,U=0|WI(0|N,0|U,6),v=0|Qg(U^M^S|0,wB^b^v|0,0|tB[g+(E+9<<3)>>2],0|tB[g+(E+9<<3)+4>>2]),b=wB,S=0|tB[g+(E+1<<3)>>2],M=0|tB[g+(E+1<<3)+4>>2],U=0|HI(S,M,1),N=wB,F=0|HI(S,M,8),Y=wB,m=0|WI(0|S,0|M,7),Y^=wB^N,H=0|Qg(0|v,0|b,0|R,0|H),Y=0|Qg(0|H,0|wB,m^U^F|0,0|Y),F=wB,tB[g+(E+16<<3)>>2]=Y,tB[g+(E+16<<3)+4>>2]=F,U=0|HI(k,G,19),m=wB,H=0|HI(k,G,61),R=wB,G=0|WI(0|k,0|G,6),R=0|Qg(G^U^H|0,wB^m^R|0,0|tB[g+(C<<3)>>2],0|tB[g+(C<<3)+4>>2]),m=wB,H=0|tB[g+(t<<3)>>2],U=0|tB[g+(t<<3)+4>>2],G=0|HI(H,U,1),k=wB,b=0|HI(H,U,8),v=wB,N=0|WI(0|H,0|U,7),v^=wB^k,M=0|Qg(0|R,0|m,0|S,0|M),v=0|Qg(0|M,0|wB,N^G^b|0,0|v),b=wB,tB[g+(n+16<<3)>>2]=v,tB[g+(n+16<<3)+4>>2]=b,G=0|HI(Y,F,19),N=wB,M=0|HI(Y,F,61),S=wB,F=0|WI(0|Y,0|F,6),S=0|Qg(F^G^M|0,wB^N^S|0,0|tB[g+(t+9<<3)>>2],0|tB[g+(t+9<<3)+4>>2]),N=wB,M=0|tB[g+(t+1<<3)>>2],G=0|tB[g+(t+1<<3)+4>>2],F=0|HI(M,G,1),Y=wB,m=0|HI(M,G,8),R=wB,k=0|WI(0|M,0|G,7),R^=wB^Y,U=0|Qg(0|S,0|N,0|H,0|U),R=0|Qg(0|U,0|wB,k^F^m|0,0|R),m=wB,tB[g+(t+16<<3)>>2]=R,tB[g+(t+16<<3)+4>>2]=m,F=0|HI(v,b,19),k=wB,U=0|HI(v,b,61),H=wB,b=0|WI(0|v,0|b,6),H=0|Qg(b^F^U|0,wB^k^H|0,0|tB[g+(s<<3)>>2],0|tB[g+(s<<3)+4>>2]),k=wB,U=0|tB[g+(a<<3)>>2],F=0|tB[g+(a<<3)+4>>2],b=0|HI(U,F,1),v=wB,N=0|HI(U,F,8),S=wB,Y=0|WI(0|U,0|F,7),S^=wB^v,G=0|Qg(0|H,0|k,0|M,0|G),S=0|Qg(0|G,0|wB,Y^b^N|0,0|S),N=wB,tB[g+(r+16<<3)>>2]=S,tB[g+(r+16<<3)+4>>2]=N,b=0|HI(R,m,19),Y=wB,G=0|HI(R,m,61),M=wB,m=0|WI(0|R,0|m,6),M=0|Qg(m^b^G|0,wB^Y^M|0,0|tB[g+(a+9<<3)>>2],0|tB[g+(a+9<<3)+4>>2]),Y=wB,G=0|tB[g+(a+1<<3)>>2],b=0|tB[g+(a+1<<3)+4>>2],m=0|HI(G,b,1),R=wB,k=0|HI(G,b,8),H=wB,v=0|WI(0|G,0|b,7),H^=wB^R,F=0|Qg(0|M,0|Y,0|U,0|F),H=0|Qg(0|F,0|wB,v^m^k|0,0|H),k=wB,tB[g+(a+16<<3)>>2]=H,tB[g+(a+16<<3)+4>>2]=k,m=0|HI(S,N,19),v=wB,F=0|HI(S,N,61),U=wB,N=0|WI(0|S,0|N,6),U=0|Qg(N^m^F|0,wB^v^U|0,0|tB[g+(o+9<<3)>>2],0|tB[g+(o+9<<3)+4>>2]),v=wB,F=0|tB[g+(c<<3)>>2],m=0|tB[g+(c<<3)+4>>2],N=0|HI(F,m,1),S=wB,Y=0|HI(F,m,8),M=wB,R=0|WI(0|F,0|m,7),M^=wB^S,b=0|Qg(0|U,0|v,0|G,0|b),M=0|Qg(0|b,0|wB,R^N^Y|0,0|M),Y=wB,tB[g+(o+16<<3)>>2]=M,tB[g+(o+16<<3)+4>>2]=Y,N=0|HI(H,k,19),R=wB,b=0|HI(H,k,61),G=wB,k=0|WI(0|H,0|k,6),G=0|Qg(k^N^b|0,wB^R^G|0,0|tB[g+(c+9<<3)>>2],0|tB[g+(c+9<<3)+4>>2]),R=wB,b=0|tB[g+(c+1<<3)>>2],N=0|tB[g+(c+1<<3)+4>>2],k=0|HI(b,N,1),H=wB,v=0|HI(b,N,8),U=wB,S=0|WI(0|b,0|N,7),U^=wB^H,m=0|Qg(0|G,0|R,0|F,0|m),U=0|Qg(0|m,0|wB,S^k^v|0,0|U),v=wB,tB[g+(c+16<<3)>>2]=U,tB[g+(c+16<<3)+4>>2]=v,k=0|HI(M,Y,19),S=wB,m=0|HI(M,Y,61),F=wB,Y=0|WI(0|M,0|Y,6),F=0|Qg(Y^k^m|0,wB^S^F|0,0|tB[g+(f+9<<3)>>2],0|tB[g+(f+9<<3)+4>>2]),S=wB,m=0|tB[g+(y<<3)>>2],k=0|tB[g+(y<<3)+4>>2],Y=0|HI(m,k,1),M=wB,R=0|HI(m,k,8),G=wB,H=0|WI(0|m,0|k,7),G^=wB^M,N=0|Qg(0|F,0|S,0|b,0|N),G=0|Qg(0|N,0|wB,H^Y^R|0,0|G),R=wB,tB[g+(f+16<<3)>>2]=G,tB[g+(f+16<<3)+4>>2]=R,Y=0|HI(U,v,19),H=wB,N=0|HI(U,v,61),b=wB,v=0|WI(0|U,0|v,6),b=0|Qg(v^Y^N|0,wB^H^b|0,0|tB[g+(y+9<<3)>>2],0|tB[g+(y+9<<3)+4>>2]),H=wB,N=0|tB[g+(y+1<<3)>>2],Y=0|tB[g+(y+1<<3)+4>>2],v=0|HI(N,Y,1),U=wB,S=0|HI(N,Y,8),F=wB,M=0|WI(0|N,0|Y,7),F^=wB^U,k=0|Qg(0|b,0|H,0|m,0|k),F=0|Qg(0|k,0|wB,M^v^S|0,0|F),S=wB,tB[g+(y+16<<3)>>2]=F,tB[g+(y+16<<3)+4>>2]=S,v=0|HI(G,R,19),M=wB,k=0|HI(G,R,61),m=wB,R=0|WI(0|G,0|R,6),m=0|Qg(R^v^k|0,wB^M^m|0,0|tB[g+(I+9<<3)>>2],0|tB[g+(I+9<<3)+4>>2]),M=wB,k=0|tB[g+(C<<3)>>2],v=0|tB[g+(C<<3)+4>>2],R=0|HI(k,v,1),G=wB,H=0|HI(k,v,8),b=wB,U=0|WI(0|k,0|v,7),b^=wB^G,Y=0|Qg(0|m,0|M,0|N,0|Y),b=0|Qg(0|Y,0|wB,U^R^H|0,0|b),H=wB,tB[g+(I+16<<3)>>2]=b,tB[g+(I+16<<3)+4>>2]=H,R=0|HI(F,S,19),I=wB,U=0|HI(F,S,61),Y=wB,S=0|WI(0|F,0|S,6),Y=0|Qg(S^R^U|0,wB^I^Y|0,0|tB[g+(C+9<<3)>>2],0|tB[g+(C+9<<3)+4>>2]),I=wB,U=0|tB[g+(C+1<<3)>>2],R=0|tB[g+(C+1<<3)+4>>2],S=0|HI(U,R,1),F=wB,N=0|HI(U,R,8),M=wB,m=0|WI(0|U,0|R,7),M^=wB^F,v=0|Qg(0|Y,0|I,0|k,0|v),M=0|Qg(0|v,0|wB,m^S^N|0,0|M),N=wB,tB[g+(C+16<<3)>>2]=M,tB[g+(C+16<<3)+4>>2]=N,S=0|HI(b,H,19),m=wB,v=0|HI(b,H,61),k=wB,I=0|WI(0|b,0|H,6),k=0|Qg(I^S^v|0,wB^m^k|0,0|tB[g+(i+9<<3)>>2],0|tB[g+(i+9<<3)+4>>2]),m=wB,v=0|tB[g+(s<<3)>>2],S=0|tB[g+(s<<3)+4>>2],I=0|HI(v,S,1),H=wB,b=0|HI(v,S,8),C=wB,Y=0|WI(0|v,0|S,7),C^=wB^H,R=0|Qg(0|k,0|m,0|U,0|R),C=0|Qg(0|R,0|wB,Y^I^b|0,0|C),tB[g+(i+16<<3)>>2]=C,tB[g+(i+16<<3)+4>>2]=wB,C=0|HI(M,N,19),b=wB,I=0|HI(M,N,61),Y=wB,N=0|WI(0|M,0|N,6),Y=0|Qg(N^C^I|0,wB^b^Y|0,0|tB[g+(s+9<<3)>>2],0|tB[g+(s+9<<3)+4>>2]),b=wB,I=0|tB[g+(s+1<<3)>>2],C=0|tB[g+(s+1<<3)+4>>2],N=0|HI(I,C,1),M=wB,R=0|HI(I,C,8),U=wB,m=0|WI(0|I,0|C,7),U^=wB^M,S=0|Qg(0|Y,0|b,0|v,0|S),U=0|Qg(0|S,0|wB,m^N^R|0,0|U),tB[g+(s+16<<3)>>2]=U,tB[g+(s+16<<3)+4>>2]=wB,(0|w)>=80){I=0;break}}do{R=B+(I<<3)|0,R=0|Qg(0|tB[(U=A+(I<<3)|0)>>2],0|tB[U+4>>2],0|tB[R>>2],0|tB[R+4>>2]),tB[U>>2]=R,tB[U+4>>2]=wB,I=I+1|0}while(8!=(0|I))}function e(A){var I=0,g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0,tA=0,rA=0,aA=0,oA=0,cA=0,fA=0;L=0|vI(0|nB[(A|=0)>>0],0|nB[A+1>>0],0|nB[A+2>>0]),g=0|WI(0|(g=0|zA(A+2|0)),0|wB,5),x=0|WI(0|(x=0|vI(0|nB[A+5>>0],0|nB[A+6>>0],0|nB[A+7>>0])),0|wB,2),V=0|WI(0|(V=0|zA(A+7|0)),0|wB,7),u=0|WI(0|(u=0|zA(A+10|0)),0|wB,4),T=0|WI(0|(T=0|vI(0|nB[A+13>>0],0|nB[A+14>>0],0|nB[A+15>>0])),0|wB,1),J=0|WI(0|(J=0|zA(A+15|0)),0|wB,6),BA=0|WI(0|(BA=0|vI(0|nB[A+18>>0],0|nB[A+19>>0],0|nB[A+20>>0])),0|wB,3),tA=0|vI(0|nB[A+21>>0],0|nB[A+22>>0],0|nB[A+23>>0]),AA=0|WI(0|(AA=0|zA(A+23|0)),0|wB,5),nA=0|WI(0|(nA=0|vI(0|nB[A+26>>0],0|nB[A+27>>0],0|nB[A+28>>0])),0|wB,2),s=0|WI(0|(s=0|zA(A+28|0)),0|wB,7),cA=0|WI(0|(cA=0|zA(A+31|0)),0|wB,4),h=0|WI(0|(h=0|vI(0|nB[A+34>>0],0|nB[A+35>>0],0|nB[A+36>>0])),0|wB,1),_=0|WI(0|(_=0|zA(A+36|0)),0|wB,6),o=0|WI(0|(o=0|vI(0|nB[A+39>>0],0|nB[A+40>>0],0|nB[A+41>>0])),0|wB,3),W=0|vI(0|nB[A+42>>0],0|nB[A+43>>0],0|nB[A+44>>0]),U=0|WI(0|(U=0|zA(A+44|0)),0|wB,5),O=0|WI(0|(O=0|vI(0|nB[A+47>>0],0|nB[A+48>>0],0|nB[A+49>>0])),0|wB,2),fA=0|WI(0|(fA=0|zA(A+49|0)),0|wB,7),l=0|WI(0|(l=0|zA(A+52|0)),0|wB,4),w=0|WI(0|(w=0|vI(0|nB[A+55>>0],0|nB[A+56>>0],0|nB[A+57>>0])),0|wB,1),i=0|WI(0|(i=0|zA(A+57|0)),0|wB,6),e=0|MI(0|(Y=0|WI(0|(Y=0|zA(A+60|0)),0|wB,3)),0|(I=wB),666643,0),B=wB,iA=0|MI(0|Y,0|I,470296,0),n=wB,P=0|MI(0|Y,0|I,654183,0),t=wB,k=0|MI(0|Y,0|I,-997805,-1),S=wB,o=0|Qg(0|(E=0|MI(0|Y,0|I,136657,0)),0|wB,2097151&o|0,0),E=wB,W=0|Qg(0|(I=0|MI(0|Y,0|I,-683901,-1)),0|wB,2097151&W|0,0),I=wB,Y=0|MI(2097151&i|0,0,666643,0),G=wB,y=0|MI(2097151&i|0,0,470296,0),F=wB,C=0|MI(2097151&i|0,0,654183,0),a=wB,d=0|MI(2097151&i|0,0,-997805,-1),b=wB,Z=0|MI(2097151&i|0,0,136657,0),M=wB,i=0|Qg(0|o,0|E,0|(i=0|MI(2097151&i|0,0,-683901,-1)),0|wB),E=wB,o=0|MI(2097151&w|0,0,666643,0),r=wB,v=0|MI(2097151&w|0,0,470296,0),p=wB,D=0|MI(2097151&w|0,0,654183,0),K=wB,rA=0|MI(2097151&w|0,0,-997805,-1),CA=wB,c=0|MI(2097151&w|0,0,136657,0),q=wB,M=0|Qg(0|(S=0|Qg(0|(_=0|Qg(0|(w=0|MI(2097151&w|0,0,-683901,-1)),0|wB,2097151&_|0,0)),0|wB,0|k,0|S)),0|wB,0|Z,0|M),Z=wB,S=0|MI(2097151&l|0,0,666643,0),k=wB,_=0|MI(2097151&l|0,0,470296,0),w=wB,eA=0|MI(2097151&l|0,0,654183,0),Q=wB,R=0|MI(2097151&l|0,0,-997805,-1),f=wB,oA=0|MI(2097151&l|0,0,136657,0),aA=wB,l=0|MI(2097151&l|0,0,-683901,-1),j=wB,H=0|MI(2097151&fA|0,0,666643,0),X=wB,IA=0|MI(2097151&fA|0,0,470296,0),gA=wB,$=0|MI(2097151&fA|0,0,654183,0),z=wB,EA=0|MI(2097151&fA|0,0,-997805,-1),QA=wB,m=0|MI(2097151&fA|0,0,136657,0),N=wB,a=0|Qg(0|(n=0|Qg(0|(CA=0|Qg(0|(aA=0|Qg(0|(cA=0|Qg(0|(fA=0|MI(2097151&fA|0,0,-683901,-1)),0|wB,2097151&cA|0,0)),0|wB,0|oA,0|aA)),0|wB,0|rA,0|CA)),0|wB,0|iA,0|n)),0|wB,0|C,0|a),C=wB,J=0|Qg(0|(n=0|MI(2097151&O|0,0,666643,0)),0|wB,2097151&J|0,0),n=wB,iA=0|MI(2097151&O|0,0,470296,0),CA=wB,k=0|Qg(0|(gA=0|Qg(0|(tA=0|Qg(0|(rA=0|MI(2097151&O|0,0,654183,0)),0|wB,2097151&tA|0,0)),0|wB,0|IA,0|gA)),0|wB,0|S,0|k),S=wB,gA=0|MI(2097151&O|0,0,-997805,-1),IA=wB,G=0|Qg(0|(p=0|Qg(0|(Q=0|Qg(0|(QA=0|Qg(0|(nA=0|Qg(0|(tA=0|MI(2097151&O|0,0,136657,0)),0|wB,2097151&nA|0,0)),0|wB,0|EA,0|QA)),0|wB,0|eA,0|Q)),0|wB,0|v,0|p)),0|wB,0|Y,0|G),Y=wB,O=0|MI(2097151&O|0,0,-683901,-1),p=wB,v=0|WI(0|(v=0|Qg(0|J,0|n,1048576,0)),0|wB,21),Q=wB,X=0|Qg(0|(X=0|Qg(0|(BA=0|Qg(0|iA,0|CA,2097151&BA|0,0)),0|wB,0|H,0|X)),0|wB,0|v,0|Q),H=wB,Q=0|ig(0|J,0|n,0|(Q=0|ZI(0|v,0|Q,21)),0|wB),n=wB,J=0|WI(0|(J=0|Qg(0|k,0|S,1048576,0)),0|wB,21),v=wB,r=0|Qg(0|(r=0|Qg(0|(w=0|Qg(0|(z=0|Qg(0|(AA=0|Qg(0|gA,0|IA,2097151&AA|0,0)),0|wB,0|$,0|z)),0|wB,0|_,0|w)),0|wB,0|o,0|r)),0|wB,0|J,0|v),o=wB,v=0|ZI(0|J,0|v,21),J=wB,w=0|GI(0|(w=0|Qg(0|G,0|Y,1048576,0)),0|wB,21),_=wB,F=0|Qg(0|(F=0|Qg(0|(B=0|Qg(0|(K=0|Qg(0|(f=0|Qg(0|(N=0|Qg(0|(s=0|Qg(0|O,0|p,2097151&s|0,0)),0|wB,0|m,0|N)),0|wB,0|R,0|f)),0|wB,0|D,0|K)),0|wB,0|e,0|B)),0|wB,0|y,0|F)),0|wB,0|w,0|_),y=wB,_=0|ZI(0|w,0|_,21),w=wB,B=0|GI(0|(B=0|Qg(0|a,0|C,1048576,0)),0|wB,21),e=wB,b=0|Qg(0|(b=0|Qg(0|(t=0|Qg(0|(q=0|Qg(0|(h=0|Qg(0|l,0|j,2097151&h|0,0)),0|wB,0|c,0|q)),0|wB,0|P,0|t)),0|wB,0|d,0|b)),0|wB,0|B,0|e),d=wB,e=0|ig(0|a,0|C,0|(e=0|ZI(0|B,0|e,21)),0|wB),C=wB,E=0|Qg(0|i,0|E,0|(a=0|GI(0|(a=0|Qg(0|M,0|Z,1048576,0)),0|wB,21)),0|(B=wB)),i=wB,B=0|ig(0|M,0|Z,0|(B=0|ZI(0|a,0|B,21)),0|wB),Z=wB,U=0|Qg(0|(M=0|GI(0|(M=0|Qg(0|W,0|I,1048576,0)),0|wB,21)),0|(a=wB),2097151&U|0,0),t=wB,a=0|ig(0|W,0|I,0|(a=0|ZI(0|M,0|a,21)),0|wB),I=wB,P=0|ig(0|X,0|H,0|(P=0|ZI(0|(W=0|WI(0|(W=0|Qg(0|X,0|H,1048576,0)),0|wB,21)),0|(M=wB),21)),0|wB),H=wB,c=0|ZI(0|(X=0|GI(0|(X=0|Qg(0|r,0|o,1048576,0)),0|wB,21)),0|(q=wB),21),h=wB,C=0|Qg(0|(j=0|GI(0|(j=0|Qg(0|F,0|y,1048576,0)),0|wB,21)),0|(l=wB),0|e,0|C),e=wB,l=0|ig(0|F,0|y,0|(l=0|ZI(0|j,0|l,21)),0|wB),y=wB,Z=0|Qg(0|(F=0|GI(0|(F=0|Qg(0|b,0|d,1048576,0)),0|wB,21)),0|(j=wB),0|B,0|Z),B=wB,j=0|ig(0|b,0|d,0|(j=0|ZI(0|F,0|j,21)),0|wB),d=wB,I=0|Qg(0|(b=0|GI(0|(b=0|Qg(0|E,0|i,1048576,0)),0|wB,21)),0|(F=wB),0|a,0|I),a=wB,F=0|ig(0|E,0|i,0|(F=0|ZI(0|b,0|F,21)),0|wB),i=wB,T=0|Qg(0|(E=0|MI(0|U,0|t,666643,0)),0|wB,2097151&T|0,0),E=wB,b=0|Qg(0|Q,0|n,0|(b=0|MI(0|U,0|t,470296,0)),0|wB),n=wB,Q=0|Qg(0|P,0|H,0|(Q=0|MI(0|U,0|t,654183,0)),0|wB),H=wB,P=0|MI(0|U,0|t,-997805,-1),K=wB,D=0|MI(0|U,0|t,136657,0),f=wB,w=0|ig(0|(q=0|Qg(0|(Y=0|Qg(0|(t=0|MI(0|U,0|t,-683901,-1)),0|wB,0|G,0|Y)),0|wB,0|X,0|q)),0|wB,0|_,0|w),_=wB,u=0|Qg(0|(q=0|MI(0|I,0|a,666643,0)),0|wB,2097151&u|0,0),q=wB,X=0|Qg(0|T,0|E,0|(X=0|MI(0|I,0|a,470296,0)),0|wB),E=wB,T=0|Qg(0|b,0|n,0|(T=0|MI(0|I,0|a,654183,0)),0|wB),n=wB,b=0|Qg(0|Q,0|H,0|(b=0|MI(0|I,0|a,-997805,-1)),0|wB),H=wB,Q=0|MI(0|I,0|a,136657,0),Y=wB,a=0|MI(0|I,0|a,-683901,-1),I=wB,V=0|Qg(0|(G=0|MI(0|F,0|i,666643,0)),0|wB,2097151&V|0,0),G=wB,t=0|Qg(0|u,0|q,0|(t=0|MI(0|F,0|i,470296,0)),0|wB),q=wB,u=0|Qg(0|X,0|E,0|(u=0|MI(0|F,0|i,654183,0)),0|wB),E=wB,X=0|Qg(0|T,0|n,0|(X=0|MI(0|F,0|i,-997805,-1)),0|wB),n=wB,T=0|Qg(0|b,0|H,0|(T=0|MI(0|F,0|i,136657,0)),0|wB),H=wB,i=0|MI(0|F,0|i,-683901,-1),F=wB,F=0|Qg(0|(Y=0|Qg(0|(K=0|Qg(0|(J=0|ig(0|(S=0|Qg(0|W,0|M,0|k,0|S)),0|wB,0|v,0|J)),0|wB,0|P,0|K)),0|wB,0|Q,0|Y)),0|wB,0|i,0|F),i=wB,x=0|Qg(0|(Y=0|MI(0|Z,0|B,666643,0)),0|wB,2097151&x|0,0),Y=wB,Q=0|Qg(0|V,0|G,0|(Q=0|MI(0|Z,0|B,470296,0)),0|wB),G=wB,V=0|Qg(0|t,0|q,0|(V=0|MI(0|Z,0|B,654183,0)),0|wB),q=wB,t=0|Qg(0|u,0|E,0|(t=0|MI(0|Z,0|B,-997805,-1)),0|wB),E=wB,u=0|Qg(0|X,0|n,0|(u=0|MI(0|Z,0|B,136657,0)),0|wB),n=wB,B=0|Qg(0|T,0|H,0|(B=0|MI(0|Z,0|B,-683901,-1)),0|wB),H=wB,T=0|MI(0|j,0|d,666643,0),Z=wB,X=0|MI(0|j,0|d,470296,0),K=wB,P=0|MI(0|j,0|d,654183,0),J=wB,v=0|MI(0|j,0|d,-997805,-1),S=wB,k=0|MI(0|j,0|d,136657,0),M=wB,d=0|Qg(0|u,0|n,0|(d=0|MI(0|j,0|d,-683901,-1)),0|wB),n=wB,L=0|Qg(0|(u=0|MI(0|C,0|e,666643,0)),0|wB,2097151&L|0,0),u=wB,j=0|MI(0|C,0|e,470296,0),W=wB,K=0|Qg(0|(b=0|Qg(0|x,0|Y,0|(b=0|MI(0|C,0|e,654183,0)),0|wB)),0|wB,0|X,0|K),X=wB,b=0|MI(0|C,0|e,-997805,-1),Y=wB,S=0|Qg(0|(x=0|Qg(0|V,0|q,0|(x=0|MI(0|C,0|e,136657,0)),0|wB)),0|wB,0|v,0|S),v=wB,e=0|MI(0|C,0|e,-683901,-1),C=wB,x=0|GI(0|(x=0|Qg(0|L,0|u,1048576,0)),0|wB,21),q=wB,Z=0|Qg(0|(Z=0|Qg(0|(g=0|Qg(0|j,0|W,2097151&g|0,0)),0|wB,0|T,0|Z)),0|wB,0|x,0|q),T=wB,q=0|ig(0|L,0|u,0|(q=0|ZI(0|x,0|q,21)),0|wB),u=wB,L=0|GI(0|(L=0|Qg(0|K,0|X,1048576,0)),0|wB,21),x=wB,J=0|Qg(0|(J=0|Qg(0|(Y=0|Qg(0|Q,0|G,0|b,0|Y)),0|wB,0|P,0|J)),0|wB,0|L,0|x),P=wB,x=0|ZI(0|L,0|x,21),L=wB,Y=0|GI(0|(Y=0|Qg(0|S,0|v,1048576,0)),0|wB,21),b=wB,M=0|Qg(0|(M=0|Qg(0|(C=0|Qg(0|t,0|E,0|e,0|C)),0|wB,0|k,0|M)),0|wB,0|Y,0|b),k=wB,b=0|ZI(0|Y,0|b,21),Y=wB,H=0|Qg(0|B,0|H,0|(C=0|GI(0|(C=0|Qg(0|d,0|n,1048576,0)),0|wB,21)),0|(e=wB)),B=wB,e=0|ig(0|d,0|n,0|(e=0|ZI(0|C,0|e,21)),0|wB),n=wB,d=0|GI(0|(d=0|Qg(0|F,0|i,1048576,0)),0|wB,21),C=wB,I=0|Qg(0|(I=0|Qg(0|(h=0|ig(0|(o=0|Qg(0|D,0|f,0|r,0|o)),0|wB,0|c,0|h)),0|wB,0|a,0|I)),0|wB,0|d,0|C),a=wB,C=0|ig(0|F,0|i,0|(C=0|ZI(0|d,0|C,21)),0|wB),i=wB,y=0|Qg(0|(F=0|GI(0|(F=0|Qg(0|w,0|_,1048576,0)),0|wB,21)),0|(d=wB),0|l,0|y),l=wB,d=0|ig(0|w,0|_,0|(d=0|ZI(0|F,0|d,21)),0|wB),_=wB,h=0|ZI(0|(w=0|GI(0|(w=0|Qg(0|Z,0|T,1048576,0)),0|wB,21)),0|(F=wB),21),c=wB,f=0|ZI(0|(o=0|GI(0|(o=0|Qg(0|J,0|P,1048576,0)),0|wB,21)),0|(r=wB),21),D=wB,n=0|Qg(0|e,0|n,0|(E=0|GI(0|(E=0|Qg(0|M,0|k,1048576,0)),0|wB,21)),0|(t=wB)),e=wB,t=0|ZI(0|E,0|t,21),E=wB,i=0|Qg(0|C,0|i,0|(G=0|GI(0|(G=0|Qg(0|H,0|B,1048576,0)),0|wB,21)),0|(Q=wB)),C=wB,Q=0|ig(0|H,0|B,0|(Q=0|ZI(0|G,0|Q,21)),0|wB),B=wB,_=0|Qg(0|d,0|_,0|(H=0|GI(0|(H=0|Qg(0|I,0|a,1048576,0)),0|wB,21)),0|(G=wB)),d=wB,G=0|ig(0|I,0|a,0|(G=0|ZI(0|H,0|G,21)),0|wB),a=wB,g=0|ig(0|y,0|l,0|(g=0|ZI(0|(I=0|GI(0|(I=0|Qg(0|y,0|l,1048576,0)),0|wB,21)),0|(H=wB),21)),0|wB),l=wB,y=0|Qg(0|q,0|u,0|(y=0|MI(0|I,0|H,666643,0)),0|wB),u=wB,q=0|MI(0|I,0|H,470296,0),W=wB,j=0|MI(0|I,0|H,654183,0),V=wB,U=0|MI(0|I,0|H,-997805,-1),R=wB,N=0|MI(0|I,0|H,136657,0),m=wB,H=0|MI(0|I,0|H,-683901,-1),I=wB,s=0|GI(0|y,0|u,21),p=wB,c=0|Qg(0|(c=0|ig(0|(T=0|Qg(0|q,0|W,0|Z,0|T)),0|wB,0|h,0|c)),0|wB,0|s,0|p),h=wB,p=0|ig(0|y,0|u,0|(p=0|ZI(0|s,0|p,21)),0|wB),u=wB,y=0|GI(0|c,0|h,21),s=wB,F=0|Qg(0|(F=0|Qg(0|(L=0|ig(0|(X=0|Qg(0|j,0|V,0|K,0|X)),0|wB,0|x,0|L)),0|wB,0|w,0|F)),0|wB,0|y,0|s),w=wB,s=0|ig(0|c,0|h,0|(s=0|ZI(0|y,0|s,21)),0|wB),h=wB,c=0|GI(0|F,0|w,21),y=wB,D=0|Qg(0|(D=0|ig(0|(R=0|Qg(0|J,0|P,0|U,0|R)),0|wB,0|f,0|D)),0|wB,0|c,0|y),f=wB,y=0|ig(0|F,0|w,0|(y=0|ZI(0|c,0|y,21)),0|wB),w=wB,F=0|GI(0|D,0|f,21),c=wB,r=0|Qg(0|(r=0|Qg(0|(Y=0|ig(0|(v=0|Qg(0|N,0|m,0|S,0|v)),0|wB,0|b,0|Y)),0|wB,0|o,0|r)),0|wB,0|F,0|c),o=wB,c=0|ig(0|D,0|f,0|(c=0|ZI(0|F,0|c,21)),0|wB),f=wB,D=0|GI(0|r,0|o,21),F=wB,E=0|Qg(0|(E=0|ig(0|(I=0|Qg(0|M,0|k,0|H,0|I)),0|wB,0|t,0|E)),0|wB,0|D,0|F),t=wB,F=0|ig(0|r,0|o,0|(F=0|ZI(0|D,0|F,21)),0|wB),o=wB,e=0|Qg(0|n,0|e,0|(r=0|GI(0|E,0|t,21)),0|(D=wB)),n=wB,D=0|ig(0|E,0|t,0|(D=0|ZI(0|r,0|D,21)),0|wB),t=wB,B=0|Qg(0|(E=0|GI(0|e,0|n,21)),0|(r=wB),0|Q,0|B),Q=wB,r=0|ig(0|e,0|n,0|(r=0|ZI(0|E,0|r,21)),0|wB),n=wB,C=0|Qg(0|i,0|C,0|(e=0|GI(0|B,0|Q,21)),0|(E=wB)),i=wB,E=0|ig(0|B,0|Q,0|(E=0|ZI(0|e,0|E,21)),0|wB),Q=wB,a=0|Qg(0|(B=0|GI(0|C,0|i,21)),0|(e=wB),0|G,0|a),G=wB,e=0|ig(0|C,0|i,0|(e=0|ZI(0|B,0|e,21)),0|wB),i=wB,d=0|Qg(0|_,0|d,0|(C=0|GI(0|a,0|G,21)),0|(B=wB)),_=wB,B=0|ig(0|a,0|G,0|(B=0|ZI(0|C,0|B,21)),0|wB),G=wB,l=0|Qg(0|(a=0|GI(0|d,0|_,21)),0|(C=wB),0|g,0|l),g=wB,C=0|ig(0|d,0|_,0|(C=0|ZI(0|a,0|C,21)),0|wB),_=wB,I=0|ig(0|l,0|g,0|(I=0|ZI(0|(d=0|GI(0|l,0|g,21)),0|(a=wB),21)),0|wB),g=wB,u=0|Qg(0|(l=0|MI(0|d,0|a,666643,0)),0|wB,0|p,0|u),p=wB,l=0|Qg(0|s,0|h,0|(l=0|MI(0|d,0|a,470296,0)),0|wB),h=wB,s=0|Qg(0|y,0|w,0|(s=0|MI(0|d,0|a,654183,0)),0|wB),w=wB,y=0|Qg(0|c,0|f,0|(y=0|MI(0|d,0|a,-997805,-1)),0|wB),f=wB,c=0|Qg(0|F,0|o,0|(c=0|MI(0|d,0|a,136657,0)),0|wB),o=wB,a=0|Qg(0|D,0|t,0|(a=0|MI(0|d,0|a,-683901,-1)),0|wB),t=wB,h=0|Qg(0|l,0|h,0|(D=0|GI(0|u,0|p,21)),0|(d=wB)),l=wB,d=0|ig(0|u,0|p,0|(d=0|ZI(0|D,0|d,21)),0|wB),p=wB,w=0|Qg(0|s,0|w,0|(u=0|GI(0|h,0|l,21)),0|(D=wB)),s=wB,D=0|ig(0|h,0|l,0|(D=0|ZI(0|u,0|D,21)),0|wB),l=wB,f=0|Qg(0|y,0|f,0|(h=0|GI(0|w,0|s,21)),0|(u=wB)),y=wB,u=0|ig(0|w,0|s,0|(u=0|ZI(0|h,0|u,21)),0|wB),s=wB,o=0|Qg(0|c,0|o,0|(w=0|GI(0|f,0|y,21)),0|(h=wB)),c=wB,h=0|ig(0|f,0|y,0|(h=0|ZI(0|w,0|h,21)),0|wB),y=wB,t=0|Qg(0|a,0|t,0|(f=0|GI(0|o,0|c,21)),0|(w=wB)),a=wB,w=0|ig(0|o,0|c,0|(w=0|ZI(0|f,0|w,21)),0|wB),c=wB,n=0|Qg(0|(o=0|GI(0|t,0|a,21)),0|(f=wB),0|r,0|n),r=wB,f=0|ig(0|t,0|a,0|(f=0|ZI(0|o,0|f,21)),0|wB),a=wB,Q=0|Qg(0|(t=0|GI(0|n,0|r,21)),0|(o=wB),0|E,0|Q),E=wB,o=0|ig(0|n,0|r,0|(o=0|ZI(0|t,0|o,21)),0|wB),r=wB,i=0|Qg(0|(n=0|GI(0|Q,0|E,21)),0|(t=wB),0|e,0|i),e=wB,t=0|ig(0|Q,0|E,0|(t=0|ZI(0|n,0|t,21)),0|wB),E=wB,G=0|Qg(0|(Q=0|GI(0|i,0|e,21)),0|(n=wB),0|B,0|G),B=wB,n=0|ig(0|i,0|e,0|(n=0|ZI(0|Q,0|n,21)),0|wB),e=wB,_=0|Qg(0|(i=0|GI(0|G,0|B,21)),0|(Q=wB),0|C,0|_),C=wB,Q=0|ig(0|G,0|B,0|(Q=0|ZI(0|i,0|Q,21)),0|wB),B=wB,g=0|Qg(0|(G=0|GI(0|_,0|C,21)),0|(i=wB),0|I,0|g),I=wB,i=0|ig(0|_,0|C,0|(i=0|ZI(0|G,0|i,21)),0|wB),C=wB,nB[A>>0]=d,_=0|WI(0|d,0|p,8),nB[A+1>>0]=_,p=0|WI(0|d,0|p,16),d=wB,_=0|ZI(0|D,0|l,5),nB[A+2>>0]=_|p,p=0|WI(0|D,0|l,3),nB[A+3>>0]=p,p=0|WI(0|D,0|l,11),nB[A+4>>0]=p,l=0|WI(0|D,0|l,19),D=wB,p=0|ZI(0|u,0|s,2),nB[A+5>>0]=p|l,l=0|WI(0|u,0|s,6),nB[A+6>>0]=l,s=0|WI(0|u,0|s,14),u=wB,l=0|ZI(0|h,0|y,7),nB[A+7>>0]=l|s,s=0|WI(0|h,0|y,1),nB[A+8>>0]=s,s=0|WI(0|h,0|y,9),nB[A+9>>0]=s,y=0|WI(0|h,0|y,17),h=wB,s=0|ZI(0|w,0|c,4),nB[A+10>>0]=s|y,y=0|WI(0|w,0|c,4),nB[A+11>>0]=y,y=0|WI(0|w,0|c,12),nB[A+12>>0]=y,c=0|WI(0|w,0|c,20),w=wB,y=0|ZI(0|f,0|a,1),nB[A+13>>0]=y|c,c=0|WI(0|f,0|a,7),nB[A+14>>0]=c,a=0|WI(0|f,0|a,15),f=wB,c=0|ZI(0|o,0|r,6),nB[A+15>>0]=c|a,a=0|WI(0|o,0|r,2),nB[A+16>>0]=a,a=0|WI(0|o,0|r,10),nB[A+17>>0]=a,r=0|WI(0|o,0|r,18),o=wB,a=0|ZI(0|t,0|E,3),nB[A+18>>0]=a|r,r=0|WI(0|t,0|E,5),nB[A+19>>0]=r,E=0|WI(0|t,0|E,13),nB[A+20>>0]=E,nB[A+21>>0]=n,E=0|WI(0|n,0|e,8),nB[A+22>>0]=E,e=0|WI(0|n,0|e,16),n=wB,E=0|ZI(0|Q,0|B,5),nB[A+23>>0]=E|e,e=0|WI(0|Q,0|B,3),nB[A+24>>0]=e,e=0|WI(0|Q,0|B,11),nB[A+25>>0]=e,B=0|WI(0|Q,0|B,19),Q=wB,e=0|ZI(0|i,0|C,2),nB[A+26>>0]=e|B,B=0|WI(0|i,0|C,6),nB[A+27>>0]=B,C=0|WI(0|i,0|C,14),i=wB,B=0|ZI(0|g,0|I,7),nB[A+28>>0]=C|B,B=0|WI(0|g,0|I,1),nB[A+29>>0]=B,B=0|WI(0|g,0|I,9),nB[A+30>>0]=B,I=0|WI(0|g,0|I,17),nB[A+31>>0]=I}function Q(A,I,g){A|=0,g|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0,tA=0,rA=0,aA=0,oA=0,cA=0,fA=0,yA=0,wA=0,sA=0,hA=0,lA=0,uA=0,pA=0,DA=0,_A=0,dA=0,GA=0,FA=0,HA=0,kA=0,MA=0,YA=0,bA=0,vA=0,SA=0,mA=0,NA=0,RA=0,UA=0,PA=0,JA=0,LA=0,xA=0,XA=0,KA=0,VA=0,jA=0,TA=0,ZA=0,WA=0,qA=0,OA=0,zA=0,$A=0,AI=0,II=0,gI=0,BI=0,CI=0,iI=0,eI=0,QI=0,EI=0,nI=0,tI=0,rI=0,aI=0,oI=0,cI=0,fI=0,yI=0,wI=0,sI=0,hI=0,lI=0,uI=0,pI=0,DI=0,_I=0,dI=0,FI=0,HI=0,kI=0,YI=0,bI=0,vI=0,SI=0,mI=0,NI=0,RI=0,UI=0,PI=0,JI=0,LI=0,xI=0,XI=0,KI=0,VI=0,jI=0,TI=0,WI=0,qI=0,OI=0,zI=0,$I=0,Ag=0,Ig=0,gg=0,Bg=0,Cg=0,eg=0,Eg=0,ng=0,tg=0,rg=0,ag=0,og=0,cg=0,fg=0,yg=0,wg=0,sg=0,hg=0,lg=0,ug=0,pg=0,Dg=0,_g=0,dg=0,Gg=0,Fg=0,Hg=0,kg=0,Mg=0,Yg=0,bg=0,vg=0,Sg=0,mg=0,Ng=0,Rg=0,Ug=0,Pg=0,Jg=0,Lg=0,xg=0,Xg=0,Kg=0;o=0|tB[(I|=0)>>2],a=0|tB[I+4>>2],n=0|tB[I+8>>2],BA=0|tB[I+12>>2],R=0|tB[I+16>>2],N=0|tB[I+20>>2],i=0|tB[I+24>>2],gA=0|tB[I+28>>2],m=0|tB[I+32>>2],f=0|tB[I+36>>2],b=0|tB[g>>2],Xg=0|tB[g+4>>2],Bg=0|tB[g+8>>2],yI=0|tB[g+12>>2],bA=0|tB[g+16>>2],ag=0|tB[g+20>>2],HI=0|tB[g+24>>2],XA=0|tB[g+28>>2],CA=0|tB[g+32>>2],Kg=0|tB[g+36>>2],Lg=0|MI(0|b,((0|b)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),Jg=wB,dg=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),_g=wB,sI=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),wI=wB,SA=0|MI(0|yI,((0|yI)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),vA=wB,fg=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),cg=wB,bI=0|MI(0|ag,((0|ag)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),YI=wB,jA=0|MI(0|HI,((0|HI)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),VA=wB,QA=0|MI(0|XA,((0|XA)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),eA=wB,P=0|MI(0|CA,((0|CA)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),U=wB,o=0|MI(0|Kg,((0|Kg)<0)<<31>>31|0,0|o,((0|o)<0)<<31>>31|0),t=wB,Cg=0|MI(0|b,((0|b)<0)<<31>>31|0,0|a,((0|a)<0)<<31>>31|0),eg=wB,pI=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,a<<1|0,((a<<1|0)<0)<<31>>31|0),uI=wB,NA=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|a,((0|a)<0)<<31>>31|0),mA=wB,wg=0|MI(0|yI,((0|yI)<0)<<31>>31|0,a<<1|0,((a<<1|0)<0)<<31>>31|0),yg=wB,SI=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|a,((0|a)<0)<<31>>31|0),vI=wB,ZA=0|MI(0|ag,((0|ag)<0)<<31>>31|0,a<<1|0,((a<<1|0)<0)<<31>>31|0),TA=wB,nA=0|MI(0|HI,((0|HI)<0)<<31>>31|0,0|a,((0|a)<0)<<31>>31|0),EA=wB,L=0|MI(0|XA,((0|XA)<0)<<31>>31|0,a<<1|0,((a<<1|0)<0)<<31>>31|0),J=wB,s=0|MI(0|CA,((0|CA)<0)<<31>>31|0,0|a,((0|a)<0)<<31>>31|0),w=wB,a=0|MI(19*Kg|0,0|(g=((19*Kg|0)<0)<<31>>31),a<<1|0,((a<<1|0)<0)<<31>>31|0),c=wB,lI=0|MI(0|b,((0|b)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),hI=wB,JA=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),PA=wB,hg=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),sg=wB,NI=0|MI(0|yI,((0|yI)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),mI=wB,qA=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),WA=wB,rA=0|MI(0|ag,((0|ag)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),tA=wB,X=0|MI(0|HI,((0|HI)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),x=wB,l=0|MI(0|XA,((0|XA)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),h=wB,Fg=0|MI(19*CA|0,0|(iA=((19*CA|0)<0)<<31>>31),0|n,((0|n)<0)<<31>>31|0),Gg=wB,n=0|MI(19*Kg|0,0|g,0|n,((0|n)<0)<<31>>31|0),E=wB,UA=0|MI(0|b,((0|b)<0)<<31>>31|0,0|BA,((0|BA)<0)<<31>>31|0),RA=wB,Dg=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,BA<<1|0,((BA<<1|0)<0)<<31>>31|0),pg=wB,UI=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|BA,((0|BA)<0)<<31>>31|0),RI=wB,zA=0|MI(0|yI,((0|yI)<0)<<31>>31|0,BA<<1|0,((BA<<1|0)<0)<<31>>31|0),OA=wB,oA=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|BA,((0|BA)<0)<<31>>31|0),aA=wB,V=0|MI(0|ag,((0|ag)<0)<<31>>31|0,BA<<1|0,((BA<<1|0)<0)<<31>>31|0),K=wB,p=0|MI(0|HI,((0|HI)<0)<<31>>31|0,0|BA,((0|BA)<0)<<31>>31|0),u=wB,kg=0|MI(19*XA|0,0|(KA=((19*XA|0)<0)<<31>>31),BA<<1|0,((BA<<1|0)<0)<<31>>31|0),Hg=wB,KI=0|MI(19*CA|0,0|iA,0|BA,((0|BA)<0)<<31>>31|0),XI=wB,BA=0|MI(19*Kg|0,0|g,BA<<1|0,((BA<<1|0)<0)<<31>>31|0),C=wB,ug=0|MI(0|b,((0|b)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),lg=wB,xI=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),LI=wB,AI=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),$A=wB,fA=0|MI(0|yI,((0|yI)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),cA=wB,T=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),j=wB,_=0|MI(0|ag,((0|ag)<0)<<31>>31|0,0|R,((0|R)<0)<<31>>31|0),D=wB,Yg=0|MI(19*HI|0,0|(kI=((19*HI|0)<0)<<31>>31),0|R,((0|R)<0)<<31>>31|0),Mg=wB,jI=0|MI(19*XA|0,0|KA,0|R,((0|R)<0)<<31>>31|0),VI=wB,eI=0|MI(19*CA|0,0|iA,0|R,((0|R)<0)<<31>>31|0),iI=wB,R=0|MI(19*Kg|0,0|g,0|R,((0|R)<0)<<31>>31|0),B=wB,JI=0|MI(0|b,((0|b)<0)<<31>>31|0,0|N,((0|N)<0)<<31>>31|0),PI=wB,CI=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,N<<1|0,((N<<1|0)<0)<<31>>31|0),BI=wB,wA=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|N,((0|N)<0)<<31>>31|0),yA=wB,W=0|MI(0|yI,((0|yI)<0)<<31>>31|0,N<<1|0,((N<<1|0)<0)<<31>>31|0),Z=wB,G=0|MI(0|bA,((0|bA)<0)<<31>>31|0,0|N,((0|N)<0)<<31>>31|0),d=wB,vg=0|MI(19*ag|0,0|(og=((19*ag|0)<0)<<31>>31),N<<1|0,((N<<1|0)<0)<<31>>31|0),bg=wB,WI=0|MI(19*HI|0,0|kI,0|N,((0|N)<0)<<31>>31|0),TI=wB,EI=0|MI(19*XA|0,0|KA,N<<1|0,((N<<1|0)<0)<<31>>31|0),QI=wB,_A=0|MI(19*CA|0,0|iA,0|N,((0|N)<0)<<31>>31|0),DA=wB,I=0|MI(19*Kg|0,0|g,N<<1|0,((N<<1|0)<0)<<31>>31|0),N=wB,gI=0|MI(0|b,((0|b)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),II=wB,uA=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),lA=wB,O=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),q=wB,H=0|MI(0|yI,((0|yI)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),F=wB,mg=0|MI(19*bA|0,((19*bA|0)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),Sg=wB,OI=0|MI(19*ag|0,0|og,0|i,((0|i)<0)<<31>>31|0),qI=wB,tI=0|MI(19*HI|0,0|kI,0|i,((0|i)<0)<<31>>31|0),nI=wB,GA=0|MI(19*XA|0,0|KA,0|i,((0|i)<0)<<31>>31|0),dA=wB,r=0|MI(19*CA|0,0|iA,0|i,((0|i)<0)<<31>>31|0),y=wB,i=0|MI(19*Kg|0,0|g,0|i,((0|i)<0)<<31>>31|0),pA=wB,hA=0|MI(0|b,((0|b)<0)<<31>>31|0,0|gA,((0|gA)<0)<<31>>31|0),sA=wB,IA=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,gA<<1|0,((gA<<1|0)<0)<<31>>31|0),AA=wB,M=0|MI(0|Bg,((0|Bg)<0)<<31>>31|0,0|gA,((0|gA)<0)<<31>>31|0),k=wB,Rg=0|MI(19*yI|0,((19*yI|0)<0)<<31>>31|0,gA<<1|0,((gA<<1|0)<0)<<31>>31|0),Ng=wB,$I=0|MI(19*bA|0,((19*bA|0)<0)<<31>>31|0,0|gA,((0|gA)<0)<<31>>31|0),zI=wB,aI=0|MI(19*ag|0,0|og,gA<<1|0,((gA<<1|0)<0)<<31>>31|0),rI=wB,HA=0|MI(19*HI|0,0|kI,0|gA,((0|gA)<0)<<31>>31|0),FA=wB,ng=0|MI(19*XA|0,0|KA,gA<<1|0,((gA<<1|0)<0)<<31>>31|0),Eg=wB,_I=0|MI(19*CA|0,0|iA,0|gA,((0|gA)<0)<<31>>31|0),DI=wB,gA=0|MI(19*Kg|0,0|g,gA<<1|0,((gA<<1|0)<0)<<31>>31|0),Q=wB,$=0|MI(0|b,((0|b)<0)<<31>>31|0,0|m,((0|m)<0)<<31>>31|0),z=wB,S=0|MI(0|Xg,((0|Xg)<0)<<31>>31|0,0|m,((0|m)<0)<<31>>31|0),v=wB,Pg=0|MI(19*Bg|0,((19*Bg|0)<0)<<31>>31|0,0|m,((0|m)<0)<<31>>31|0),Ug=wB,Ig=0|MI(19*yI|0,((19*yI|0)<0)<<31>>31|0,0|m,((0|m)<0)<<31>>31|0),Ag=wB,cI=0|MI(19*bA|0,((19*bA|0)<0)<<31>>31|0,0|m,((0|m)<0)<<31>>31|0),oI=wB,MA=0|MI(19*ag|0,0|og,0|m,((0|m)<0)<<31>>31|0),kA=wB,rg=0|MI(19*HI|0,0|kI,0|m,((0|m)<0)<<31>>31|0),tg=wB,FI=0|MI(19*XA|0,0|KA,0|m,((0|m)<0)<<31>>31|0),dI=wB,xA=0|MI(19*CA|0,0|iA,0|m,((0|m)<0)<<31>>31|0),LA=wB,m=0|MI(19*Kg|0,0|g,0|m,((0|m)<0)<<31>>31|0),e=wB,b=0|MI(0|b,((0|b)<0)<<31>>31|0,0|f,((0|f)<0)<<31>>31|0),Y=wB,Xg=0|MI(19*Xg|0,((19*Xg|0)<0)<<31>>31|0,f<<1|0,((f<<1|0)<0)<<31>>31|0),xg=wB,Bg=0|MI(19*Bg|0,((19*Bg|0)<0)<<31>>31|0,0|f,((0|f)<0)<<31>>31|0),gg=wB,yI=0|MI(19*yI|0,((19*yI|0)<0)<<31>>31|0,f<<1|0,((f<<1|0)<0)<<31>>31|0),fI=wB,bA=0|MI(19*bA|0,((19*bA|0)<0)<<31>>31|0,0|f,((0|f)<0)<<31>>31|0),YA=wB,og=0|MI(19*ag|0,0|og,f<<1|0,((f<<1|0)<0)<<31>>31|0),ag=wB,kI=0|MI(19*HI|0,0|kI,0|f,((0|f)<0)<<31>>31|0),HI=wB,KA=0|MI(19*XA|0,0|KA,f<<1|0,((f<<1|0)<0)<<31>>31|0),XA=wB,iA=0|MI(19*CA|0,0|iA,0|f,((0|f)<0)<<31>>31|0),CA=wB,f=0|MI(19*Kg|0,0|g,f<<1|0,((f<<1|0)<0)<<31>>31|0),g=wB,c=0|Qg(0|(Gg=0|Qg(0|(Hg=0|Qg(0|(Mg=0|Qg(0|(bg=0|Qg(0|(Sg=0|Qg(0|(Ng=0|Qg(0|(Ug=0|Qg(0|(Jg=0|Qg(0|Xg,0|xg,0|Lg,0|Jg)),0|wB,0|Pg,0|Ug)),0|wB,0|Rg,0|Ng)),0|wB,0|mg,0|Sg)),0|wB,0|vg,0|bg)),0|wB,0|Yg,0|Mg)),0|wB,0|kg,0|Hg)),0|wB,0|Fg,0|Gg)),0|wB,0|a,0|c),a=wB,eg=0|Qg(0|dg,0|_g,0|Cg,0|eg),Cg=wB,N=0|Qg(0|(y=0|Qg(0|(Eg=0|Qg(0|(tg=0|Qg(0|(ag=0|Qg(0|(cg=0|Qg(0|(yg=0|Qg(0|(sg=0|Qg(0|(lg=0|Qg(0|Dg,0|pg,0|ug,0|lg)),0|wB,0|hg,0|sg)),0|wB,0|wg,0|yg)),0|wB,0|fg,0|cg)),0|wB,0|og,0|ag)),0|wB,0|rg,0|tg)),0|wB,0|ng,0|Eg)),0|wB,0|r,0|y)),0|wB,0|I,0|N),I=wB,y=0|GI(0|(y=0|Qg(0|c,0|a,33554432,0)),0|wB,26),r=wB,E=0|Qg(0|(E=0|Qg(0|(XI=0|Qg(0|(VI=0|Qg(0|(TI=0|Qg(0|(qI=0|Qg(0|(zI=0|Qg(0|(Ag=0|Qg(0|(gg=0|Qg(0|eg,0|Cg,0|Bg,0|gg)),0|wB,0|Ig,0|Ag)),0|wB,0|$I,0|zI)),0|wB,0|OI,0|qI)),0|wB,0|WI,0|TI)),0|wB,0|jI,0|VI)),0|wB,0|KI,0|XI)),0|wB,0|n,0|E)),0|wB,0|y,0|r),n=wB,r=0|ig(0|c,0|a,0|(r=0|ZI(0|y,0|r,26)),0|wB),a=wB,c=0|GI(0|(c=0|Qg(0|N,0|I,33554432,0)),0|wB,26),y=wB,pA=0|Qg(0|(pA=0|Qg(0|(DI=0|Qg(0|(dI=0|Qg(0|(HI=0|Qg(0|(YI=0|Qg(0|(vI=0|Qg(0|(mI=0|Qg(0|(RI=0|Qg(0|(PI=0|Qg(0|xI,0|LI,0|JI,0|PI)),0|wB,0|UI,0|RI)),0|wB,0|NI,0|mI)),0|wB,0|SI,0|vI)),0|wB,0|bI,0|YI)),0|wB,0|kI,0|HI)),0|wB,0|FI,0|dI)),0|wB,0|_I,0|DI)),0|wB,0|i,0|pA)),0|wB,0|c,0|y),i=wB,y=0|ig(0|N,0|I,0|(y=0|ZI(0|c,0|y,26)),0|wB),I=wB,N=0|GI(0|(N=0|Qg(0|E,0|n,16777216,0)),0|wB,25),c=wB,C=0|Qg(0|(C=0|Qg(0|(iI=0|Qg(0|(QI=0|Qg(0|(nI=0|Qg(0|(rI=0|Qg(0|(oI=0|Qg(0|(fI=0|Qg(0|(wI=0|Qg(0|(hI=0|Qg(0|pI,0|uI,0|lI,0|hI)),0|wB,0|sI,0|wI)),0|wB,0|yI,0|fI)),0|wB,0|cI,0|oI)),0|wB,0|aI,0|rI)),0|wB,0|tI,0|nI)),0|wB,0|EI,0|QI)),0|wB,0|eI,0|iI)),0|wB,0|BA,0|C)),0|wB,0|N,0|c),BA=wB,c=0|ig(0|E,0|n,0|(c=0|ZI(0|N,0|c,25)),0|wB),n=wB,E=0|GI(0|(E=0|Qg(0|pA,0|i,16777216,0)),0|wB,25),N=wB,Q=0|Qg(0|(Q=0|Qg(0|(LA=0|Qg(0|(XA=0|Qg(0|(VA=0|Qg(0|(TA=0|Qg(0|(WA=0|Qg(0|(OA=0|Qg(0|($A=0|Qg(0|(II=0|Qg(0|CI,0|BI,0|gI,0|II)),0|wB,0|AI,0|$A)),0|wB,0|zA,0|OA)),0|wB,0|qA,0|WA)),0|wB,0|ZA,0|TA)),0|wB,0|jA,0|VA)),0|wB,0|KA,0|XA)),0|wB,0|xA,0|LA)),0|wB,0|gA,0|Q)),0|wB,0|E,0|N),gA=wB,N=0|ig(0|pA,0|i,0|(N=0|ZI(0|E,0|N,25)),0|wB),i=wB,pA=0|GI(0|(pA=0|Qg(0|C,0|BA,33554432,0)),0|wB,26),E=wB,B=0|Qg(0|(B=0|Qg(0|(DA=0|Qg(0|(dA=0|Qg(0|(FA=0|Qg(0|(kA=0|Qg(0|(YA=0|Qg(0|(vA=0|Qg(0|(mA=0|Qg(0|(RA=0|Qg(0|JA,0|PA,0|UA,0|RA)),0|wB,0|NA,0|mA)),0|wB,0|SA,0|vA)),0|wB,0|bA,0|YA)),0|wB,0|MA,0|kA)),0|wB,0|HA,0|FA)),0|wB,0|GA,0|dA)),0|wB,0|_A,0|DA)),0|wB,0|R,0|B)),0|wB,0|pA,0|E),R=wB,E=0|ig(0|C,0|BA,0|(E=0|ZI(0|pA,0|E,26)),0|wB),BA=0|GI(0|(BA=0|Qg(0|Q,0|gA,33554432,0)),0|wB,26),C=wB,e=0|Qg(0|(e=0|Qg(0|(CA=0|Qg(0|(eA=0|Qg(0|(EA=0|Qg(0|(tA=0|Qg(0|(aA=0|Qg(0|(cA=0|Qg(0|(yA=0|Qg(0|(sA=0|Qg(0|uA,0|lA,0|hA,0|sA)),0|wB,0|wA,0|yA)),0|wB,0|fA,0|cA)),0|wB,0|oA,0|aA)),0|wB,0|rA,0|tA)),0|wB,0|nA,0|EA)),0|wB,0|QA,0|eA)),0|wB,0|iA,0|CA)),0|wB,0|m,0|e)),0|wB,0|BA,0|C),m=wB,C=0|ig(0|Q,0|gA,0|(C=0|ZI(0|BA,0|C,26)),0|wB),I=0|Qg(0|(gA=0|GI(0|(gA=0|Qg(0|B,0|R,16777216,0)),0|wB,25)),0|(Q=wB),0|y,0|I),y=wB,Q=0|ig(0|B,0|R,0|(Q=0|ZI(0|gA,0|Q,25)),0|wB),R=0|GI(0|(R=0|Qg(0|e,0|m,16777216,0)),0|wB,25),B=wB,g=0|Qg(0|(g=0|Qg(0|(U=0|Qg(0|(J=0|Qg(0|(x=0|Qg(0|(K=0|Qg(0|(j=0|Qg(0|(Z=0|Qg(0|(q=0|Qg(0|(z=0|Qg(0|IA,0|AA,0|$,0|z)),0|wB,0|O,0|q)),0|wB,0|W,0|Z)),0|wB,0|T,0|j)),0|wB,0|V,0|K)),0|wB,0|X,0|x)),0|wB,0|L,0|J)),0|wB,0|P,0|U)),0|wB,0|f,0|g)),0|wB,0|R,0|B),f=wB,B=0|ig(0|e,0|m,0|(B=0|ZI(0|R,0|B,25)),0|wB),i=0|Qg(0|N,0|i,0|(m=0|GI(0|(m=0|Qg(0|I,0|y,33554432,0)),0|wB,26)),0|(e=wB)),e=0|ig(0|I,0|y,0|(e=0|ZI(0|m,0|e,26)),0|wB),y=0|GI(0|(y=0|Qg(0|g,0|f,33554432,0)),0|wB,26),I=wB,t=0|Qg(0|(t=0|Qg(0|(w=0|Qg(0|(h=0|Qg(0|(u=0|Qg(0|(D=0|Qg(0|(d=0|Qg(0|(F=0|Qg(0|(k=0|Qg(0|(Y=0|Qg(0|S,0|v,0|b,0|Y)),0|wB,0|M,0|k)),0|wB,0|H,0|F)),0|wB,0|G,0|d)),0|wB,0|_,0|D)),0|wB,0|p,0|u)),0|wB,0|l,0|h)),0|wB,0|s,0|w)),0|wB,0|o,0|t)),0|wB,0|y,0|I),o=wB,I=0|ig(0|g,0|f,0|(I=0|ZI(0|y,0|I,26)),0|wB),a=0|Qg(0|(y=0|MI(0|(f=0|GI(0|(f=0|Qg(0|t,0|o,16777216,0)),0|wB,25)),0|(g=wB),19,0)),0|wB,0|r,0|a),r=wB,g=0|ig(0|t,0|o,0|(g=0|ZI(0|f,0|g,25)),0|wB),n=0|Qg(0|c,0|n,0|(o=0|GI(0|(o=0|Qg(0|a,0|r,33554432,0)),0|wB,26)),0|(t=wB)),t=0|ig(0|a,0|r,0|(t=0|ZI(0|o,0|t,26)),0|wB),tB[A>>2]=t,tB[A+4>>2]=n,tB[A+8>>2]=E,tB[A+12>>2]=Q,tB[A+16>>2]=e,tB[A+20>>2]=i,tB[A+24>>2]=C,tB[A+28>>2]=B,tB[A+32>>2]=I,tB[A+36>>2]=g}function E(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0,tA=0,rA=0,aA=0,oA=0,cA=0,fA=0,yA=0,wA=0,sA=0,hA=0,lA=0,uA=0,pA=0,DA=0,_A=0,dA=0,GA=0,FA=0,HA=0,kA=0,MA=0,YA=0,bA=0,vA=0,SA=0,mA=0,NA=0,RA=0,UA=0,PA=0,JA=0,LA=0,xA=0,XA=0,KA=0,VA=0,jA=0,TA=0,ZA=0,WA=0,qA=0,OA=0,zA=0,$A=0,AI=0,II=0,gI=0;t=0|tB[(I|=0)>>2],a=0|tB[I+4>>2],n=0|tB[I+8>>2],C=0|tB[I+12>>2],h=0|tB[I+16>>2],s=0|tB[I+20>>2],i=0|tB[I+24>>2],l=0|tB[I+28>>2],w=0|tB[I+32>>2],f=0|tB[I+36>>2],AI=0|MI(0|t,((0|t)<0)<<31>>31|0,0|t,((0|t)<0)<<31>>31|0),$A=wB,KA=0|MI(t<<1|0,0|(o=((t<<1|0)<0)<<31>>31),0|a,((0|a)<0)<<31>>31|0),XA=wB,UA=0|MI(0|n,((0|n)<0)<<31>>31|0,t<<1|0,0|o),RA=wB,HA=0|MI(0|C,((0|C)<0)<<31>>31|0,t<<1|0,0|o),FA=wB,yA=0|MI(0|h,((0|h)<0)<<31>>31|0,t<<1|0,0|o),fA=wB,eA=0|MI(0|s,((0|s)<0)<<31>>31|0,t<<1|0,0|o),iA=wB,q=0|MI(0|i,((0|i)<0)<<31>>31|0,t<<1|0,0|o),W=wB,J=0|MI(0|l,((0|l)<0)<<31>>31|0,t<<1|0,0|o),P=wB,M=0|MI(0|w,((0|w)<0)<<31>>31|0,t<<1|0,0|o),k=wB,o=0|MI(0|f,((0|f)<0)<<31>>31|0,t<<1|0,0|o),t=wB,NA=0|MI(a<<1|0,0|(c=((a<<1|0)<0)<<31>>31),0|a,((0|a)<0)<<31>>31|0),mA=wB,GA=0|MI(a<<1|0,0|c,0|n,((0|n)<0)<<31>>31|0),dA=wB,lA=0|MI(C<<1|0,0|(u=((C<<1|0)<0)<<31>>31),a<<1|0,0|c),hA=wB,tA=0|MI(0|h,((0|h)<0)<<31>>31|0,a<<1|0,0|c),nA=wB,z=0|MI(s<<1|0,((s<<1|0)<0)<<31>>31|0,a<<1|0,0|c),O=wB,x=0|MI(0|i,((0|i)<0)<<31>>31|0,a<<1|0,0|c),L=wB,b=0|MI(l<<1|0,((l<<1|0)<0)<<31>>31|0,a<<1|0,0|c),Y=wB,r=0|MI(0|w,((0|w)<0)<<31>>31|0,a<<1|0,0|c),y=wB,c=0|MI(38*f|0,0|(I=((38*f|0)<0)<<31>>31),a<<1|0,0|c),a=wB,sA=0|MI(0|n,((0|n)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),wA=wB,EA=0|MI(n<<1|0,((n<<1|0)<0)<<31>>31|0,0|C,((0|C)<0)<<31>>31|0),QA=wB,AA=0|MI(0|h,((0|h)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),$=wB,j=0|MI(0|s,((0|s)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),V=wB,U=0|MI(0|i,((0|i)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),R=wB,_=0|MI(0|l,((0|l)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),D=wB,ZA=0|MI(19*w|0,0|(Z=((19*w|0)<0)<<31>>31),n<<1|0,((n<<1|0)<0)<<31>>31|0),TA=wB,n=0|MI(38*f|0,0|I,0|n,((0|n)<0)<<31>>31|0),E=wB,gA=0|MI(C<<1|0,0|u,0|C,((0|C)<0)<<31>>31|0),IA=wB,K=0|MI(C<<1|0,0|u,0|h,((0|h)<0)<<31>>31|0),X=wB,S=0|MI(s<<1|0,((s<<1|0)<0)<<31>>31|0,C<<1|0,0|u),v=wB,H=0|MI(0|i,((0|i)<0)<<31>>31|0,C<<1|0,0|u),F=wB,qA=0|MI(38*l|0,0|(cA=((38*l|0)<0)<<31>>31),C<<1|0,0|u),WA=wB,JA=0|MI(19*w|0,0|Z,C<<1|0,0|u),PA=wB,u=0|MI(38*f|0,0|I,C<<1|0,0|u),C=wB,N=0|MI(0|h,((0|h)<0)<<31>>31|0,0|h,((0|h)<0)<<31>>31|0),m=wB,G=0|MI(h<<1|0,((h<<1|0)<0)<<31>>31|0,0|s,((0|s)<0)<<31>>31|0),d=wB,zA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,h<<1|0,((h<<1|0)<0)<<31>>31|0),OA=wB,xA=0|MI(38*l|0,0|cA,0|h,((0|h)<0)<<31>>31|0),LA=wB,MA=0|MI(19*w|0,0|Z,h<<1|0,((h<<1|0)<0)<<31>>31|0),kA=wB,h=0|MI(38*f|0,0|I,0|h,((0|h)<0)<<31>>31|0),B=wB,gI=0|MI(38*s|0,((38*s|0)<0)<<31>>31|0,0|s,((0|s)<0)<<31>>31|0),II=wB,jA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,s<<1|0,((s<<1|0)<0)<<31>>31|0),VA=wB,bA=0|MI(38*l|0,0|cA,s<<1|0,((s<<1|0)<0)<<31>>31|0),YA=wB,pA=0|MI(19*w|0,0|Z,s<<1|0,((s<<1|0)<0)<<31>>31|0),uA=wB,s=0|MI(38*f|0,0|I,s<<1|0,((s<<1|0)<0)<<31>>31|0),g=wB,SA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),vA=wB,_A=0|MI(38*l|0,0|cA,0|i,((0|i)<0)<<31>>31|0),DA=wB,aA=0|MI(19*w|0,0|Z,i<<1|0,((i<<1|0)<0)<<31>>31|0),rA=wB,i=0|MI(38*f|0,0|I,0|i,((0|i)<0)<<31>>31|0),p=wB,cA=0|MI(38*l|0,0|cA,0|l,((0|l)<0)<<31>>31|0),oA=wB,CA=0|MI(19*w|0,0|Z,l<<1|0,((l<<1|0)<0)<<31>>31|0),BA=wB,l=0|MI(38*f|0,0|I,l<<1|0,((l<<1|0)<0)<<31>>31|0),Q=wB,Z=0|MI(19*w|0,0|Z,0|w,((0|w)<0)<<31>>31|0),T=wB,w=0|MI(38*f|0,0|I,0|w,((0|w)<0)<<31>>31|0),e=wB,f=0|MI(38*f|0,0|I,0|f,((0|f)<0)<<31>>31|0),I=wB,a=0|Qg(0|(TA=0|Qg(0|(WA=0|Qg(0|(OA=0|Qg(0|($A=0|Qg(0|gI,0|II,0|AI,0|$A)),0|wB,0|zA,0|OA)),0|wB,0|qA,0|WA)),0|wB,0|ZA,0|TA)),0|wB,0|c,0|a),c=wB,E=0|Qg(0|(PA=0|Qg(0|(LA=0|Qg(0|(XA=0|Qg(0|jA,0|VA,0|KA,0|XA)),0|wB,0|xA,0|LA)),0|wB,0|JA,0|PA)),0|wB,0|n,0|E),n=wB,C=0|Qg(0|(kA=0|Qg(0|(YA=0|Qg(0|(vA=0|Qg(0|(mA=0|Qg(0|UA,0|RA,0|NA,0|mA)),0|wB,0|SA,0|vA)),0|wB,0|bA,0|YA)),0|wB,0|MA,0|kA)),0|wB,0|u,0|C),u=wB,B=0|Qg(0|(uA=0|Qg(0|(DA=0|Qg(0|(dA=0|Qg(0|HA,0|FA,0|GA,0|dA)),0|wB,0|_A,0|DA)),0|wB,0|pA,0|uA)),0|wB,0|h,0|B),h=wB,g=0|Qg(0|(rA=0|Qg(0|(oA=0|Qg(0|(fA=0|Qg(0|(wA=0|Qg(0|lA,0|hA,0|sA,0|wA)),0|wB,0|yA,0|fA)),0|wB,0|cA,0|oA)),0|wB,0|aA,0|rA)),0|wB,0|s,0|g),s=wB,p=0|Qg(0|(BA=0|Qg(0|(iA=0|Qg(0|(QA=0|Qg(0|tA,0|nA,0|EA,0|QA)),0|wB,0|eA,0|iA)),0|wB,0|CA,0|BA)),0|wB,0|i,0|p),i=wB,Q=0|Qg(0|(T=0|Qg(0|(W=0|Qg(0|(O=0|Qg(0|($=0|Qg(0|gA,0|IA,0|AA,0|$)),0|wB,0|z,0|O)),0|wB,0|q,0|W)),0|wB,0|Z,0|T)),0|wB,0|l,0|Q),l=wB,e=0|Qg(0|(P=0|Qg(0|(L=0|Qg(0|(X=0|Qg(0|j,0|V,0|K,0|X)),0|wB,0|x,0|L)),0|wB,0|J,0|P)),0|wB,0|w,0|e),w=wB,I=0|Qg(0|(k=0|Qg(0|(Y=0|Qg(0|(v=0|Qg(0|(m=0|Qg(0|U,0|R,0|N,0|m)),0|wB,0|S,0|v)),0|wB,0|b,0|Y)),0|wB,0|M,0|k)),0|wB,0|f,0|I),f=wB,t=0|Qg(0|(y=0|Qg(0|(D=0|Qg(0|(d=0|Qg(0|H,0|F,0|G,0|d)),0|wB,0|_,0|D)),0|wB,0|r,0|y)),0|wB,0|o,0|t),o=wB,c=0|ZI(0|a,0|c,1),a=wB,n=0|ZI(0|E,0|n,1),E=wB,u=0|ZI(0|C,0|u,1),C=wB,h=0|ZI(0|B,0|h,1),B=wB,s=0|ZI(0|g,0|s,1),g=wB,i=0|ZI(0|p,0|i,1),p=wB,l=0|ZI(0|Q,0|l,1),Q=wB,w=0|ZI(0|e,0|w,1),e=wB,f=0|ZI(0|I,0|f,1),I=wB,o=0|ZI(0|t,0|o,1),t=wB,E=0|Qg(0|(y=0|GI(0|(y=0|Qg(0|c,0|a,33554432,0)),0|wB,26)),0|(r=wB),0|n,0|E),n=wB,r=0|ig(0|c,0|a,0|(r=0|ZI(0|y,0|r,26)),0|wB),a=wB,p=0|Qg(0|(c=0|GI(0|(c=0|Qg(0|s,0|g,33554432,0)),0|wB,26)),0|(y=wB),0|i,0|p),i=wB,y=0|ig(0|s,0|g,0|(y=0|ZI(0|c,0|y,26)),0|wB),g=wB,C=0|Qg(0|(s=0|GI(0|(s=0|Qg(0|E,0|n,16777216,0)),0|wB,25)),0|(c=wB),0|u,0|C),u=wB,c=0|ig(0|E,0|n,0|(c=0|ZI(0|s,0|c,25)),0|wB),n=wB,Q=0|Qg(0|(E=0|GI(0|(E=0|Qg(0|p,0|i,16777216,0)),0|wB,25)),0|(s=wB),0|l,0|Q),l=wB,s=0|ig(0|p,0|i,0|(s=0|ZI(0|E,0|s,25)),0|wB),i=wB,B=0|Qg(0|(p=0|GI(0|(p=0|Qg(0|C,0|u,33554432,0)),0|wB,26)),0|(E=wB),0|h,0|B),h=wB,E=0|ig(0|C,0|u,0|(E=0|ZI(0|p,0|E,26)),0|wB),e=0|Qg(0|(u=0|GI(0|(u=0|Qg(0|Q,0|l,33554432,0)),0|wB,26)),0|(C=wB),0|w,0|e),w=wB,C=0|ig(0|Q,0|l,0|(C=0|ZI(0|u,0|C,26)),0|wB),g=0|Qg(0|(l=0|GI(0|(l=0|Qg(0|B,0|h,16777216,0)),0|wB,25)),0|(Q=wB),0|y,0|g),y=wB,Q=0|ig(0|B,0|h,0|(Q=0|ZI(0|l,0|Q,25)),0|wB),I=0|Qg(0|(h=0|GI(0|(h=0|Qg(0|e,0|w,16777216,0)),0|wB,25)),0|(B=wB),0|f,0|I),f=wB,B=0|ig(0|e,0|w,0|(B=0|ZI(0|h,0|B,25)),0|wB),i=0|Qg(0|s,0|i,0|(w=0|GI(0|(w=0|Qg(0|g,0|y,33554432,0)),0|wB,26)),0|(e=wB)),e=0|ig(0|g,0|y,0|(e=0|ZI(0|w,0|e,26)),0|wB),t=0|Qg(0|(y=0|GI(0|(y=0|Qg(0|I,0|f,33554432,0)),0|wB,26)),0|(g=wB),0|o,0|t),o=wB,g=0|ig(0|I,0|f,0|(g=0|ZI(0|y,0|g,26)),0|wB),a=0|Qg(0|(y=0|MI(0|(f=0|GI(0|(f=0|Qg(0|t,0|o,16777216,0)),0|wB,25)),0|(I=wB),19,0)),0|wB,0|r,0|a),r=wB,I=0|ig(0|t,0|o,0|(I=0|ZI(0|f,0|I,25)),0|wB),n=0|Qg(0|c,0|n,0|(o=0|GI(0|(o=0|Qg(0|a,0|r,33554432,0)),0|wB,26)),0|(t=wB)),t=0|ig(0|a,0|r,0|(t=0|ZI(0|o,0|t,26)),0|wB),tB[A>>2]=t,tB[A+4>>2]=n,tB[A+8>>2]=E,tB[A+12>>2]=Q,tB[A+16>>2]=e,tB[A+20>>2]=i,tB[A+24>>2]=C,tB[A+28>>2]=B,tB[A+32>>2]=g,tB[A+36>>2]=I}function n(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0,tA=0,rA=0,aA=0,oA=0,cA=0,fA=0,yA=0,wA=0,sA=0,hA=0,lA=0,uA=0,pA=0,DA=0,_A=0,dA=0,GA=0,FA=0,HA=0,kA=0,MA=0,YA=0,bA=0,vA=0,SA=0,mA=0,NA=0,RA=0,UA=0,PA=0,JA=0,LA=0,xA=0,XA=0,KA=0,VA=0,jA=0,TA=0,ZA=0,WA=0,qA=0,OA=0,zA=0,$A=0,AI=0,II=0,gI=0;t=0|tB[(I|=0)>>2],c=0|tB[I+4>>2],n=0|tB[I+8>>2],C=0|tB[I+12>>2],F=0|tB[I+16>>2],g=0|tB[I+20>>2],i=0|tB[I+24>>2],U=0|tB[I+28>>2],d=0|tB[I+32>>2],f=0|tB[I+36>>2],AI=0|MI(0|t,((0|t)<0)<<31>>31|0,0|t,((0|t)<0)<<31>>31|0),$A=wB,bA=0|MI(t<<1|0,0|(o=((t<<1|0)<0)<<31>>31),0|c,((0|c)<0)<<31>>31|0),YA=wB,jA=0|MI(0|n,((0|n)<0)<<31>>31|0,t<<1|0,0|o),VA=wB,KA=0|MI(0|C,((0|C)<0)<<31>>31|0,t<<1|0,0|o),XA=wB,UA=0|MI(0|F,((0|F)<0)<<31>>31|0,t<<1|0,0|o),RA=wB,pA=0|MI(0|g,((0|g)<0)<<31>>31|0,t<<1|0,0|o),uA=wB,CA=0|MI(0|i,((0|i)<0)<<31>>31|0,t<<1|0,0|o),BA=wB,L=0|MI(0|U,((0|U)<0)<<31>>31|0,t<<1|0,0|o),J=wB,k=0|MI(0|d,((0|d)<0)<<31>>31|0,t<<1|0,0|o),H=wB,o=0|MI(0|f,((0|f)<0)<<31>>31|0,t<<1|0,0|o),t=wB,wA=0|MI(c<<1|0,0|(a=((c<<1|0)<0)<<31>>31),0|c,((0|c)<0)<<31>>31|0),sA=wB,$=0|MI(c<<1|0,0|a,0|n,((0|n)<0)<<31>>31|0),AA=wB,xA=0|MI(C<<1|0,0|(P=((C<<1|0)<0)<<31>>31),c<<1|0,0|a),LA=wB,GA=0|MI(0|F,((0|F)<0)<<31>>31|0,c<<1|0,0|a),dA=wB,eA=0|MI(g<<1|0,((g<<1|0)<0)<<31>>31|0,c<<1|0,0|a),iA=wB,X=0|MI(0|i,((0|i)<0)<<31>>31|0,c<<1|0,0|a),x=wB,Y=0|MI(U<<1|0,((U<<1|0)<0)<<31>>31|0,c<<1|0,0|a),M=wB,s=0|MI(0|d,((0|d)<0)<<31>>31|0,c<<1|0,0|a),w=wB,a=0|MI(38*f|0,0|(I=((38*f|0)<0)<<31>>31),c<<1|0,0|a),c=wB,JA=0|MI(0|n,((0|n)<0)<<31>>31|0,0|n,((0|n)<0)<<31>>31|0),PA=wB,_A=0|MI(n<<1|0,((n<<1|0)<0)<<31>>31|0,0|C,((0|C)<0)<<31>>31|0),DA=wB,EA=0|MI(0|F,((0|F)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),QA=wB,T=0|MI(0|g,((0|g)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),j=wB,R=0|MI(0|i,((0|i)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),N=wB,l=0|MI(0|U,((0|U)<0)<<31>>31|0,n<<1|0,((n<<1|0)<0)<<31>>31|0),h=wB,ZA=0|MI(19*d|0,0|(gA=((19*d|0)<0)<<31>>31),n<<1|0,((n<<1|0)<0)<<31>>31|0),TA=wB,n=0|MI(38*f|0,0|I,0|n,((0|n)<0)<<31>>31|0),E=wB,tA=0|MI(C<<1|0,0|P,0|C,((0|C)<0)<<31>>31|0),nA=wB,V=0|MI(C<<1|0,0|P,0|F,((0|F)<0)<<31>>31|0),K=wB,v=0|MI(g<<1|0,((g<<1|0)<0)<<31>>31|0,C<<1|0,0|P),b=wB,_=0|MI(0|i,((0|i)<0)<<31>>31|0,C<<1|0,0|P),D=wB,qA=0|MI(38*U|0,0|(NA=((38*U|0)<0)<<31>>31),C<<1|0,0|P),WA=wB,HA=0|MI(19*d|0,0|gA,C<<1|0,0|P),FA=wB,P=0|MI(38*f|0,0|I,C<<1|0,0|P),C=wB,m=0|MI(0|F,((0|F)<0)<<31>>31|0,0|F,((0|F)<0)<<31>>31|0),S=wB,p=0|MI(F<<1|0,((F<<1|0)<0)<<31>>31|0,0|g,((0|g)<0)<<31>>31|0),u=wB,zA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,F<<1|0,((F<<1|0)<0)<<31>>31|0),OA=wB,MA=0|MI(38*U|0,0|NA,0|F,((0|F)<0)<<31>>31|0),kA=wB,aA=0|MI(19*d|0,0|gA,F<<1|0,((F<<1|0)<0)<<31>>31|0),rA=wB,F=0|MI(38*f|0,0|I,0|F,((0|F)<0)<<31>>31|0),B=wB,gI=0|MI(38*g|0,((38*g|0)<0)<<31>>31|0,0|g,((0|g)<0)<<31>>31|0),II=wB,SA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,g<<1|0,((g<<1|0)<0)<<31>>31|0),vA=wB,cA=0|MI(38*U|0,0|NA,g<<1|0,((g<<1|0)<0)<<31>>31|0),oA=wB,q=0|MI(19*d|0,0|gA,g<<1|0,((g<<1|0)<0)<<31>>31|0),W=wB,g=0|MI(38*f|0,0|I,g<<1|0,((g<<1|0)<0)<<31>>31|0),G=wB,yA=0|MI(19*i|0,((19*i|0)<0)<<31>>31|0,0|i,((0|i)<0)<<31>>31|0),fA=wB,z=0|MI(38*U|0,0|NA,0|i,((0|i)<0)<<31>>31|0),O=wB,r=0|MI(19*d|0,0|gA,i<<1|0,((i<<1|0)<0)<<31>>31|0),y=wB,i=0|MI(38*f|0,0|I,0|i,((0|i)<0)<<31>>31|0),Z=wB,NA=0|MI(38*U|0,0|NA,0|U,((0|U)<0)<<31>>31|0),mA=wB,lA=0|MI(19*d|0,0|gA,U<<1|0,((U<<1|0)<0)<<31>>31|0),hA=wB,U=0|MI(38*f|0,0|I,U<<1|0,((U<<1|0)<0)<<31>>31|0),Q=wB,gA=0|MI(19*d|0,0|gA,0|d,((0|d)<0)<<31>>31|0),IA=wB,d=0|MI(38*f|0,0|I,0|d,((0|d)<0)<<31>>31|0),e=wB,f=0|MI(38*f|0,0|I,0|f,((0|f)<0)<<31>>31|0),I=wB,c=0|Qg(0|(TA=0|Qg(0|(WA=0|Qg(0|(OA=0|Qg(0|($A=0|Qg(0|gI,0|II,0|AI,0|$A)),0|wB,0|zA,0|OA)),0|wB,0|qA,0|WA)),0|wB,0|ZA,0|TA)),0|wB,0|a,0|c),a=wB,sA=0|Qg(0|jA,0|VA,0|wA,0|sA),wA=wB,AA=0|Qg(0|KA,0|XA,0|$,0|AA),$=wB,G=0|Qg(0|(y=0|Qg(0|(mA=0|Qg(0|(RA=0|Qg(0|(PA=0|Qg(0|xA,0|LA,0|JA,0|PA)),0|wB,0|UA,0|RA)),0|wB,0|NA,0|mA)),0|wB,0|r,0|y)),0|wB,0|g,0|G),g=wB,y=0|GI(0|(y=0|Qg(0|c,0|a,33554432,0)),0|wB,26),r=wB,E=0|Qg(0|(E=0|Qg(0|(FA=0|Qg(0|(kA=0|Qg(0|(YA=0|Qg(0|SA,0|vA,0|bA,0|YA)),0|wB,0|MA,0|kA)),0|wB,0|HA,0|FA)),0|wB,0|n,0|E)),0|wB,0|y,0|r),n=wB,r=0|ig(0|c,0|a,0|(r=0|ZI(0|y,0|r,26)),0|wB),a=wB,c=0|GI(0|(c=0|Qg(0|G,0|g,33554432,0)),0|wB,26),y=wB,Z=0|Qg(0|(Z=0|Qg(0|(hA=0|Qg(0|(uA=0|Qg(0|(DA=0|Qg(0|GA,0|dA,0|_A,0|DA)),0|wB,0|pA,0|uA)),0|wB,0|lA,0|hA)),0|wB,0|i,0|Z)),0|wB,0|c,0|y),i=wB,y=0|ig(0|G,0|g,0|(y=0|ZI(0|c,0|y,26)),0|wB),g=wB,G=0|GI(0|(G=0|Qg(0|E,0|n,16777216,0)),0|wB,25),c=wB,C=0|Qg(0|(C=0|Qg(0|(rA=0|Qg(0|(oA=0|Qg(0|(fA=0|Qg(0|sA,0|wA,0|yA,0|fA)),0|wB,0|cA,0|oA)),0|wB,0|aA,0|rA)),0|wB,0|P,0|C)),0|wB,0|G,0|c),P=wB,c=0|ig(0|E,0|n,0|(c=0|ZI(0|G,0|c,25)),0|wB),n=wB,E=0|GI(0|(E=0|Qg(0|Z,0|i,16777216,0)),0|wB,25),G=wB,Q=0|Qg(0|(Q=0|Qg(0|(IA=0|Qg(0|(BA=0|Qg(0|(iA=0|Qg(0|(QA=0|Qg(0|tA,0|nA,0|EA,0|QA)),0|wB,0|eA,0|iA)),0|wB,0|CA,0|BA)),0|wB,0|gA,0|IA)),0|wB,0|U,0|Q)),0|wB,0|E,0|G),U=wB,G=0|ig(0|Z,0|i,0|(G=0|ZI(0|E,0|G,25)),0|wB),i=wB,Z=0|GI(0|(Z=0|Qg(0|C,0|P,33554432,0)),0|wB,26),E=wB,B=0|Qg(0|(B=0|Qg(0|(W=0|Qg(0|(O=0|Qg(0|AA,0|$,0|z,0|O)),0|wB,0|q,0|W)),0|wB,0|F,0|B)),0|wB,0|Z,0|E),F=wB,E=0|ig(0|C,0|P,0|(E=0|ZI(0|Z,0|E,26)),0|wB),P=0|GI(0|(P=0|Qg(0|Q,0|U,33554432,0)),0|wB,26),C=wB,e=0|Qg(0|(e=0|Qg(0|(J=0|Qg(0|(x=0|Qg(0|(K=0|Qg(0|T,0|j,0|V,0|K)),0|wB,0|X,0|x)),0|wB,0|L,0|J)),0|wB,0|d,0|e)),0|wB,0|P,0|C),d=wB,C=0|ig(0|Q,0|U,0|(C=0|ZI(0|P,0|C,26)),0|wB),g=0|Qg(0|(U=0|GI(0|(U=0|Qg(0|B,0|F,16777216,0)),0|wB,25)),0|(Q=wB),0|y,0|g),y=wB,Q=0|ig(0|B,0|F,0|(Q=0|ZI(0|U,0|Q,25)),0|wB),F=0|GI(0|(F=0|Qg(0|e,0|d,16777216,0)),0|wB,25),B=wB,I=0|Qg(0|(I=0|Qg(0|(H=0|Qg(0|(M=0|Qg(0|(b=0|Qg(0|(S=0|Qg(0|R,0|N,0|m,0|S)),0|wB,0|v,0|b)),0|wB,0|Y,0|M)),0|wB,0|k,0|H)),0|wB,0|f,0|I)),0|wB,0|F,0|B),f=wB,B=0|ig(0|e,0|d,0|(B=0|ZI(0|F,0|B,25)),0|wB),i=0|Qg(0|G,0|i,0|(d=0|GI(0|(d=0|Qg(0|g,0|y,33554432,0)),0|wB,26)),0|(e=wB)),e=0|ig(0|g,0|y,0|(e=0|ZI(0|d,0|e,26)),0|wB),y=0|GI(0|(y=0|Qg(0|I,0|f,33554432,0)),0|wB,26),g=wB,t=0|Qg(0|(t=0|Qg(0|(w=0|Qg(0|(h=0|Qg(0|(u=0|Qg(0|_,0|D,0|p,0|u)),0|wB,0|l,0|h)),0|wB,0|s,0|w)),0|wB,0|o,0|t)),0|wB,0|y,0|g),o=wB,g=0|ig(0|I,0|f,0|(g=0|ZI(0|y,0|g,26)),0|wB),a=0|Qg(0|(y=0|MI(0|(f=0|GI(0|(f=0|Qg(0|t,0|o,16777216,0)),0|wB,25)),0|(I=wB),19,0)),0|wB,0|r,0|a),r=wB,I=0|ig(0|t,0|o,0|(I=0|ZI(0|f,0|I,25)),0|wB),n=0|Qg(0|c,0|n,0|(o=0|GI(0|(o=0|Qg(0|a,0|r,33554432,0)),0|wB,26)),0|(t=wB)),t=0|ig(0|a,0|r,0|(t=0|ZI(0|o,0|t,26)),0|wB),tB[A>>2]=t,tB[A+4>>2]=n,tB[A+8>>2]=E,tB[A+12>>2]=Q,tB[A+16>>2]=e,tB[A+20>>2]=i,tB[A+24>>2]=C,tB[A+28>>2]=B,tB[A+32>>2]=g,tB[A+36>>2]=I}function t(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0;var i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0;if(r=0|dI(C|=0),o=wB,i=0|dI(C+8|0),e=wB,B=0|ZI(0|g,0|B,56),C=wB,(I+g+(0-(7&g))|0)==(0|I))f=2037671283^i,E=1952801890^e,a=1886610805^r,n=1936682341^o,Q=1852075885^i,y=1685025377^e,e=1852142177^r,i=1819895653^o;else for(w=I,f=2037671283^i,E=1952801890^e,a=1886610805^r,t=1936682341^o,n=1852075885^i,Q=1685025377^e,e=1852142177^r,i=1819895653^o;;){if(c=0|dI(w),s=wB,l=c^f,E^=s,t=0|Qg(0|a,0|t,0|n,0|Q),y=wB,a=0|kI(n,Q,13),n=wB^y,y=0|kI(t,y,32),f=wB,r=0|Qg(0|l,0|E,0|e,0|i),o=wB,E=0|kI(l,E,16),Q=wB^o,f=0|Qg(E^r|0,0|Q,0|y,0|f),y=wB,Q=0|kI(E^r,Q,21),E=y^wB,o=0|Qg(0|r,0|o,a^t|0,0|n),r=wB,n=0|kI(a^t,n,17),i=wB^r,r=0|kI(o,r,32),e=wB,y=0|Qg(n^o|0,0|i,0|f,0|y),t=wB,i=0|kI(n^o,i,13),o=wB^t,t=0|kI(y,t,32),n=wB,e=0|Qg(0|r,0|e,f^Q|0,0|E),r=wB,E=0|kI(f^Q,E,16),Q=wB^r,n=0|Qg(E^e|0,0|Q,0|t,0|n),t=wB,Q=0|kI(E^e,Q,21),E=t^wB,r=0|Qg(i^y|0,0|o,0|e,0|r),e=wB,o=0|kI(i^y,o,17),y=wB^e,e=0|kI(r,e,32),i=wB,(0|(w=w+8|0))==(I+g+(0-(7&g))|0)){I=I+g+(0-(7&g))|0,f=n^Q,a=n^c,n=t^s,Q=o^r;break}f=n^Q,a=n^c,t^=s,n=o^r,Q=y}switch(7&g){case 7:B=0|ZI(0|rB[I+6>>0],0,48)|B,C|=wB,h=5;break;case 6:h=5;break;case 5:h=6;break;case 4:h=7;break;case 3:h=8;break;case 2:h=9;break;case 1:h=10}5==(0|h)&&(l=0|ZI(0|rB[I+5>>0],0,40),C|=wB,B|=l,h=6),6==(0|h)&&(C=0|rB[I+4>>0]|C,h=7),7==(0|h)&&(B|=l=0|ZI(0|rB[I+3>>0],0,24),C|=wB,h=8),8==(0|h)&&(B|=l=0|ZI(0|rB[I+2>>0],0,16),C|=wB,h=9),9==(0|h)&&(B|=l=0|ZI(0|rB[I+1>>0],0,8),C|=wB,h=10),10==(0|h)&&(B=0|rB[I>>0]|B),w=B^f,g=C^E,o=0|Qg(0|a,0|n,0|Q,0|y),c=wB,f=0|kI(Q,y,13),I=wB^c,c=0|kI(o,c,32),h=wB,s=0|Qg(0|w,0|g,0|e,0|i),l=wB,h=0|Qg((y=0|kI(w,g,16))^s|0,0|(g=wB^l),0|c,0|h),c=wB,g=0|kI(y^s,g,21),y=c^wB,l=0|Qg(0|s,0|l,f^o|0,0|I),s=wB,I=0|kI(f^o,I,17),o=wB^s,s=0|kI(l,s,32),f=wB,c=0|Qg(I^l|0,0|o,0|h,0|c),w=wB,o=0|kI(I^l,o,13),l=wB^w,w=0|kI(c,w,32),I=wB,f=0|Qg(0|s,0|f,h^g|0,0|y),s=wB,I=0|Qg((y=0|kI(h^g,y,16))^f|0,0|(g=wB^s),0|w,0|I),w=wB,g=0|kI(y^f,g,21),y=w^wB,s=0|Qg(o^c|0,0|l,0|f,0|s),f=wB,l=0|kI(o^c,l,17),c=wB^f,f=0|kI(s,f,32),o=wB,w=0|Qg(I^B|0,w^C|0,l^s|0,0|c),h=wB,c=0|kI(l^s,c,13),s=wB^h,h=0|kI(w,h,32),l=wB,o=0|Qg(255^f|0,0|o,I^g|0,0|y),f=wB,l=0|Qg((y=0|kI(I^g,y,16))^o|0,0|(g=wB^f),0|h,0|l),h=wB,g=0|kI(y^o,g,21),y=h^wB,f=0|Qg(0|o,0|f,c^w|0,0|s),o=wB,s=0|kI(c^w,s,17),w=wB^o,o=0|kI(f,o,32),c=wB,h=0|Qg(s^f|0,0|w,0|l,0|h),I=wB,w=0|kI(s^f,w,13),f=wB^I,I=0|kI(h,I,32),s=wB,c=0|Qg(0|o,0|c,l^g|0,0|y),o=wB,s=0|Qg((y=0|kI(l^g,y,16))^c|0,0|(g=wB^o),0|I,0|s),I=wB,g=0|kI(y^c,g,21),y=I^wB,o=0|Qg(w^h|0,0|f,0|c,0|o),c=wB,f=0|kI(w^h,f,17),h=wB^c,c=0|kI(o,c,32),w=wB,I=0|Qg(f^o|0,0|h,0|s,0|I),l=wB,h=0|kI(f^o,h,13),o=wB^l,l=0|kI(I,l,32),f=wB,w=0|Qg(0|c,0|w,s^g|0,0|y),c=wB,f=0|Qg((y=0|kI(s^g,y,16))^w|0,0|(g=wB^c),0|l,0|f),l=wB,g=0|kI(y^w,g,21),y=l^wB,c=0|Qg(h^I|0,0|o,0|w,0|c),w=wB,o=0|kI(h^I,o,17),I=wB^w,w=0|kI(c,w,32),h=wB,l=0|Qg(o^c|0,0|I,0|f,0|l),s=wB,I=0|kI(o^c,I,13),s^=wB,h=0|Qg(0|w,0|h,f^g|0,0|y),w=wB,y=0|kI((y=0|kI(f^g,y,16))^h,wB^w,21),g=wB,w=0|Qg(I^l|0,0|s,0|h,0|w),h=wB,s=0|kI(I^l,s,17),l=wB,oI(A,y^w^s^(I=0|kI(w,h,32)),g^h^l^wB)}function r(A,I,g,B,C){A|=0,I|=0,g|=0;var i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0,j=0,T=0,Z=0,W=0,q=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,CA=0,iA=0,eA=0,QA=0,EA=0,nA=0;if(L=oB,J=oB=oB+63&-64,oB=oB+64|0,!(0==(0|(B|=0))&0==(0|(C|=0)))){for(C>>>0>0|0==(0|C)&B>>>0>4294967295&&EB(),G=0|tB[A>>2],F=0|tB[A+4>>2],H=0|tB[A+8>>2],k=0|tB[A+12>>2],M=0|tB[A+16>>2],Y=0|tB[A+20>>2],b=0|tB[A+24>>2],v=0|tB[A+28>>2],S=0|tB[A+32>>2],m=0|tB[A+36>>2],N=0|tB[A+40>>2],R=0|tB[A+44>>2],U=0|tB[A+56>>2],P=0|tB[A+60>>2],i=0,D=0|tB[A+52>>2],u=0|tB[A+48>>2],_=C,d=B;;){if(p=_>>>0<0|0==(0|_)&d>>>0<64){B=(C=J)+64|0;do{nB[C>>0]=0,C=C+1|0}while((0|C)<(0|B));C=0;do{nB[J+C>>0]=0|nB[I+C>>0],C=C+1|0}while(0<_>>>0|0==(0|_)&C>>>0<d>>>0);i=g,I=J,g=J}C=G,B=F,e=H,Q=k,E=M,n=Y,t=b,r=v,a=S,o=m,c=N,f=P,y=U,w=D,s=u,h=R,l=20;do{j=0|Wg((q=0|Wg((EA=0|Wg((W=(q=0|Wg((QA=C+E|0)^s,16))+a|0)^E,12))+QA^q,8))+W^EA,7),nA=0|Wg((K=0|Wg((CA=0|Wg((X=(K=0|Wg((BA=B+n|0)^w,16))+o|0)^n,12))+BA^K,8))+X^CA,7),iA=0|Wg((V=0|Wg(($=0|Wg((O=(V=0|Wg((z=e+t|0)^y,16))+c|0)^t,12))+z^V,8))+O^$,7),AA=0|Wg((IA=0|Wg((Z=0|Wg((x=(IA=0|Wg((T=Q+r|0)^f,16))+h|0)^r,12))+T^IA,8))+x^Z,7),n=0|Wg((c=(f=0|Wg((C=(gA=0|Wg((eA=0|Wg(IA^nA+(EA+QA),16))+(V+O)^nA,12))+(nA+(EA+QA))|0)^eA,8))+(eA+(V+O))|0)^gA,7),t=0|Wg((h=(s=0|Wg((B=(O=0|Wg((gA=0|Wg(iA+(CA+BA)^q,16))+(IA+x)^iA,12))+(iA+(CA+BA))|0)^gA,8))+(gA+(IA+x))|0)^O,7),r=0|Wg((a=(w=0|Wg((e=(x=0|Wg((O=0|Wg(AA+($+z)^K,16))+(q+W)^AA,12))+(AA+($+z))|0)^O,8))+(O+(q+W))|0)^x,7),E=0|Wg((o=(y=0|Wg((Q=(x=0|Wg((V=0|Wg(Z+T+j^V,16))+(K+X)^j,12))+(Z+T+j)|0)^V,8))+(V+(K+X))|0)^x,7),l=l+-2|0}while(0!=(0|l));if(Z=(0|Fg(I))^C+G,W=(0|Fg(I+4|0))^B+F,q=(0|Fg(I+8|0))^e+H,O=(0|Fg(I+12|0))^Q+k,z=(0|Fg(I+16|0))^E+M,$=(0|Fg(I+20|0))^n+Y,AA=(0|Fg(I+24|0))^t+b,IA=(0|Fg(I+28|0))^r+v,gA=(0|Fg(I+32|0))^a+S,BA=(0|Fg(I+36|0))^o+m,CA=(0|Fg(I+40|0))^c+N,iA=(0|Fg(I+44|0))^h+R,eA=(0|Fg(I+48|0))^s+u,QA=(0|Fg(I+52|0))^w+D,EA=(0|Fg(I+56|0))^y+U,nA=(0|Fg(I+60|0))^f+P,B=u+1|0,C=(0==(0|B)&1)+D|0,ag(g,Z),ag(g+4|0,W),ag(g+8|0,q),ag(g+12|0,O),ag(g+16|0,z),ag(g+20|0,$),ag(g+24|0,AA),ag(g+28|0,IA),ag(g+32|0,gA),ag(g+36|0,BA),ag(g+40|0,CA),ag(g+44|0,iA),ag(g+48|0,eA),ag(g+52|0,QA),ag(g+56|0,EA),ag(g+60|0,nA),_>>>0<0|0==(0|_)&d>>>0<65)break;nA=0|Qg(0|d,0|_,-64,-1),I=I+64|0,g=g+64|0,D=C,u=B,_=wB,d=nA}if(p?0|d:0){I=0;do{nB[i+I>>0]=0|nB[g+I>>0],I=I+1|0}while((0|I)!=(0|d))}tB[A+48>>2]=B,tB[A+52>>2]=C}oB=L}function a(A,I,g,B){I|=0,g|=0,B|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0;if(y=0|nB[(A|=0)+80>>0]?0:16777216,w=0|tB[A+4>>2],a=0|tB[A+8>>2],o=0|tB[A+12>>2],c=0|tB[A+16>>2],E=0|tB[A+20>>2],Q=0|tB[A+24>>2],e=0|tB[A+28>>2],i=0|tB[A+32>>2],C=0|tB[A+36>>2],B>>>0>0|0==(0|B)&g>>>0>15)for(f=0|tB[A>>2],t=g;;){if(p=(67108863&(0|Fg(I)))+E|0,D=((0|Fg(I+3|0))>>>2&67108863)+Q|0,u=((0|Fg(I+6|0))>>>4&67108863)+e|0,l=((0|Fg(I+9|0))>>>6)+i|0,E=((0|Fg(I+12|0))>>>8|y)+C|0,C=0|MI(0|p,0,0|f,0),g=wB,e=0|MI(0|D,0,5*c|0,0),g=0|Qg(0|e,0|wB,0|C,0|g),C=wB,e=0|MI(0|u,0,5*o|0,0),e=0|Qg(0|g,0|C,0|e,0|wB),C=wB,g=0|MI(0|l,0,5*a|0,0),g=0|Qg(0|e,0|C,0|g,0|wB),C=wB,e=0|MI(0|E,0,5*w|0,0),e=0|Qg(0|g,0|C,0|e,0|wB),C=wB,g=0|MI(0|p,0,0|w,0),n=wB,h=0|MI(0|D,0,0|f,0),n=0|Qg(0|h,0|wB,0|g,0|n),g=wB,h=0|MI(0|u,0,5*c|0,0),h=0|Qg(0|n,0|g,0|h,0|wB),g=wB,n=0|MI(0|l,0,5*o|0,0),n=0|Qg(0|h,0|g,0|n,0|wB),g=wB,h=0|MI(0|E,0,5*a|0,0),h=0|Qg(0|n,0|g,0|h,0|wB),g=wB,n=0|MI(0|p,0,0|a,0),r=wB,s=0|MI(0|D,0,0|w,0),r=0|Qg(0|s,0|wB,0|n,0|r),n=wB,s=0|MI(0|u,0,0|f,0),s=0|Qg(0|r,0|n,0|s,0|wB),n=wB,r=0|MI(0|l,0,5*c|0,0),r=0|Qg(0|s,0|n,0|r,0|wB),n=wB,s=0|MI(0|E,0,5*o|0,0),s=0|Qg(0|r,0|n,0|s,0|wB),n=wB,r=0|MI(0|p,0,0|o,0),i=wB,Q=0|MI(0|D,0,0|a,0),i=0|Qg(0|Q,0|wB,0|r,0|i),r=wB,Q=0|MI(0|u,0,0|w,0),Q=0|Qg(0|i,0|r,0|Q,0|wB),r=wB,i=0|MI(0|l,0,0|f,0),i=0|Qg(0|Q,0|r,0|i,0|wB),r=wB,Q=0|MI(0|E,0,5*c|0,0),Q=0|Qg(0|i,0|r,0|Q,0|wB),r=wB,i=0|MI(0|p,0,0|c,0),p=wB,D=0|MI(0|D,0,0|o,0),p=0|Qg(0|D,0|wB,0|i,0|p),i=wB,u=0|MI(0|u,0,0|a,0),u=0|Qg(0|p,0|i,0|u,0|wB),i=wB,l=0|MI(0|l,0,0|w,0),l=0|Qg(0|u,0|i,0|l,0|wB),i=wB,E=0|MI(0|E,0,0|f,0),E=0|Qg(0|l,0|i,0|E,0|wB),i=wB,C=0|WI(0|e,0|C,26),C=0|Qg(0|h,0|g,0|C,0),g=0|WI(0|C,0|wB,26),g=0|Qg(0|s,0|n,0|g,0),n=0|WI(0|g,0|wB,26),n=0|Qg(0|Q,0|r,0|n,0),r=0|WI(0|n,0|wB,26),r=0|Qg(0|E,0|i,0|r,0),i=0|WI(0|r,0|wB,26),t=0|Qg(0|t,0|B,-16,-1),!((B=wB)>>>0>0|0==(0|B)&t>>>0>15)){E=(5*i|0)+e&67108863,Q=(((5*i|0)+(67108863&e)|0)>>>26)+(67108863&C)|0,e=67108863&g,i=67108863&n,C=67108863&r;break}E=(5*i|0)+e&67108863,Q=(((5*i|0)+(67108863&e)|0)>>>26)+(67108863&C)|0,e=67108863&g,i=67108863&n,C=67108863&r,I=I+16|0}tB[A+20>>2]=E,tB[A+24>>2]=Q,tB[A+28>>2]=e,tB[A+32>>2]=i,tB[A+36>>2]=C}function o(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0;p=0|zA(I|=0),E=wB,u=0|ZI(0|(u=0|vI(0|nB[I+4>>0],0|nB[I+5>>0],0|nB[I+6>>0])),0|wB,6),n=wB,l=0|ZI(0|(l=0|vI(0|nB[I+7>>0],0|nB[I+8>>0],0|nB[I+9>>0])),0|wB,5),e=wB,w=0|ZI(0|(w=0|vI(0|nB[I+10>>0],0|nB[I+11>>0],0|nB[I+12>>0])),0|wB,3),Q=wB,y=0|ZI(0|(y=0|vI(0|nB[I+13>>0],0|nB[I+14>>0],0|nB[I+15>>0])),0|wB,2),C=wB,B=0|zA(I+16|0),i=wB,o=0|ZI(0|(o=0|vI(0|nB[I+20>>0],0|nB[I+21>>0],0|nB[I+22>>0])),0|wB,7),g=wB,h=0|ZI(0|(h=0|vI(0|nB[I+23>>0],0|nB[I+24>>0],0|nB[I+25>>0])),0|wB,5),s=wB,r=0|ZI(0|(r=0|vI(0|nB[I+26>>0],0|nB[I+27>>0],0|nB[I+28>>0])),0|wB,4),a=wB,E=0|Qg(19&(D=0|ig(0,0,0|(I=0|WI(0|(I=0|Qg(33554428&(f=0|ZI(0|(f=0|vI(0|nB[I+29>>0],0|nB[I+30>>0],0|nB[I+31>>0])),0|wB,2))|0,0,16777216,0)),0|wB,25)),0|(c=wB)))|0,0,0|p,0|E),p=wB,c=0|ZI(0|I,0|c,25),I=wB,e=0|Qg(0|(D=0|GI(0|(D=0|Qg(0|u,0|n,16777216,0)),0|wB,25)),0|(d=wB),0|l,0|e),l=wB,d=0|ig(0|u,0|n,0|(d=0|ZI(0|D,0|d,25)),0|wB),n=wB,C=0|Qg(0|(u=0|GI(0|(u=0|Qg(0|w,0|Q,16777216,0)),0|wB,25)),0|(D=wB),0|y,0|C),y=wB,D=0|ig(0|w,0|Q,0|(D=0|ZI(0|u,0|D,25)),0|wB),Q=wB,g=0|Qg(0|o,0|g,0|(w=0|GI(0|(w=0|Qg(0|B,0|i,16777216,0)),0|wB,25)),0|(u=wB)),o=wB,u=0|ig(0|B,0|i,0|(u=0|ZI(0|w,0|u,25)),0|wB),i=wB,a=0|Qg(0|(B=0|GI(0|(B=0|Qg(0|h,0|s,16777216,0)),0|wB,25)),0|(w=wB),0|r,0|a),r=wB,w=0|ZI(0|B,0|w,25),B=wB,n=0|Qg(0|d,0|n,0|(_=0|GI(0|(_=0|Qg(0|E,0|p,33554432,0)),0|wB,26)),0|(t=wB)),t=0|ig(0|E,0|p,0|(t=0|ZI(0|_,0|t,26)),0|wB),Q=0|Qg(0|D,0|Q,0|(p=0|GI(0|(p=0|Qg(0|e,0|l,33554432,0)),0|wB,26)),0|(E=wB)),E=0|ig(0|e,0|l,0|(E=0|ZI(0|p,0|E,26)),0|wB),i=0|Qg(0|u,0|i,0|(l=0|GI(0|(l=0|Qg(0|C,0|y,33554432,0)),0|wB,26)),0|(e=wB)),e=0|ig(0|C,0|y,0|(e=0|ZI(0|l,0|e,26)),0|wB),B=0|ig(0|(s=0|Qg(0|(y=0|GI(0|(y=0|Qg(0|g,0|o,33554432,0)),0|wB,26)),0|(C=wB),0|h,0|s)),0|wB,0|w,0|B),C=0|ig(0|g,0|o,0|(C=0|ZI(0|y,0|C,26)),0|wB),I=0|ig(0|(f=0|Qg(0|(o=0|GI(0|(o=0|Qg(0|a,0|r,33554432,0)),0|wB,26)),0|(g=wB),33554428&f|0,0)),0|wB,0|c,0|I),g=0|ig(0|a,0|r,0|(g=0|ZI(0|o,0|g,26)),0|wB),tB[A>>2]=t,tB[A+4>>2]=n,tB[A+8>>2]=E,tB[A+12>>2]=Q,tB[A+16>>2]=e,tB[A+20>>2]=i,tB[A+24>>2]=C,tB[A+28>>2]=B,tB[A+32>>2]=g,tB[A+36>>2]=I}function c(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0;h=0|tB[(I|=0)>>2],s=0|tB[I+4>>2],w=0|tB[I+8>>2],y=0|tB[I+12>>2],f=0|tB[I+16>>2],t=0|tB[I+20>>2],o=0|tB[I+24>>2],u=0|tB[I+28>>2],r=0|tB[I+32>>2],l=0|tB[I+36>>2],h=0|MI(0|h,((0|h)<0)<<31>>31|0,121666,0),E=wB,s=0|MI(0|s,((0|s)<0)<<31>>31|0,121666,0),n=wB,w=0|MI(0|w,((0|w)<0)<<31>>31|0,121666,0),e=wB,y=0|MI(0|y,((0|y)<0)<<31>>31|0,121666,0),Q=wB,f=0|MI(0|f,((0|f)<0)<<31>>31|0,121666,0),C=wB,t=0|MI(0|t,((0|t)<0)<<31>>31|0,121666,0),i=wB,o=0|MI(0|o,((0|o)<0)<<31>>31|0,121666,0),g=wB,u=0|MI(0|u,((0|u)<0)<<31>>31|0,121666,0),B=wB,r=0|MI(0|r,((0|r)<0)<<31>>31|0,121666,0),a=wB,E=0|Qg(0|(0|MI(0|(p=0|GI(0|(p=0|Qg(0|(l=0|MI(0|l,((0|l)<0)<<31>>31|0,121666,0)),0|(I=wB),16777216,0)),0|wB,25)),0|(c=wB),19,0)),0|wB,0|h,0|E),h=wB,c=0|ig(0|l,0|I,0|(c=0|ZI(0|p,0|c,25)),0|wB),I=wB,e=0|Qg(0|(l=0|GI(0|(l=0|Qg(0|s,0|n,16777216,0)),0|wB,25)),0|(p=wB),0|w,0|e),w=wB,p=0|ig(0|s,0|n,0|(p=0|ZI(0|l,0|p,25)),0|wB),n=wB,C=0|Qg(0|(s=0|GI(0|(s=0|Qg(0|y,0|Q,16777216,0)),0|wB,25)),0|(l=wB),0|f,0|C),f=wB,l=0|ig(0|y,0|Q,0|(l=0|ZI(0|s,0|l,25)),0|wB),Q=wB,g=0|Qg(0|(y=0|GI(0|(y=0|Qg(0|t,0|i,16777216,0)),0|wB,25)),0|(s=wB),0|o,0|g),o=wB,s=0|ig(0|t,0|i,0|(s=0|ZI(0|y,0|s,25)),0|wB),i=wB,a=0|Qg(0|(t=0|GI(0|(t=0|Qg(0|u,0|B,16777216,0)),0|wB,25)),0|(y=wB),0|r,0|a),r=wB,y=0|ig(0|u,0|B,0|(y=0|ZI(0|t,0|y,25)),0|wB),B=wB,n=0|Qg(0|p,0|n,0|(u=0|GI(0|(u=0|Qg(0|E,0|h,33554432,0)),0|wB,26)),0|(t=wB)),t=0|ig(0|E,0|h,0|(t=0|ZI(0|u,0|t,26)),0|wB),Q=0|Qg(0|l,0|Q,0|(h=0|GI(0|(h=0|Qg(0|e,0|w,33554432,0)),0|wB,26)),0|(E=wB)),E=0|ig(0|e,0|w,0|(E=0|ZI(0|h,0|E,26)),0|wB),i=0|Qg(0|s,0|i,0|(w=0|GI(0|(w=0|Qg(0|C,0|f,33554432,0)),0|wB,26)),0|(e=wB)),e=0|ig(0|C,0|f,0|(e=0|ZI(0|w,0|e,26)),0|wB),B=0|Qg(0|y,0|B,0|(f=0|GI(0|(f=0|Qg(0|g,0|o,33554432,0)),0|wB,26)),0|(C=wB)),C=0|ig(0|g,0|o,0|(C=0|ZI(0|f,0|C,26)),0|wB),I=0|Qg(0|c,0|I,0|(o=0|GI(0|(o=0|Qg(0|a,0|r,33554432,0)),0|wB,26)),0|(g=wB)),g=0|ig(0|a,0|r,0|(g=0|ZI(0|o,0|g,26)),0|wB),tB[A>>2]=t,tB[A+4>>2]=n,tB[A+8>>2]=E,tB[A+12>>2]=Q,tB[A+16>>2]=e,tB[A+20>>2]=i,tB[A+24>>2]=C,tB[A+28>>2]=B,tB[A+32>>2]=g,tB[A+36>>2]=I}function f(A,I,g){A|=0,I|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0,J=0,L=0,x=0,X=0,K=0,V=0;G=0|Fg(g|=0),F=0|Fg(g+4|0),H=0|Fg(g+8|0),k=0|Fg(g+12|0),D=0|Fg(g+16|0),_=0|Fg(g+20|0),d=0|Fg(g+24|0),h=0|Fg(g+28|0),l=0|Fg(I),u=0|Fg(I+4|0),p=0|Fg(I+8|0),s=0|Fg(I+12|0),g=0,I=G,B=F,C=H,i=k,e=l,Q=u,E=p,n=s,t=D,r=h,a=d,o=_,c=1634760805,f=857760878,y=2036477234,w=1797285236;do{x=(0|Wg((v=(0|Wg((N=(0|Wg((P=(0|Wg(c+o|0,7))^i)+c|0,9))^E)+P|0,13))^o)+N|0,18))^c,U=(0|Wg((V=(0|Wg((b=(0|Wg((m=(0|Wg(I+f|0,7))^n)+f|0,9))^a)+m|0,13))^I)+b|0,18))^f,S=(0|Wg((L=(0|Wg((K=(0|Wg((Y=(0|Wg(e+y|0,7))^r)+y|0,9))^B)+Y|0,13))^e)+K|0,18))^y,M=(0|Wg((R=(0|Wg((J=(0|Wg((X=(0|Wg(t+w|0,7))^C)+w|0,9))^Q)+X|0,13))^t)+J|0,18))^w,c=(0|Wg((C=(0|Wg((B=(0|Wg((I=(0|Wg(X+x|0,7))^V)+x|0,9))^K)+I|0,13))^X)+B|0,18))^x,f=(0|Wg((i=(0|Wg((Q=(0|Wg((e=(0|Wg(U+P|0,7))^L)+U|0,9))^J)+e|0,13))^P)+Q|0,18))^U,y=(0|Wg((n=(0|Wg((E=(0|Wg((t=(0|Wg(S+m|0,7))^R)+S|0,9))^N)+t|0,13))^m)+E|0,18))^S,w=(0|Wg((r=(0|Wg((a=(0|Wg((o=(0|Wg(M+Y|0,7))^v)+M|0,9))^b)+o|0,13))^Y)+a|0,18))^M,g=g+2|0}while((0|g)<20);ag(A,c+1634760805|0),ag(A+4|0,I+G|0),ag(A+8|0,B+F|0),ag(A+12|0,C+H|0),ag(A+16|0,i+k|0),ag(A+20|0,f+857760878|0),ag(A+24|0,e+l|0),ag(A+28|0,Q+u|0),ag(A+32|0,E+p|0),ag(A+36|0,n+s|0),ag(A+40|0,y+2036477234|0),ag(A+44|0,t+D|0),ag(A+48|0,o+_|0),ag(A+52|0,a+d|0),ag(A+56|0,r+h|0),ag(A+60|0,w+1797285236|0)}function y(A,I,g,B){A|=0,g|=0,B|=0;var C=0,i=0;for(C=oB,i=oB=oB+63&-64,oB=oB+2272|0,L(i+2016|0,I|=0),L(i+1760|0,B),II(i+480|0,g),jI(i+320|0,g),BI(i,i+320|0),IA(i+320|0,i,i+480|0),BI(i+160|0,i+320|0),II(i+480+160|0,i+160|0),IA(i+320|0,i,i+480+160|0),BI(i+160|0,i+320|0),II(i+480+320|0,i+160|0),IA(i+320|0,i,i+480+320|0),BI(i+160|0,i+320|0),II(i+480+480|0,i+160|0),IA(i+320|0,i,i+480+480|0),BI(i+160|0,i+320|0),II(i+480+640|0,i+160|0),IA(i+320|0,i,i+480+640|0),BI(i+160|0,i+320|0),II(i+480+800|0,i+160|0),IA(i+320|0,i,i+480+800|0),BI(i+160|0,i+320|0),II(i+480+960|0,i+160|0),IA(i+320|0,i,i+480+960|0),BI(i+160|0,i+320|0),II(i+480+1120|0,i+160|0),Eg(A),I=255;;){if(0|nB[i+2016+I>>0])break;if(0|nB[i+1760+I>>0])break;if(g=I+-1|0,!((0|I)>0)){I=g;break}I=g}if((0|I)>-1)for(;;){if(wA(i+320|0,A),(g=0|nB[i+2016+I>>0])<<24>>24<=0?g<<24>>24<0&&(BI(i+160|0,i+320|0),gA(i+320|0,i+160|0,i+480+(160*(((g<<24>>24)/-2|0)<<24>>24)|0)|0)):(BI(i+160|0,i+320|0),IA(i+320|0,i+160|0,i+480+(160*((255&g)>>>1&255)|0)|0)),(g=0|nB[i+1760+I>>0])<<24>>24<=0?g<<24>>24<0&&(BI(i+160|0,i+320|0),iA(i+320|0,i+160|0,1224+(120*(((g<<24>>24)/-2|0)<<24>>24)|0)|0)):(BI(i+160|0,i+320|0),eA(i+320|0,i+160|0,1224+(120*((255&g)>>>1&255)|0)|0)),sI(A,i+320|0),!((0|I)>0))break;I=I+-1|0}oB=C}function w(A,I,g,B){A|=0,I|=0,g|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0,S=0,m=0,N=0,R=0,U=0,P=0;(B|=0)?(e=0|Fg(B),i=0|Fg(B+4|0),C=0|Fg(B+8|0),B=0|Fg(B+12|0)):(B=1797285236,C=2036477234,i=857760878,e=1634760805),w=0|Fg(g),y=0|Fg(g+4|0),f=0|Fg(g+8|0),c=0|Fg(g+12|0),o=0|Fg(g+16|0),a=0|Fg(g+20|0),r=0|Fg(g+24|0),t=0|Fg(g+28|0),n=0|Fg(I),E=0|Fg(I+4|0),Q=0|Fg(I+8|0),s=0,I=0|Fg(I+12|0),g=e;do{p=0|Wg((G=0|Wg((U=0|Wg((d=(G=0|Wg(n^(R=w+g|0),16))+o|0)^w,12))+R^G,8))+d^U,7),P=0|Wg((l=0|Wg((S=0|Wg((h=(l=0|Wg(E^(v=y+i|0),16))+a|0)^y,12))+v^l,8))+h^S,7),m=0|Wg((u=0|Wg((k=0|Wg((F=(u=0|Wg(Q^(H=f+C|0),16))+r|0)^f,12))+H^u,8))+F^k,7),M=0|Wg((Y=0|Wg((_=0|Wg((e=(Y=0|Wg(I^(D=c+B|0),16))+t|0)^c,12))+D^Y,8))+e^_,7),y=0|Wg((r=(I=0|Wg((g=(b=0|Wg((N=0|Wg(Y^P+(U+R),16))+(u+F)^P,12))+(P+(U+R))|0)^N,8))+(N+(u+F))|0)^b,7),f=0|Wg((t=(n=0|Wg((i=(F=0|Wg((b=0|Wg(m+(S+v)^G,16))+(Y+e)^m,12))+(m+(S+v))|0)^b,8))+(b+(Y+e))|0)^F,7),c=0|Wg((o=(E=0|Wg((C=(e=0|Wg((F=0|Wg(M+(k+H)^l,16))+(G+d)^M,12))+(M+(k+H))|0)^F,8))+(F+(G+d))|0)^e,7),w=0|Wg((a=(Q=0|Wg((B=(e=0|Wg((u=0|Wg(_+D+p^u,16))+(l+h)^p,12))+(_+D+p)|0)^u,8))+(u+(l+h))|0)^e,7),s=s+1|0}while(10!=(0|s));return ag(A,g),ag(A+4|0,i),ag(A+8|0,C),ag(A+12|0,B),ag(A+16|0,n),ag(A+20|0,E),ag(A+24|0,Q),ag(A+28|0,I),0}function s(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var C=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0;r=oB,t=oB=oB+63&-64,oB=oB+704|0;A:do{if(!(0==(0|g)&0==(0|B))){if(f=0|tB[A+72>>2],o=0|tB[A+72+4>>2],n=0|WI(0|f,0|o,3),a=0|ZI(0|g,0|B,3),c=wB,Q=0|WI(0|g,0|B,61),E=wB,o=0|Qg(0|f,0|o,0|a,0|c),f=wB,tB[A+72>>2]=o,tB[A+72+4>>2]=f,C=0|tB[A+64>>2],e=0|tB[A+64+4>>2],f>>>0<c>>>0|(0|f)==(0|c)&o>>>0<a>>>0&&(C=0|Qg(0|C,0|e,1,0),e=wB,tB[A+64>>2]=C,tB[A+64+4>>2]=e),E=0|Qg(0|C,0|e,0|Q,0|E),tB[A+64>>2]=E,tB[A+64+4>>2]=wB,E=0|ig(128,0,127&n|0,0),(C=wB)>>>0>B>>>0|(0|C)==(0|B)&E>>>0>g>>>0)for(C=0,e=0;;)if(c=0|nB[I+C>>0],f=0|Qg(0|C,0|e,127&n|0,0),nB[A+80+f>>0]=c,C=0|Qg(0|C,0|e,1,0),!((e=wB)>>>0<B>>>0|(0|e)==(0|B)&C>>>0<g>>>0))break A;if(!(0==(0|E)&0==(0|C))){e=0,Q=0;do{c=0|nB[I+e>>0],f=0|Qg(0|e,0|Q,127&n|0,0),nB[A+80+f>>0]=c,e=0|Qg(0|e,0|Q,1,0),Q=wB}while(Q>>>0<C>>>0|(0|Q)==(0|C)&e>>>0<E>>>0)}if(i(A,A+80|0,t,t+640|0),C=0|ig(0|g,0|B,0|E,0|C),(e=wB)>>>0>0|0==(0|e)&C>>>0>127){Q=I+E|0;do{i(A,Q,t,t+640|0),Q=Q+128|0,C=0|Qg(0|C,0|e,-128,-1),e=wB}while(e>>>0>0|0==(0|e)&C>>>0>127);E=Q}else E=I+E|0;if(!(0==(0|(C&=127))&!0)){e=0,Q=0;do{nB[A+80+e>>0]=0|nB[E+e>>0],e=0|Qg(0|e,0|Q,1,0),Q=wB}while(Q>>>0<0|0==(0|Q)&e>>>0<C>>>0)}$A(t,704)}}while(0);oB=r}function h(A,I){A|=0;var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+160|0,n(B+120|0,I|=0),n(B+80|0,B+120|0),n(B+80|0,B+80|0),Q(B+80|0,I,B+80|0),Q(B+120|0,B+120|0,B+80|0),n(B+40|0,B+120|0),Q(B+80|0,B+80|0,B+40|0),n(B+40|0,B+80|0),I=1;do{n(B+40|0,B+40|0),I=I+1|0}while(5!=(0|I));Q(B+80|0,B+40|0,B+80|0),n(B+40|0,B+80|0),I=1;do{n(B+40|0,B+40|0),I=I+1|0}while(10!=(0|I));Q(B+40|0,B+40|0,B+80|0),n(B,B+40|0),I=1;do{n(B,B),I=I+1|0}while(20!=(0|I));Q(B+40|0,B,B+40|0),n(B+40|0,B+40|0),I=1;do{n(B+40|0,B+40|0),I=I+1|0}while(10!=(0|I));Q(B+80|0,B+40|0,B+80|0),n(B+40|0,B+80|0),I=1;do{n(B+40|0,B+40|0),I=I+1|0}while(50!=(0|I));Q(B+40|0,B+40|0,B+80|0),n(B,B+40|0),I=1;do{n(B,B),I=I+1|0}while(100!=(0|I));Q(B+40|0,B,B+40|0),n(B+40|0,B+40|0),I=1;do{n(B+40|0,B+40|0),I=I+1|0}while(50!=(0|I));Q(B+80|0,B+40|0,B+80|0),n(B+80|0,B+80|0),I=1;do{n(B+80|0,B+80|0),I=I+1|0}while(5!=(0|I));Q(A,B+80|0,B+120|0),oB=g}function l(A,I){A|=0;var g=0,B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+128|0,n(C+80|0,I|=0),n(C+40|0,C+80|0),n(C+40|0,C+40|0),Q(C+40|0,I,C+40|0),Q(C+80|0,C+80|0,C+40|0),n(C+80|0,C+80|0),Q(C+80|0,C+40|0,C+80|0),n(C+40|0,C+80|0),g=1;do{n(C+40|0,C+40|0),g=g+1|0}while(5!=(0|g));Q(C+80|0,C+40|0,C+80|0),n(C+40|0,C+80|0),g=1;do{n(C+40|0,C+40|0),g=g+1|0}while(10!=(0|g));Q(C+40|0,C+40|0,C+80|0),n(C,C+40|0),g=1;do{n(C,C),g=g+1|0}while(20!=(0|g));Q(C+40|0,C,C+40|0),n(C+40|0,C+40|0),g=1;do{n(C+40|0,C+40|0),g=g+1|0}while(10!=(0|g));Q(C+80|0,C+40|0,C+80|0),n(C+40|0,C+80|0),g=1;do{n(C+40|0,C+40|0),g=g+1|0}while(50!=(0|g));Q(C+40|0,C+40|0,C+80|0),n(C,C+40|0),g=1;do{n(C,C),g=g+1|0}while(100!=(0|g));Q(C+40|0,C,C+40|0),n(C+40|0,C+40|0),g=1;do{n(C+40|0,C+40|0),g=g+1|0}while(50!=(0|g));Q(C+80|0,C+40|0,C+80|0),n(C+80|0,C+80|0),n(C+80|0,C+80|0),Q(A,C+80|0,I),oB=B}function u(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0;t=0|tB[(I|=0)>>2],i=0|tB[I+4>>2],e=0|tB[I+8>>2],Q=0|tB[I+12>>2],o=0|tB[I+16>>2],B=0|tB[I+20>>2],C=0|tB[I+24>>2],r=0|tB[I+28>>2],g=0|tB[I+32>>2],t=(19*((((((((((((16777216+(19*(I=0|tB[I+36>>2])|0)|0)>>>25)+t>>26)+i>>25)+e>>26)+Q>>25)+o>>26)+B>>25)+C>>26)+r>>25)+g>>26)+I>>25)|0)+t-((a=(19*((((((((((((16777216+(19*I|0)|0)>>>25)+t>>26)+i>>25)+e>>26)+Q>>25)+o>>26)+B>>25)+C>>26)+r>>25)+g>>26)+I>>25)|0)+t>>26)<<26)|0,n=a+i-(a+i>>25<<25)|0,E=(a+i>>25)+e-((a+i>>25)+e>>26<<26)|0,Q=((a+i>>25)+e>>26)+Q-((c=((a+i>>25)+e>>26)+Q>>25)<<25)|0,e=c+o-(c+o>>26<<26)|0,i=(c+o>>26)+B-((c+o>>26)+B>>25<<25)|0,C=((c+o>>26)+B>>25)+C-((a=((c+o>>26)+B>>25)+C>>26)<<26)|0,B=a+r-(a+r>>25<<25)|0,I=((a+r>>25)+g>>26)+I|0,g=(a+r>>25)+g-((a+r>>25)+g>>26<<26)|0,nB[A>>0]=t,nB[A+1>>0]=t>>>8,nB[A+2>>0]=t>>>16,nB[A+3>>0]=n<<2|t>>>24,nB[A+4>>0]=n>>>6,nB[A+5>>0]=n>>>14,nB[A+6>>0]=E<<3|n>>>22,nB[A+7>>0]=E>>>5,nB[A+8>>0]=E>>>13,nB[A+9>>0]=Q<<5|E>>>21,nB[A+10>>0]=Q>>>3,nB[A+11>>0]=Q>>>11,nB[A+12>>0]=e<<6|Q>>>19,nB[A+13>>0]=e>>>2,nB[A+14>>0]=e>>>10,nB[A+15>>0]=e>>>18,nB[A+16>>0]=i,nB[A+17>>0]=i>>>8,nB[A+18>>0]=i>>>16,nB[A+19>>0]=C<<1|i>>>24,nB[A+20>>0]=C>>>7,nB[A+21>>0]=C>>>15,nB[A+22>>0]=B<<3|C>>>23,nB[A+23>>0]=B>>>5,nB[A+24>>0]=B>>>13,nB[A+25>>0]=g<<4|B>>>21,nB[A+26>>0]=g>>>4,nB[A+27>>0]=g>>>12,nB[A+28>>0]=g>>>20|(33554431&I)<<6,nB[A+29>>0]=I>>>2,nB[A+30>>0]=I>>>10,nB[A+31>>0]=(33554431&I)>>>18}function p(A,I,g){A|=0,I|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0,D=0,_=0,d=0,G=0,F=0,H=0,k=0,M=0,Y=0,b=0,v=0;for(E=0|Fg(g|=0),Q=0|Fg(g+4|0),e=0|Fg(g+8|0),i=0|Fg(g+12|0),w=0|Fg(g+16|0),y=0|Fg(g+20|0),f=0|Fg(g+24|0),c=0|Fg(g+28|0),C=0|Fg(I),B=0|Fg(I+4|0),n=0|Fg(I+8|0),g=0|Fg(I+12|0),I=n,n=20,t=2036477234,r=857760878,a=1634760805,o=1797285236;;){if(F=(0|Wg(y+a|0,7))^i,_=(0|Wg(F+a|0,9))^I,u=(0|Wg(_+F|0,13))^y,M=(0|Wg(u+_|0,18))^a,D=(0|Wg(r+E|0,7))^g,l=(0|Wg(D+r|0,9))^f,v=(0|Wg(l+D|0,13))^E,G=(0|Wg(v+l|0,18))^r,h=(0|Wg(t+C|0,7))^c,b=(0|Wg(h+t|0,9))^Q,k=(0|Wg(b+h|0,13))^C,p=(0|Wg(k+b|0,18))^t,Y=(0|Wg(o+w|0,7))^e,H=(0|Wg(Y+o|0,9))^B,d=(0|Wg(H+Y|0,13))^w,s=(0|Wg(d+H|0,18))^o,E=(0|Wg(Y+M|0,7))^v,Q=(0|Wg(E+M|0,9))^b,e=(0|Wg(Q+E|0,13))^Y,a=(0|Wg(e+Q|0,18))^M,C=(0|Wg(G+F|0,7))^k,B=(0|Wg(C+G|0,9))^H,i=(0|Wg(B+C|0,13))^F,r=(0|Wg(i+B|0,18))^G,w=(0|Wg(p+D|0,7))^d,I=(0|Wg(w+p|0,9))^_,g=(0|Wg(I+w|0,13))^D,t=(0|Wg(g+I|0,18))^p,y=(0|Wg(s+h|0,7))^u,f=(0|Wg(y+s|0,9))^l,c=(0|Wg(f+y|0,13))^h,o=(0|Wg(c+f|0,18))^s,(0|n)<=2)break;n=n+-2|0}ag(A,a),ag(A+4|0,r),ag(A+8|0,t),ag(A+12|0,o),ag(A+16|0,C),ag(A+20|0,B),ag(A+24|0,I),ag(A+28|0,g)}function D(A,I,g){A|=0,I|=0,g|=0;var B=0,C=0,i=0,e=0;i=oB,e=oB=oB+63&-64,oB=oB+320|0,B=(C=e+280|0)+32|0;do{nB[C>>0]=0|nB[I>>0],C=C+1|0,I=I+1|0}while((0|C)<(0|B));for(nB[e+280>>0]=-8&nB[e+280>>0],nB[e+280+31>>0]=63&nB[e+280+31>>0]|64,o(e+240|0,g),OI(e+200|0),og(e+160|0),fA(e+120|0,e+240|0),OI(e+80|0),I=0,B=254;;){if(C=I,I=(0|rB[e+280+(B>>>3)>>0])>>>(7&B)&1,C^=I,k(e+200|0,e+120|0,C),k(e+160|0,e+80|0,C),j(e+40|0,e+120|0,e+80|0),j(e,e+200|0,e+160|0),T(e+200|0,e+200|0,e+160|0),T(e+160|0,e+120|0,e+80|0),Q(e+80|0,e+40|0,e+200|0),Q(e+160|0,e+160|0,e),n(e+40|0,e),n(e,e+200|0),T(e+120|0,e+80|0,e+160|0),j(e+160|0,e+80|0,e+160|0),Q(e+200|0,e,e+40|0),j(e,e,e+40|0),n(e+160|0,e+160|0),c(e+80|0,e),n(e+120|0,e+120|0),T(e+40|0,e+40|0,e+80|0),Q(e+80|0,e+240|0,e+160|0),Q(e+160|0,e,e+40|0),(0|B)<=0)break;B=B+-1|0}return k(e+200|0,e+120|0,I),k(e+160|0,e+80|0,I),h(e+160|0,e+160|0),Q(e+200|0,e+200|0,e+160|0),u(A,e+200|0),oB=i,0}function _(A,I){A|=0;var g=0,B=0,C=0;for(B=oB,C=oB=oB+63&-64,oB=oB+1760|0,II(C+480|0,I|=0),jI(C+320|0,I),BI(C,C+320|0),IA(C+320|0,C,C+480|0),BI(C+160|0,C+320|0),II(C+480+160|0,C+160|0),IA(C+320|0,C,C+480+160|0),BI(C+160|0,C+320|0),II(C+480+320|0,C+160|0),IA(C+320|0,C,C+480+320|0),BI(C+160|0,C+320|0),II(C+480+480|0,C+160|0),IA(C+320|0,C,C+480+480|0),BI(C+160|0,C+320|0),II(C+480+640|0,C+160|0),IA(C+320|0,C,C+480+640|0),BI(C+160|0,C+320|0),II(C+480+800|0,C+160|0),IA(C+320|0,C,C+480+800|0),BI(C+160|0,C+320|0),II(C+480+960|0,C+160|0),IA(C+320|0,C,C+480+960|0),BI(C+160|0,C+320|0),II(C+480+1120|0,C+160|0),XI(A),I=252;;){if(jI(C+320|0,A),(g=0|nB[33148+I>>0])<<24>>24<=0?g<<24>>24<0&&(BI(C+160|0,C+320|0),gA(C+320|0,C+160|0,C+480+(160*(((g<<24>>24)/-2|0)<<24>>24)|0)|0)):(BI(C+160|0,C+320|0),IA(C+320|0,C+160|0,C+480+(160*((255&g)>>>1&255)|0)|0)),BI(A,C+320|0),!((0|I)>0))break;I=I+-1|0}oB=B}function d(A,I,g,B){I|=0,g|=0,B|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0;if(i=0|tB[(A|=0)+56>>2],C=0|tB[A+56+4>>2],0==(0|i)&0==(0|C))t=6;else{if(Q=0|ig(16,0,0|i,0|C),n=wB,E=n>>>0>B>>>0|(0|n)==(0|B)&Q>>>0>g>>>0?g:Q,n=n>>>0>B>>>0|(0|n)==(0|B)&Q>>>0>g>>>0?B:n,!(0==(0|E)&0==(0|n))){Q=0,e=0;do{r=0|nB[I+Q>>0],i=0|Qg(0|i,0|C,0|Q,0|e),nB[A+64+i>>0]=r,Q=0|Qg(0|Q,0|e,1,0),e=wB,i=0|tB[A+56>>2],C=0|tB[A+56+4>>2]}while(e>>>0<n>>>0|(0|e)==(0|n)&Q>>>0<E>>>0)}r=0|Qg(0|i,0|C,0|E,0|n),Q=wB,tB[A+56>>2]=r,tB[A+56+4>>2]=Q,Q>>>0<0|0==(0|Q)&r>>>0<16||(g=0|ig(0|g,0|B,0|E,0|n),B=wB,a(A,A+64|0,16,0),tB[A+56>>2]=0,tB[A+56+4>>2]=0,I=I+E|0,t=6)}if(6==(0|t)&&(C=-16&g,B>>>0>0|0==(0|B)&g>>>0>15?(g=0|ig(0|g,0|B,0|C,0|B),r=wB,a(A,I,C,B),I=I+C|0,C=r):C=B,!(0==(0|g)&0==(0|C)))){B=0,i=0|tB[A+56>>2],e=0|tB[A+56+4>>2],Q=0;do{t=0|nB[I+B>>0],r=0|Qg(0|i,0|e,0|B,0|Q),nB[A+64+r>>0]=t,B=0|Qg(0|B,0|Q,1,0),Q=wB,i=0|tB[A+56>>2],e=0|tB[A+56+4>>2]}while(Q>>>0<C>>>0|(0|Q)==(0|C)&B>>>0<g>>>0);r=0|Qg(0|i,0|e,0|g,0|C),tB[A+56>>2]=r,tB[A+56+4>>2]=wB}}function G(A,I,g,B,C,i,e,Q){A|=0,I|=0,C|=0,i|=0,e|=0,Q|=0;var E=0,n=0,t=0,r=0;if(t=oB,r=oB=oB+63&-64,oB=oB+112|0,!(0==(0|(g|=0))&0==(0|(B|=0)))){E=(n=r+16|0)+32|0;do{nB[n>>0]=0|nB[Q>>0],n=n+1|0,Q=Q+1|0}while((0|n)<(0|E));for(Q=rB[C+4>>0]|rB[C+4+1>>0]<<8|rB[C+4+2>>0]<<16|rB[C+4+3>>0]<<24,tB[r>>2]=rB[C>>0]|rB[C+1>>0]<<8|rB[C+2>>0]<<16|rB[C+3>>0]<<24,tB[r+4>>2]=Q,Q=8;;){if(nB[r+Q>>0]=i,i=0|WI(0|i,0|e,8),16==(0|(Q=Q+1|0)))break;e=wB}if(B>>>0>0|0==(0|B)&g>>>0>63)for(Q=A,i=g;;){Pg(r+48|0,r,r+16|0),A=0;do{nB[Q+A>>0]=nB[r+48+A>>0]^nB[I+A>>0],A=A+1|0}while(64!=(0|A));for(A=1,e=8;;){if(g=r+e|0,A=(0|rB[g>>0])+A|0,nB[g>>0]=A,16==(0|(e=e+1|0)))break;A>>>=8}if(e=0|Qg(0|i,0|B,-64,-1),B=wB,A=Q+64|0,I=I+64|0,!(B>>>0>0|0==(0|B)&e>>>0>63))break;Q=A,i=e}else e=g;if(0==(0|e)&0==(0|B)?0:(Pg(r+48|0,r,r+16|0),0|e)){B=0;do{nB[A+B>>0]=nB[r+48+B>>0]^nB[I+B>>0],B=B+1|0}while((0|B)!=(0|e))}$A(r+48|0,64),$A(r+16|0,32)}oB=t}function F(A,I,g,B,C,i,e){A|=0,I|=0,g|=0,B|=0,C|=0;var Q=0,E=0,n=0,t=0;E=oB,n=oB=oB+63&-64,oB=oB+352|0,p(n+256|0,i|=0,e|=0),(A>>>0>g>>>0?0<C>>>0|0==(0|C)&(A-g|0)>>>0<B>>>0:0)?Q=5:(g>>>0>A>>>0?0<C>>>0|0==(0|C)&(g-A|0)>>>0<B>>>0:0)&&(Q=5),5==(0|Q)&&(TA(0|A,0|g,0|B),g=A),Q=(e=n+288|0)+32|0;do{nB[e>>0]=0,e=e+1|0}while((0|e)<(0|Q));return e=C>>>0>0|0==(0|C)&B>>>0>32?32:B,Q=C>>>0>0|0==(0|C)&B>>>0>32?0:C,0==(0|e)&0==(0|Q)||v(n+288+32|0,0|g,(t=0|ig(-2,-1,0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~B:-33),0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~C:-1)))+1|0),t=0|Qg(0|e,0|Q,32,0),gg(n+288|0,n+288|0,t,wB,i+16|0,n+256|0),vg(n,n+288|0),0==(0|e)&0==(0|Q)||v(0|A,n+288+32|0,(t=0|ig(-2,-1,0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~B:-33),0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~C:-1)))+1|0),$A(n+288|0,64),C>>>0>0|0==(0|C)&B>>>0>32&&$I(A+e|0,g+e|0,t=0|ig(0|B,0|C,0|e,0|Q),wB,i+16|0,n+256|0),$A(n+256|0,32),ng(n,A,B,C),bg(n,I),$A(n,256),oB=E,0}function H(A,I){I|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0;if(B=0|tB[(A|=0)+56>>2],g=0|tB[A+56+4>>2],!(0==(0|B)&0==(0|g))){for(C=1;;){if(nB[A+64+B>>0]=C,B=0|Qg(0|B,0|g,1,0),!((g=wB)>>>0<0|0==(0|g)&B>>>0<16))break;C=0}nB[A+80>>0]=1,a(A,A+64|0,16,0)}B=0|tB[A+24>>2],E=(((n=(((i=(5*((e=((E=((C=(0|tB[A+28>>2])+(B>>>26)|0)>>>26)+(0|tB[A+32>>2])|0)>>>26)+(0|tB[A+36>>2])|0)>>>26)|0)+(0|tB[A+20>>2])|0)>>>26)+(67108863&B)+((5+(67108863&i)|0)>>>26)|0)>>>26)+(67108863&C)|0)>>>26)+E&67108863&((Q=(-67108864|e)+((((n+(67108863&C)|0)>>>26)+(67108863&E)|0)>>>26)|0)>>>31)-1|Q>>31&67108863&E,i=0|Qg(i+5&67108863&(Q>>>31)-1|Q>>31&67108863&i|(B=(i>>>26)+(67108863&B)+((5+(67108863&i)|0)>>>26)&67108863&(Q>>>31)-1|Q>>31&(i>>>26)+(67108863&B))<<26|0,0,0|tB[A+40>>2],0),g=wB,g=0|Qg(0|(B=0|Qg(B>>>6|(n+C&67108863&(Q>>>31)-1|Q>>31&67108863&C)<<20|0,0,0|tB[A+44>>2],0)),0|wB,0|g,0),B=wB,B=0|Qg(0|(C=0|Qg((n+C&67108863&(Q>>>31)-1|Q>>31&67108863&C)>>>12|E<<14|0,0,0|tB[A+48>>2],0)),0|wB,0|B,0),C=wB,C=0|Qg(0|(e=0|Qg(E>>>18|((Q>>>31)-1&Q|Q>>31&e)<<8|0,0,0|tB[A+52>>2],0)),0|wB,0|C,0),ag(I,i),ag(I+4|0,g),ag(I+8|0,B),ag(I+12|0,C),$A(A,88)}function k(A,I,g){I|=0,g|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0,p=0;p=0|tB[(A|=0)>>2],l=0|tB[A+4>>2],s=0|tB[A+8>>2],y=0|tB[A+12>>2],c=0|tB[A+16>>2],a=0|tB[A+20>>2],t=0|tB[A+24>>2],E=0|tB[A+28>>2],e=0|tB[A+32>>2],C=0|tB[A+36>>2],u=0|tB[I>>2],h=0|tB[I+4>>2],w=0|tB[I+8>>2],f=0|tB[I+12>>2],o=0|tB[I+16>>2],r=0|tB[I+20>>2],n=0|tB[I+24>>2],Q=0|tB[I+28>>2],i=0|tB[I+32>>2],B=0|tB[I+36>>2],tB[A>>2]=(u^p)&0-g^p,tB[A+4>>2]=(h^l)&0-g^l,tB[A+8>>2]=(w^s)&0-g^s,tB[A+12>>2]=(f^y)&0-g^y,tB[A+16>>2]=(o^c)&0-g^c,tB[A+20>>2]=(r^a)&0-g^a,tB[A+24>>2]=(n^t)&0-g^t,tB[A+28>>2]=(Q^E)&0-g^E,tB[A+32>>2]=(i^e)&0-g^e,tB[A+36>>2]=(B^C)&0-g^C,tB[I>>2]=(u^p)&0-g^u,tB[I+4>>2]=(h^l)&0-g^h,tB[I+8>>2]=(w^s)&0-g^w,tB[I+12>>2]=(f^y)&0-g^f,tB[I+16>>2]=(o^c)&0-g^o,tB[I+20>>2]=(r^a)&0-g^r,tB[I+24>>2]=(n^t)&0-g^n,tB[I+28>>2]=(Q^E)&0-g^Q,tB[I+32>>2]=(i^e)&0-g^i,tB[I+36>>2]=(B^C)&0-g^B}function M(A,I,g,B,C,i,e){A|=0,I|=0,g|=0,B|=0,C|=0;var Q=0,E=0,n=0;return n=oB,E=oB=oB+63&-64,oB=oB+96|0,p(E,i|=0,e|=0),Ng(E+32|0,i+16|0,E),0|Ig(g,I,B,C,E+32|0)?($A(E,32),g=-1):A?((I>>>0>=A>>>0?0<C>>>0|0==(0|C)&(I-A|0)>>>0<B>>>0:0)?Q=8:(A>>>0>=I>>>0?0<C>>>0|0==(0|C)&(A-I|0)>>>0<B>>>0:0)&&(Q=8),8==(0|Q)&&(TA(0|A,0|I,0|B),I=A),0==(0|(g=C>>>0>0|0==(0|C)&B>>>0>32?32:B))&0==(0|(e=C>>>0>0|0==(0|C)&B>>>0>32?0:C))?gg(E+32|0,E+32|0,32,0,i+16|0,E):(v(E+32+32|0,0|I,(Q=0|ig(-2,-1,0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~B:-33),0|(~C>>>0>4294967295|-1==(0|~C)&~B>>>0>4294967263?~C:-1)))+1|0),gg(E+32|0,E+32|0,0|Qg(0|g,0|e,32,0),wB,i+16|0,E),v(0|A,E+32+32|0,Q+1|0)),C>>>0>0|0==(0|C)&B>>>0>32&&$I(A+g|0,I+g|0,0|ig(0|B,0|C,0|g,0|e),wB,i+16|0,E),$A(E,32),g=0):g=0,oB=n,0|g}function Y(A,I){var g=0,B=0,C=0;return C=oB,g=oB=oB+63&-64,oB=oB+208|0,o((A|=0)+40|0,I|=0),OI(A+80|0),n(g+160|0,A+40|0),Q(g+120|0,g+160|0,1104),j(g+160|0,g+160|0,A+80|0),T(g+120|0,g+120|0,A+80|0),n(g+80|0,g+120|0),Q(g+80|0,g+80|0,g+120|0),n(A,g+80|0),Q(A,A,g+120|0),Q(A,A,g+160|0),l(A,A),Q(A,A,g+80|0),Q(A,A,g+160|0),n(g+40|0,A),Q(g+40|0,g+40|0,g+120|0),j(g,g+40|0,g+160|0),0|DI(g)?(T(g,g+40|0,g+160|0),0|DI(g)?A=-1:(Q(A,A,1144),B=4)):B=4,4==(0|B)&&((0|(B=0|RI(A)))==((0|rB[I+31>>0])>>>7|0)&&rA(A,A),Q(A+120|0,A,A+40|0),A=0),oB=C,0|A}function b(A,I,g,B,C){A|=0,B|=0,C|=0;var i=0,e=0,Q=0,E=0,n=0,t=0,r=0;if(t=oB,r=oB=oB+63&-64,oB=oB+112|0,!(0==(0|(I|=0))&0==(0|(g|=0)))){i=(e=r+16|0)+32|0;do{nB[e>>0]=0|nB[C>>0],e=e+1|0,C=C+1|0}while((0|e)<(0|i));if(e=rB[B+4>>0]|rB[B+4+1>>0]<<8|rB[B+4+2>>0]<<16|rB[B+4+3>>0]<<24,tB[r>>2]=rB[B>>0]|rB[B+1>>0]<<8|rB[B+2>>0]<<16|rB[B+3>>0]<<24,tB[r+4>>2]=e,tB[r+8>>2]=0,tB[r+8+4>>2]=0,g>>>0>0|0==(0|g)&I>>>0>63){do{for(Pg(A,r,r+16|0),C=1,i=8;;){if(e=r+i|0,C=(0|rB[e>>0])+C|0,nB[e>>0]=C,16==(0|(i=i+1|0)))break;C>>>=8}I=0|Qg(0|I,0|g,-64,-1),g=wB,A=A+64|0}while(g>>>0>0|0==(0|g)&I>>>0>63);0==(0|I)&0==(0|g)||(E=A,n=I,Q=7)}else E=A,n=I,Q=7;if(7==(0|Q)?(Pg(r+48|0,r,r+16|0),0|n):0){C=0;do{nB[E+C>>0]=0|nB[r+48+C>>0],C=C+1|0}while((0|C)!=(0|n))}$A(r+48|0,64),$A(r+16|0,32)}oB=t}function v(A,I,g){A|=0,I|=0;var B=0,C=0,i=0;if((0|(g|=0))>=8192)return 0|GB(0|A,0|I,0|g);if(i=0|A,C=A+g|0,(3&A)==(3&I)){for(;3&A;){if(!g)return 0|i;nB[A>>0]=0|nB[I>>0],A=A+1|0,I=I+1|0,g=g-1|0}for(B=(g=-4&C|0)-64|0;(0|A)<=(0|B);)tB[A>>2]=tB[I>>2],tB[A+4>>2]=tB[I+4>>2],tB[A+8>>2]=tB[I+8>>2],tB[A+12>>2]=tB[I+12>>2],tB[A+16>>2]=tB[I+16>>2],tB[A+20>>2]=tB[I+20>>2],tB[A+24>>2]=tB[I+24>>2],tB[A+28>>2]=tB[I+28>>2],tB[A+32>>2]=tB[I+32>>2],tB[A+36>>2]=tB[I+36>>2],tB[A+40>>2]=tB[I+40>>2],tB[A+44>>2]=tB[I+44>>2],tB[A+48>>2]=tB[I+48>>2],tB[A+52>>2]=tB[I+52>>2],tB[A+56>>2]=tB[I+56>>2],tB[A+60>>2]=tB[I+60>>2],A=A+64|0,I=I+64|0;for(;(0|A)<(0|g);)tB[A>>2]=tB[I>>2],A=A+4|0,I=I+4|0}else for(g=C-4|0;(0|A)<(0|g);)nB[A>>0]=0|nB[I>>0],nB[A+1>>0]=0|nB[I+1>>0],nB[A+2>>0]=0|nB[I+2>>0],nB[A+3>>0]=0|nB[I+3>>0],A=A+4|0,I=I+4|0;for(;(0|A)<(0|C);)nB[A>>0]=0|nB[I>>0],A=A+1|0,I=I+1|0;return 0|i}function S(A){var I=0,g=0,B=0,C=0,i=0;g=oB,B=oB=oB+63&-64,oB=oB+48|0,C=A|=0,i=(I=B)+32|0;do{nB[I>>0]=0|nB[C>>0],I=I+1|0,C=C+1|0}while((0|I)<(0|i));C=rB[A+36>>0]|rB[A+36+1>>0]<<8|rB[A+36+2>>0]<<16|rB[A+36+3>>0]<<24,I=rB[A+36+4>>0]|rB[A+36+4+1>>0]<<8|rB[A+36+4+2>>0]<<16|rB[A+36+4+3>>0]<<24,nB[B+32>>0]=C,nB[B+32+1>>0]=C>>8,nB[B+32+2>>0]=C>>16,nB[B+32+3>>0]=C>>24,nB[B+32+4>>0]=I,nB[B+32+4+1>>0]=I>>8,nB[B+32+4+2>>0]=I>>16,nB[B+32+4+3>>0]=I>>24,yg(B,B,A+32|0,A),C=B,i=(I=A)+32|0;do{nB[I>>0]=0|nB[C>>0],I=I+1|0,C=C+1|0}while((0|I)<(0|i));C=rB[B+32>>0]|rB[B+32+1>>0]<<8|rB[B+32+2>>0]<<16|rB[B+32+3>>0]<<24,i=rB[B+32+4>>0]|rB[B+32+4+1>>0]<<8|rB[B+32+4+2>>0]<<16|rB[B+32+4+3>>0]<<24,nB[A+36>>0]=C,nB[A+36+1>>0]=C>>8,nB[A+36+2>>0]=C>>16,nB[A+36+3>>0]=C>>24,nB[A+36+4>>0]=i,nB[A+36+4+1>>0]=i>>8,nB[A+36+4+2>>0]=i>>16,nB[A+36+4+3>>0]=i>>24,TI(A),oB=g}function m(A,I){A|=0,I|=0;var g=0,B=0,C=0,i=0,e=0;B=oB,C=oB=oB+63&-64,oB=oB+464|0,g=0;do{e=0|nB[I+g>>0],nB[C+400+(i=g<<1)>>0]=15&e,nB[C+400+(1|i)>>0]=(255&e)>>>4,g=g+1|0}while(32!=(0|g));g=0,I=0;do{g=134217728+((i=(0|rB[(e=C+400+I|0)>>0])+g|0)<<24)>>28,nB[e>>0]=i-(g<<4),I=I+1|0}while(63!=(0|I));nB[C+400+63>>0]=(0|rB[C+400+63>>0])+g,XI(A),g=1;do{O(C,(0|g)/2|0,0|nB[C+400+g>>0]),eA(C+240|0,A,C),BI(A,C+240|0),g=g+2|0}while((0|g)<64);jI(C+240|0,A),sI(C+120|0,C+240|0),wA(C+240|0,C+120|0),sI(C+120|0,C+240|0),wA(C+240|0,C+120|0),sI(C+120|0,C+240|0),wA(C+240|0,C+120|0),BI(A,C+240|0),g=0;do{O(C,(0|g)/2|0,0|nB[C+400+g>>0]),eA(C+240|0,A,C),BI(A,C+240|0),g=g+2|0}while((0|g)<64);oB=B}function N(A,I,g,B,C){A|=0,g|=0,B|=0,C|=0;var i=0,e=0,Q=0;e=oB,Q=oB=oB+63&-64,oB=oB+192|0,((I|=0)+-1&255)>63&&EB(),g||EB(),nB[Q+128>>0]=I,nB[Q+128+1>>0]=32,nB[Q+128+2>>0]=1,nB[Q+128+3>>0]=1,kg(Q+128+4|0),YI(Q+128+8|0),i=(I=Q+128+16|0)+16|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|i));if(B)UI(Q+128|0,B);else{i=(I=Q+128+32|0)+16|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|i))}if(C)mI(Q+128|0,C);else{i=(I=Q+128+48|0)+16|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|i))}KA(A,Q+128|0),i=(I=Q+32|0)+96|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|i));i=(I=Q)+32|0;do{nB[I>>0]=0|nB[g>>0],I=I+1|0,g=g+1|0}while((0|I)<(0|i));X(A,Q,128,0),$A(Q,128),oB=e}function R(A,I,g,B,C,i,e,Q,E,n,t){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0;var r=0;r=oB,oB=oB+352|0,fg(r+280|0,64,0,n|=0,t|=0),vg(r,r+280|0),$A(r+280|0,64),ng(r,e,Q,E),ng(r,35352,15&(I=0|ig(0,0,0|Q,0|E)),0),ng(r,g,B,C),ng(r,35352,15&(I=0|ig(0,0,0|B,0|C)),0),oI(r+272|0,Q,E),ng(r,r+272|0,8,0),oI(r+272|0,B,C),ng(r,r+272|0,8,0),bg(r,r+256|0),$A(r,256),I=0|Zg(r+256|0,i),$A(r+256|0,16);do{if(A){if(I){AA(0|A,0,0|B),I=-1;break}VI(A,g,B,C,n,1,t),I=0;break}}while(0);return oB=r,0|I}function U(A,I,g,B,C,i){I|=0,g|=0,B|=0,C|=0,i|=0;var Q=0,E=0,n=0,t=0;if(t=oB,n=oB=oB+63&-64,oB=oB+592|0,(0==(0|JA((A|=0)+32|0))?0==(0|XA(A)):0)?0==(0|Y(n+328|0,C)):0){Q=0,E=0;do{E=0|rB[C+Q>>0]|E,Q=Q+1|0}while(32!=(0|Q));E?(tg(n,i),s(n,A,32,0),s(n,C,32,0),s(n,I,g,B),hI(n,n+520|0),e(n+520|0),y(n+208|0,n+520|0,n+328|0,A+32|0),HA(n+488|0,n+208|0),Q=0|Tg(n+488|0,A),Q=0|((n+488|0)==(0|A)?-1:Q)|GA(A,n+488|0,32)):Q=-1}else Q=-1;return oB=t,0|Q}function P(A,I,g){I|=0,g|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0;u=0|tB[(A|=0)>>2],h=0|tB[A+4>>2],w=0|tB[A+8>>2],f=0|tB[A+12>>2],o=0|tB[A+16>>2],r=0|tB[A+20>>2],n=0|tB[A+24>>2],Q=0|tB[A+28>>2],i=0|tB[A+32>>2],B=0|tB[A+36>>2],l=(tB[I+4>>2]^h)&0-g,s=(tB[I+8>>2]^w)&0-g,y=(tB[I+12>>2]^f)&0-g,c=(tB[I+16>>2]^o)&0-g,a=(tB[I+20>>2]^r)&0-g,t=(tB[I+24>>2]^n)&0-g,E=(tB[I+28>>2]^Q)&0-g,e=(tB[I+32>>2]^i)&0-g,C=(tB[I+36>>2]^B)&0-g,tB[A>>2]=(tB[I>>2]^u)&0-g^u,tB[A+4>>2]=l^h,tB[A+8>>2]=s^w,tB[A+12>>2]=y^f,tB[A+16>>2]=c^o,tB[A+20>>2]=a^r,tB[A+24>>2]=t^n,tB[A+28>>2]=E^Q,tB[A+32>>2]=e^i,tB[A+36>>2]=C^B}function J(A,I,g,B,i,Q,E){A|=0,I|=0,g|=0,B|=0,i|=0,Q|=0;var n=0,t=0;n=oB,t=oB=oB+63&-64,oB=oB+560|0,tg(t,E|=0),EI(t+496|0,Q,32,0),s(t,t+496+32|0,32,0),s(t,g,B,i),hI(t,t+432|0),TA(A+32|0,Q+32|0,32),e(t+432|0),m(t+208|0,t+432|0),HA(A,t+208|0),tg(t,E),s(t,A,64,0),s(t,g,B,i),hI(t,t+368|0),e(t+368|0),_g(t+496|0),C(A+32|0,t+368|0,t+496|0,t+432|0),$A(t+496|0,64),$A(t+432|0,64),0|I&&(tB[I>>2]=64,tB[I+4>>2]=0),oB=n}function L(A,I){A|=0,I|=0;var g=0,B=0,C=0,i=0,e=0;g=0;do{nB[A+g>>0]=(0|rB[I+(g>>3)>>0])>>>(7&g)&1,g=g+1|0}while(256!=(0|g));i=0;do{e=A+i|0;A:do{if(0|nB[e>>0]){C=1;do{if((0|(g=C+i|0))>=256)break A;I=0|nB[A+g>>0];I:do{if(I<<24>>24){if(I=I<<24>>24<<C,((B=0|nB[e>>0])+I|0)<16){nB[e>>0]=B+I,nB[A+g>>0]=0;break}if((B-I|0)<=-16)break A;for(nB[e>>0]=B-I;;){if(I=A+g|0,!(0|nB[I>>0]))break;if(nB[I>>0]=0,(0|(g=g+1|0))>=256)break I}nB[I>>0]=1}}while(0);C=C+1|0}while((0|C)<7)}}while(0);i=i+1|0}while(256!=(0|i))}function x(A,I,g,B,C,i,e,Q,E,n,t,r){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,r|=0,n=oB,oB=oB+336|0,fg(n+264|0,64,0,t,r),vg(n,n+264|0),$A(n+264|0,64),ng(n,e,Q,E),e=0|ig(0,0,0|Q,0|E),ng(n,35352,15&e,0),VI(A,B,C,i,t,1,r),ng(n,A,C,i),e=0|ig(0,0,0|C,0|i),ng(n,35352,15&e,0),oI(n+256|0,Q,E),ng(n,n+256|0,8,0),oI(n+256|0,C,i),ng(n,n+256|0,8,0),bg(n,I),$A(n,256),0|g&&(tB[g>>2]=16,tB[g+4>>2]=0),oB=n,0}function X(A,I,g,C){A|=0,I|=0,g|=0,C|=0;var i=0,e=0,Q=0,E=0;A:do{if(!(0==(0|g)&0==(0|C))){for(i=0|tB[A+352>>2],E=C;;){if(Q=256-i|0,C=A+96+i|0,!(E>>>0>0|0==(0|E)&g>>>0>Q>>>0))break;v(0|C,0|I,0|Q),tB[A+352>>2]=(0|tB[A+352>>2])+Q,mA(A,128,0),B(A,A+96|0),i=A+224|0,e=(C=A+96|0)+128|0;do{nB[C>>0]=0|nB[i>>0],C=C+1|0,i=i+1|0}while((0|C)<(0|e));if(i=(0|tB[A+352>>2])-128|0,tB[A+352>>2]=i,g=0|ig(0|g,0|E,0|Q,0),C=wB,0==(0|g)&0==(0|C))break A;I=I+Q|0,E=C}v(0|C,0|I,0|g),E=0|Qg(0|tB[A+352>>2],0,0|g,0|E),tB[A+352>>2]=E}}while(0)}function K(A,I,g,B,C,i,e,Q,E,n,t){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0;var r=0;r=oB,oB=oB+352|0,Rg(r+280|0,n|=0,t|=0),vg(r,r+280|0),$A(r+280|0,64),ng(r,e,Q,E),oI(r+272|0,Q,E),ng(r,r+272|0,8,0),ng(r,g,B,C),oI(r+272|0,B,C),ng(r,r+272|0,8,0),bg(r,r+256|0),$A(r,256),I=0|Zg(r+256|0,i),$A(r+256|0,16);do{if(A){if(I){AA(0|A,0,0|B),I=-1;break}Bg(A,g,B,C,n,t),I=0;break}}while(0);return oB=r,0|I}function V(A,I,g){A|=0,I|=0;var C=0,i=0,e=0;if((g|=0)<<24>>24?(255&g)<=64:0){if(0|Vg(0|tB[A+80>>2],0|tB[A+80+4>>2]))C=-1;else{C=0|tB[A+352>>2];do{if(C>>>0>128){if(mA(A,128,0),B(A,A+96|0),C=(0|tB[A+352>>2])-128|0,tB[A+352>>2]=C,C>>>0<129){v(A+96|0,A+224|0,0|C),i=A+96|0,e=0|tB[A+352>>2];break}FB(33401,33433,370,33478)}else i=A+96|0,e=C}while(0);mA(A,e,0),rg(A),AA(A+96+(C=0|tB[A+352>>2])|0,0,256-C|0),B(A,i),v(0|I,0|A,255&g|0),$A(A,64),$A(i,256),C=0}return 0|C}return EB(),0}function j(A,I,g){A|=0,g|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0;r=(0|tB[(I|=0)+4>>2])-(0|tB[g+4>>2])|0,t=(0|tB[I+8>>2])-(0|tB[g+8>>2])|0,n=(0|tB[I+12>>2])-(0|tB[g+12>>2])|0,E=(0|tB[I+16>>2])-(0|tB[g+16>>2])|0,Q=(0|tB[I+20>>2])-(0|tB[g+20>>2])|0,e=(0|tB[I+24>>2])-(0|tB[g+24>>2])|0,i=(0|tB[I+28>>2])-(0|tB[g+28>>2])|0,C=(0|tB[I+32>>2])-(0|tB[g+32>>2])|0,B=(0|tB[I+36>>2])-(0|tB[g+36>>2])|0,tB[A>>2]=(0|tB[I>>2])-(0|tB[g>>2]),tB[A+4>>2]=r,tB[A+8>>2]=t,tB[A+12>>2]=n,tB[A+16>>2]=E,tB[A+20>>2]=Q,tB[A+24>>2]=e,tB[A+28>>2]=i,tB[A+32>>2]=C,tB[A+36>>2]=B}function T(A,I,g){A|=0,I|=0;var B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0;r=(0|tB[(g|=0)+4>>2])+(0|tB[I+4>>2])|0,t=(0|tB[g+8>>2])+(0|tB[I+8>>2])|0,n=(0|tB[g+12>>2])+(0|tB[I+12>>2])|0,E=(0|tB[g+16>>2])+(0|tB[I+16>>2])|0,Q=(0|tB[g+20>>2])+(0|tB[I+20>>2])|0,e=(0|tB[g+24>>2])+(0|tB[I+24>>2])|0,i=(0|tB[g+28>>2])+(0|tB[I+28>>2])|0,C=(0|tB[g+32>>2])+(0|tB[I+32>>2])|0,B=(0|tB[g+36>>2])+(0|tB[I+36>>2])|0,tB[A>>2]=(0|tB[g>>2])+(0|tB[I>>2]),tB[A+4>>2]=r,tB[A+8>>2]=t,tB[A+12>>2]=n,tB[A+16>>2]=E,tB[A+20>>2]=Q,tB[A+24>>2]=e,tB[A+28>>2]=i,tB[A+32>>2]=C,tB[A+36>>2]=B}function Z(A,I){A|=0,I|=0;var g=0,B=0;A:do{if(255&I){if(3&A)do{if((B=0|nB[A>>0])<<24>>24==0?1:B<<24>>24==(255&I)<<24>>24)break A;A=A+1|0}while(0!=(3&A|0));B=0|sB(255&I,16843009),g=0|tB[A>>2];I:do{if(!((-2139062144&g^-2139062144)&g+-16843009))do{if((-2139062144&(g^=B)^-2139062144)&g+-16843009|0)break I;g=0|tB[(A=A+4|0)>>2]}while(!((-2139062144&g^-2139062144)&g+-16843009|0))}while(0);for(;;){if((B=0|nB[A>>0])<<24>>24==0?1:B<<24>>24==(255&I)<<24>>24)break;A=A+1|0}}else A=A+(0|sA(A))|0}while(0);return 0|A}function W(A,I){I|=0;var g=0,B=0,C=0;C=oB,oB=oB+192|0,QI(A|=0),B=(g=C+64+1|0)+127|0;do{nB[g>>0]=54,g=g+1|0}while((0|g)<(0|B));nB[C+64>>0]=54^nB[I>>0],g=1;do{nB[(B=C+64+g|0)>>0]=nB[B>>0]^nB[I+g>>0],g=g+1|0}while(32!=(0|g));s(A,C+64|0,128,0),QI(A+208|0),B=(g=C+64+1|0)+127|0;do{nB[g>>0]=92,g=g+1|0}while((0|g)<(0|B));nB[C+64>>0]=92^nB[I>>0],g=1;do{nB[(B=C+64+g|0)>>0]=nB[B>>0]^nB[I+g>>0],g=g+1|0}while(32!=(0|g));s(A+208|0,C+64|0,128,0),$A(C+64|0,128),$A(C,64),oB=C}function q(A,I,g,B,C,i){A|=0,I|=0,g|=0,B|=0,i|=0;var e=0,Q=0,E=0;return Q=oB,e=oB=oB+63&-64,oB=oB+32|0,E=rB[(C|=0)+4>>0]|rB[C+4+1>>0]<<8|rB[C+4+2>>0]<<16|rB[C+4+3>>0]<<24,tB[e>>2]=rB[C>>0]|rB[C+1>>0]<<8|rB[C+2>>0]<<16|rB[C+3>>0]<<24,tB[e+4>>2]=E,tB[e+8>>2]=0,tB[e+8+4>>2]=0,oI(e+16|0,g,B),C=e+16+8|0,nB[C>>0]=0,nB[C+1>>0]=0,nB[C+2>>0]=0,nB[C+3>>0]=0,C=e+16+8+4|0,nB[C>>0]=0,nB[C+1>>0]=0,nB[C+2>>0]=0,nB[C+3>>0]=0,(I+-16|0)>>>0>48?(tB[8242]=22,A=-1):A=0|pI(A,I,i,e+16|0,e),oB=Q,0|A}function O(A,I,g){A|=0,I|=0;var B=0,C=0,i=0;B=oB,i=oB=oB+63&-64,oB=oB+128|0,g=((g|=0)<<24>>24)-((g<<24>>24&0-(255&(C=0|Gg(g))))<<1)&255,eg(A),Cg(A,2184+(960*I|0)|0,0|jg(g,1)),Cg(A,2184+(960*I|0)+120|0,0|jg(g,2)),Cg(A,2184+(960*I|0)+240|0,0|jg(g,3)),Cg(A,2184+(960*I|0)+360|0,0|jg(g,4)),Cg(A,2184+(960*I|0)+480|0,0|jg(g,5)),Cg(A,2184+(960*I|0)+600|0,0|jg(g,6)),Cg(A,2184+(960*I|0)+720|0,0|jg(g,7)),Cg(A,2184+(960*I|0)+840|0,0|jg(g,8)),fA(i,A+40|0),fA(i+40|0,A),rA(i+80|0,A+80|0),Cg(A,i,C),oB=B}function z(A,I,g,B,C,i,e,Q,E,n,t,r){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,r|=0,n=oB,oB=oB+336|0,Rg(n+264|0,t,r),vg(n,n+264|0),$A(n+264|0,64),ng(n,e,Q,E),oI(n+256|0,Q,E),ng(n,n+256|0,8,0),Bg(A,B,C,i,t,r),ng(n,A,C,i),oI(n+256|0,C,i),ng(n,n+256|0,8,0),bg(n,I),$A(n,256),0|g&&(tB[g>>2]=16,tB[g+4>>2]=0),oB=n,0}function $(A,I,g,B){A|=0,g|=0,B|=0;var C=0,i=0,e=0;if(i=oB,e=oB=oB+63&-64,oB=oB+192|0,((I|=0)+-1&255)>63&&EB(),!((B+-1&255)>63|0==(0|g))){nB[e+128>>0]=I,nB[e+128+1>>0]=B,nB[e+128+2>>0]=1,nB[e+128+3>>0]=1,kg(e+128+4|0),YI(e+128+8|0),C=(I=e+128+16|0)+48|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|C));return KA(A,e+128|0),AA(e+(255&B)|0,0,0|(B<<24>>24<0?0:128-(255&B)|0)),v(0|e,0|g,255&B|0),X(A,e,128,0),$A(e,128),void(oB=i)}EB()}function AA(A,I,g){I|=0;var B=0,C=0;if(B=(A|=0)+(g|=0)|0,I&=255,(0|g)>=67){for(;3&A;)nB[A>>0]=I,A=A+1|0;for(C=I|I<<8|I<<16|I<<24;(0|A)<=((-4&B)-64|0);)tB[A>>2]=C,tB[A+4>>2]=C,tB[A+8>>2]=C,tB[A+12>>2]=C,tB[A+16>>2]=C,tB[A+20>>2]=C,tB[A+24>>2]=C,tB[A+28>>2]=C,tB[A+32>>2]=C,tB[A+36>>2]=C,tB[A+40>>2]=C,tB[A+44>>2]=C,tB[A+48>>2]=C,tB[A+52>>2]=C,tB[A+56>>2]=C,tB[A+60>>2]=C,A=A+64|0;for(;(0|A)<(-4&B|0);)tB[A>>2]=C,A=A+4|0}for(;(0|A)<(0|B);)nB[A>>0]=I,A=A+1|0;return B-g|0}function IA(A,I,g){g|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+48|0,T(A|=0,(I|=0)+40|0,I),j(A+40|0,I+40|0,I),Q(A+80|0,A,g),Q(A+40|0,A+40|0,g+40|0),Q(A+120|0,g+120|0,I+120|0),Q(A,I+80|0,g+80|0),T(C,A,A),j(A,A+80|0,A+40|0),T(A+40|0,A+80|0,A+40|0),T(A+80|0,C,A+120|0),j(A+120|0,C,A+120|0),oB=B}function gA(A,I,g){g|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+48|0,T(A|=0,(I|=0)+40|0,I),j(A+40|0,I+40|0,I),Q(A+80|0,A,g+40|0),Q(A+40|0,A+40|0,g),Q(A+120|0,g+120|0,I+120|0),Q(A,I+80|0,g+80|0),T(C,A,A),j(A,A+80|0,A+40|0),T(A+40|0,A+80|0,A+40|0),j(A+80|0,C,A+120|0),T(A+120|0,C,A+120|0),oB=B}function BA(A,I,g,B,C,i,e,Q,E,n,t,r){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,r|=0,n=oB,oB=oB+48|0,tB[n>>2]=0,w(n+16|0,t,r,0),r=rB[t+16+4>>0]|rB[t+16+4+1>>0]<<8|rB[t+16+4+2>>0]<<16|rB[t+16+4+3>>0]<<24,tB[n+4>>2]=rB[t+16>>0]|rB[t+16+1>>0]<<8|rB[t+16+2>>0]<<16|rB[t+16+3>>0]<<24,tB[n+4+4>>2]=r,x(A,I,g,B,C,i,e,Q,E,0,n,n+16|0),$A(n+16|0,32),oB=n,0}function CA(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0,C|=0;var i=0,e=0;A:do{if(C){i=0|tB[g>>2];I:for(;;){if(i>>>0>=I>>>0){C=34;break}for(;;){if((e=0|nB[A+i>>0])<<24>>24==61)break;if(!B){C=22;break I}if(!(0|dg(B,e<<24>>24))){C=22;break I}if(i=i+1|0,tB[g>>2]=i,i>>>0>=I>>>0){C=34;break I}}if(C=C+-1|0,i=i+1|0,tB[g>>2]=i,!C){C=0;break A}}tB[8242]=C,C=-1}else C=0}while(0);return 0|C}function iA(A,I,g){g|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+48|0,T(A|=0,(I|=0)+40|0,I),j(A+40|0,I+40|0,I),Q(A+80|0,A,g+40|0),Q(A+40|0,A+40|0,g),Q(A+120|0,g+80|0,I+120|0),T(C,I+80|0,I+80|0),j(A,A+80|0,A+40|0),T(A+40|0,A+80|0,A+40|0),j(A+80|0,C,A+120|0),T(A+120|0,C,A+120|0),oB=B}function eA(A,I,g){g|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+48|0,T(A|=0,(I|=0)+40|0,I),j(A+40|0,I+40|0,I),Q(A+80|0,A,g),Q(A+40|0,A+40|0,g+40|0),Q(A+120|0,g+80|0,I+120|0),T(C,I+80|0,I+80|0),j(A,A+80|0,A+40|0),T(A+40|0,A+80|0,A+40|0),T(A+80|0,C,A+120|0),j(A+120|0,C,A+120|0),oB=B}function QA(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,I=oB,oB=oB+48|0,tB[I>>2]=0,w(I+16|0,n,t,0),t=rB[n+16+4>>0]|rB[n+16+4+1>>0]<<8|rB[n+16+4+2>>0]<<16|rB[n+16+4+3>>0]<<24,tB[I+4>>2]=rB[n+16>>0]|rB[n+16+1>>0]<<8|rB[n+16+2>>0]<<16|rB[n+16+3>>0]<<24,tB[I+4+4>>2]=t,n=0|R(A,0,g,B,C,i,e,Q,E,I,I+16|0),$A(I+16|0,32),oB=I,0|n}function EA(A,I){I|=0,tB[(A|=0)>>2]=67108863&(0|Fg(I)),tB[A+4>>2]=(0|Fg(I+3|0))>>>2&67108611,tB[A+8>>2]=(0|Fg(I+6|0))>>>4&67092735,tB[A+12>>2]=(0|Fg(I+9|0))>>>6&66076671,tB[A+16>>2]=(0|Fg(I+12|0))>>>8&1048575,tB[A+20>>2]=0,tB[A+20+4>>2]=0,tB[A+20+8>>2]=0,tB[A+20+12>>2]=0,tB[A+20+16>>2]=0,tB[A+40>>2]=0|Fg(I+16|0),tB[A+44>>2]=0|Fg(I+20|0),tB[A+48>>2]=0|Fg(I+24|0),tB[A+52>>2]=0|Fg(I+28|0),tB[A+56>>2]=0,tB[A+56+4>>2]=0,nB[A+80>>0]=0}function nA(A,I,g,B,C,i,e){A|=0,g|=0,B|=0,e|=0;var Q=0,E=0;Q=oB,E=oB=oB+63&-64,oB=oB+384|0,0==(0|(I|=0))&(0!=(0|(C|=0))|0!=(0|(i|=0)))&&EB(),A||EB(),(B+-1&255)>63&&EB(),0!=(0|g)|e<<24>>24!=0^1||EB(),(255&e)>64&&EB(),e<<24>>24?$(E,B,g,e):pA(E,B),X(E,I,C,i),V(E,A,B),oB=Q}function tA(A,I,g,B,C,i){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0;var e=0,Q=0,E=0;do{if(C>>>0<0|0==(0|C)&B>>>0<64?!0:(e=0|Qg(0|B,0|C,-64,-1),(Q=wB)>>>0>0|0==(0|Q)&e>>>0>4294967231))E=8;else{if(0|Ag(g,g+64|0,e,Q,i)){AA(0|A,0,0|e),E=8;break}0|I&&(tB[I>>2]=e,tB[I+4>>2]=Q),TA(0|A,g+64|0,0|e),A=0}}while(0);return 8==(0|E)&&(I?(tB[I>>2]=0,tB[I+4>>2]=0,A=-1):A=-1),0|A}function rA(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0;t=0-(0|tB[(I|=0)+4>>2])|0,n=0-(0|tB[I+8>>2])|0,E=0-(0|tB[I+12>>2])|0,Q=0-(0|tB[I+16>>2])|0,e=0-(0|tB[I+20>>2])|0,i=0-(0|tB[I+24>>2])|0,C=0-(0|tB[I+28>>2])|0,B=0-(0|tB[I+32>>2])|0,g=0-(0|tB[I+36>>2])|0,tB[A>>2]=0-(0|tB[I>>2]),tB[A+4>>2]=t,tB[A+8>>2]=n,tB[A+12>>2]=E,tB[A+16>>2]=Q,tB[A+20>>2]=e,tB[A+24>>2]=i,tB[A+28>>2]=C,tB[A+32>>2]=B,tB[A+36>>2]=g}function aA(A,I,g,B,C,i){I|=0,C|=0,i|=0;var e=0,Q=0;return e=oB,Q=oB=oB+63&-64,oB=oB+16|0,TA((A|=0)+64|0,0|(g|=0),0|(B|=0)),zI(A,Q,A+64|0,B,C,i),64==(0|tB[Q>>2])&0==(0|tB[Q+4>>2])?0|I?(A=0|Qg(0|B,0|C,64,0),tB[I>>2]=A,tB[I+4>>2]=wB,A=0):A=0:(0|I&&(tB[I>>2]=0,tB[I+4>>2]=0),AA(0|A,0,0|(Q=0|Qg(0|B,0|C,64,0))),A=-1),oB=e,0|A}function oA(A){return((0-((0-(95^(A|=0))|0)>>>8&63^63|(0-(45^A)|0)>>>8&62^62|((A+65439|0)>>>8^255)&A+185&((122-A|0)>>>8&255^255)|((A+-65|0)>>>8^255)&A+-65&((90-A|0)>>>8&255^255)|((A+65488|0)>>>8^255)&A+4&((57-A|0)>>>8&255^255))|0)>>>8&255^255)&(0-(65^A)|0)>>>8|(0-(95^A)|0)>>>8&63^63|(0-(45^A)|0)>>>8&62^62|((A+65439|0)>>>8^255)&A+185&((122-A|0)>>>8&255^255)|((A+-65|0)>>>8^255)&A+-65&((90-A|0)>>>8&255^255)|((A+65488|0)>>>8^255)&A+4&((57-A|0)>>>8&255^255)|0}function cA(A,I){I|=0;var g=0,B=0,C=0;if(!1|!0&(112&(g=0|WI(0|tB[(A|=0)+72>>2],0|tB[A+72+4>>2],3)))>>>0<112)v(A+80+(127&g)|0,33697,112-(127&g)|0),g=A+80|0,B=I+640|0,C=A;else{v(A+80+(127&g)|0,33697,128-(127&g)|0),i(A,A+80|0,I,I+640|0),B=(g=A+80|0)+112|0;do{tB[g>>2]=0,g=g+4|0}while((0|g)<(0|B));g=A+80|0,B=I+640|0,C=A}nI(A+192|0,A+64|0,16),i(C,g,I,B)}function fA(A,I){A|=0;var g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0;t=0|tB[(I|=0)+4>>2],n=0|tB[I+8>>2],E=0|tB[I+12>>2],Q=0|tB[I+16>>2],e=0|tB[I+20>>2],i=0|tB[I+24>>2],C=0|tB[I+28>>2],B=0|tB[I+32>>2],g=0|tB[I+36>>2],tB[A>>2]=tB[I>>2],tB[A+4>>2]=t,tB[A+8>>2]=n,tB[A+12>>2]=E,tB[A+16>>2]=Q,tB[A+20>>2]=e,tB[A+24>>2]=i,tB[A+28>>2]=C,tB[A+32>>2]=B,tB[A+36>>2]=g}function yA(A){return((0-((0-(47^(A|=0))|0)>>>8&63^63|(0-(43^A)|0)>>>8&62^62|((A+65439|0)>>>8^255)&A+185&((122-A|0)>>>8&255^255)|((A+-65|0)>>>8^255)&A+-65&((90-A|0)>>>8&255^255)|((A+65488|0)>>>8^255)&A+4&((57-A|0)>>>8&255^255))|0)>>>8&255^255)&(0-(65^A)|0)>>>8|(0-(47^A)|0)>>>8&63^63|(0-(43^A)|0)>>>8&62^62|((A+65439|0)>>>8^255)&A+185&((122-A|0)>>>8&255^255)|((A+-65|0)>>>8^255)&A+-65&((90-A|0)>>>8&255^255)|((A+65488|0)>>>8^255)&A+4&((57-A|0)>>>8&255^255)|0}function wA(A,I){var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+48|0,n(A|=0,I|=0),n(A+80|0,I+40|0),E(A+120|0,I+80|0),T(A+40|0,I,I+40|0),n(B,A+40|0),T(A+40|0,A+80|0,A),j(A+80|0,A+80|0,A),j(A,B,A+40|0),j(A+120|0,A+120|0,A+80|0),oB=g}function sA(A){A|=0;var I=0,g=0,B=0;A:do{if(3&A)for(I=A,g=A;;){if(!(0|nB[I>>0])){I=g;break A}if(I=I+1|0,!(3&(g=I))){B=4;break}}else I=A,B=4}while(0);if(4==(0|B)){for(;;){if((-2139062144&(g=0|tB[I>>2])^-2139062144)&g+-16843009)break;I=I+4|0}if((255&g)<<24>>24)do{I=I+1|0}while(0!=(0|nB[I>>0]))}return I-A|0}function hA(A,I){A|=0,I|=0;var g=0,B=0,C=0,i=0;C=oB,i=oB=oB+63&-64,oB=oB+240|0,g=(B=i+200|0)+32|0;do{nB[B>>0]=0|nB[I>>0],B=B+1|0,I=I+1|0}while((0|B)<(0|g));return nB[i+200>>0]=-8&nB[i+200>>0],nB[i+200+31>>0]=63&nB[i+200+31>>0]|64,m(i+40|0,i+200|0),xA(i,i+40+40|0,i+40+80|0),u(A,i),oB=C,0}function lA(A){var I=0,g=0,B=0,C=0,i=0,e=0,Q=0;return i=0|rB[(A|=0)+7>>0],e=0|ZI(0|rB[A+6>>0],0,8),Q=wB,C=0|ZI(0|rB[A+5>>0],0,16),Q|=wB,B=0|ZI(0|rB[A+4>>0],0,24),Q=Q|wB|0|rB[A+3>>0],g=0|ZI(0|rB[A+2>>0],0,40),Q|=wB,I=0|ZI(0|rB[A+1>>0],0,48),Q|=wB,A=0|ZI(0|rB[A>>0],0,56),wB|=Q,e|i|C|B|g|I|A|0}function uA(A,I){I|=0,tB[(A|=0)>>2]=1634760805,tB[A+4>>2]=857760878,tB[A+8>>2]=2036477234,tB[A+12>>2]=1797285236,tB[A+16>>2]=0|Fg(I),tB[A+20>>2]=0|Fg(I+4|0),tB[A+24>>2]=0|Fg(I+8|0),tB[A+28>>2]=0|Fg(I+12|0),tB[A+32>>2]=0|Fg(I+16|0),tB[A+36>>2]=0|Fg(I+20|0),tB[A+40>>2]=0|Fg(I+24|0),tB[A+44>>2]=0|Fg(I+28|0)}function pA(A,I){A|=0;var g=0,B=0,C=0;if(B=oB,C=oB=oB+63&-64,oB=oB+64|0,!(((I|=0)+-1&255)>63)){nB[C>>0]=I,nB[C+1>>0]=0,nB[C+2>>0]=1,nB[C+3>>0]=1,kg(C+4|0),YI(C+8|0),g=(I=C+16|0)+48|0;do{nB[I>>0]=0,I=I+1|0}while((0|I)<(0|g));return KA(A,C),void(oB=B)}EB()}function DA(A,I,g,B,C){I|=0,g|=0,B|=0,C|=0;var i=0,e=0;if(i=oB,e=oB=oB+63&-64,oB=oB+384|0,(A|=0)||EB(),(g+-1&255)>63&&EB(),I)return N(e,g,I,B,C),X(e,0,0,0),V(e,A,g),void(oB=i);EB()}function _A(A,I,g,B){A|=0,I|=0,g|=0,B|=0;do{if(!(g>>>0>64|(B+-1|0)>>>0>63)){if(B>>>0>=256&&FB(33512,33532,53,33632),g>>>0>=256&&FB(33612,33532,54,33632),0==(0|I)|0==(0|g)){pA(A,255&B),A=0;break}$(A,255&B,I,255&g),A=0;break}A=-1}while(0);return 0|A}function dA(A,I,g){A|=0,I|=0,g|=0;var B=0,C=0;if(B=oB,C=oB=oB+63&-64,oB=oB+16|0,tB[C+8>>2]=A,tB[C+4>>2]=I,tB[C>>2]=0,(0|g)>0){A=0;do{tB[C>>2]=255&(nB[(0|tB[C+4>>2])+A>>0]^nB[(0|tB[C+8>>2])+A>>0])|tB[C>>2],A=A+1|0}while((0|A)!=(0|g))}return oB=B,((511+(0|tB[C>>2])|0)>>>8&1)-1|0}function GA(A,I,g){A|=0,I|=0,g|=0;var B=0,C=0;if(B=oB,C=oB=oB+63&-64,oB=oB+16|0,tB[C+4>>2]=A,tB[C>>2]=I,nB[C+8>>0]=0,0|g){A=0;do{nB[C+8>>0]=nB[C+8>>0]|nB[(0|tB[C>>2])+A>>0]^nB[(0|tB[C+4>>2])+A>>0],A=A+1|0}while((0|A)!=(0|g))}return oB=B,((511+(0|rB[C+8>>0])|0)>>>8&1)-1|0}function FA(A,I,g){I|=0,g|=0;var B=0;nB[(A|=0)+7>>0]=I,B=0|WI(0|I,0|g,8),nB[A+6>>0]=B,B=0|WI(0|I,0|g,16),nB[A+5>>0]=B,B=0|WI(0|I,0|g,24),nB[A+4>>0]=B,nB[A+3>>0]=g,B=0|WI(0|I,0|g,40),nB[A+2>>0]=B,B=0|WI(0|I,0|g,48),nB[A+1>>0]=B,g=0|WI(0|I,0|g,56),nB[A>>0]=g}function HA(A,I){A|=0;var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+128|0,h(B+80|0,(I|=0)+80|0),Q(B+40|0,I,B+80|0),Q(B,I+40|0,B+80|0),u(A,B),I=(0|RI(B+40|0))<<7,nB[A+31>>0]=(0|rB[A+31>>0])^I,oB=g}function kA(A,I,g,B,C,i,e,Q){A|=0,I|=0,C|=0,i|=0,e|=0,Q|=0;var E=0,n=0;E=oB,n=oB=oB+63&-64,oB=oB+80|0,0==(0|(g|=0))&0==(0|(B|=0))||(ag(n+64|0,i),ag(n+64+4|0,e),uA(n,Q),gI(n,C,n+64|0),r(n,I,A,g,B),$A(n,64)),oB=E}function MA(A,I,g,B,C,i,e){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0;var Q=0;do{if((I+-1|0)>>>0>63|e>>>0>64)Q=-1;else{if(I>>>0>=256&&FB(33512,33532,19,33585),e>>>0<256){nA(A,g,i,255&I,B,C,255&e),Q=0;break}FB(33612,33532,20,33585)}}while(0);return 0|Q}function YA(A,I,g){A|=0,I|=0,g|=0;var B=0,C=0;if(C=oB,B=oB=oB+63&-64,oB=oB+16|0,nB[B>>0]=0,0|D(A,I,g))I=-1;else{I=0;do{nB[B>>0]=nB[B>>0]|nB[A+I>>0],I=I+1|0}while(32!=(0|I));I=0-((511+(0|rB[B>>0])|0)>>>8&1)|0}return oB=C,0|I}function bA(A,I,g){A|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+160|0,EI(I|=0,g|=0,32,0),nB[I>>0]=-8&nB[I>>0],nB[I+31>>0]=63&nB[I+31>>0]|64,m(C,I),HA(A,C),TA(0|I,0|g,32),TA(I+32|0,0|A,32),oB=B}function vA(A,I,g){A|=0,I|=0;var B=0,C=0,i=0,e=0;i=oB,e=oB=oB+63&-64,oB=oB+64|0,EI(e,g|=0,32,0),B=e,C=(g=I)+32|0;do{nB[g>>0]=0|nB[B>>0],g=g+1|0,B=B+1|0}while((0|g)<(0|C));return $A(e,64),e=0|Yg(A,I),oB=i,0|e}function SA(A,I,g,B,C,i,e){A|=0,I|=0,C|=0,i|=0,e|=0;var Q=0,E=0;Q=oB,E=oB=oB+63&-64,oB=oB+80|0,0==(0|(g|=0))&0==(0|(B|=0))||(ag(E+64|0,i),uA(E,e),aI(E,C,E+64|0),r(E,I,A,g,B),$A(E,64)),oB=Q}function mA(A,I,g){I|=0,g|=0;var B=0,C=0;B=0|Qg(0|tB[(A|=0)+64>>2],0|tB[A+64+4>>2],0|I,0|g),C=wB,tB[A+64>>2]=B,tB[A+64+4>>2]=C,g=0|Qg(1&(C>>>0<g>>>0|(0|C)==(0|g)&B>>>0<I>>>0)|0,0,0|tB[A+72>>2],0|tB[A+72+4>>2]),tB[A+72>>2]=g,tB[A+72+4>>2]=wB}function NA(A,I,g,B,C){A|=0,B|=0,C|=0;var i=0,e=0;i=oB,e=oB=oB+63&-64,oB=oB+64|0,0==(0|(I|=0))&0==(0|(g|=0))||(uA(e,C),aI(e,B,0),AA(0|A,0,0|I),r(e,A,A,I,g),$A(e,64)),oB=i}function RA(A){var I=0,g=0;return g=(A|=0)+15&-16|0,I=0|tB[aB>>2],A=I+g|0,(0|g)>0&(0|A)<(0|I)|(0|A)<0?(uB(),dB(12),-1):(tB[aB>>2]=A,((0|A)>(0|lB())?0==(0|hB()):0)?(tB[aB>>2]=I,dB(12),-1):0|I)}function UA(A,I,g,B,C){A|=0,B|=0,C|=0;var i=0,e=0;i=oB,e=oB=oB+63&-64,oB=oB+64|0,0==(0|(I|=0))&0==(0|(g|=0))||(uA(e,C),gI(e,B,0),AA(0|A,0,0|I),r(e,A,A,I,g),$A(e,64)),oB=i}function PA(A,I,g,B,C,i,e,Q){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0;var E=0;return E=oB,oB=oB+32|0,0|Dg(E,e|=0,Q|=0)?A=-1:(A=0|LI(A,I,g,B,C,i,E),$A(E,32)),oB=E,0|A}function JA(A){A|=0;var I=0,g=0,B=0,C=0,i=0;for(g=32,I=1,B=0;;){if(g=g+-1|0,C=0|nB[A+g>>0],i=0|nB[33825+g>>0],I&=255,B=((255&C)-(255&i)|0)>>>8&I|255&B,!g)break;I&=(65535+(255&(i^C))|0)>>>8}return(0==(0|B))<<31>>31|0}function LA(A,I,g,B,C,i,e,Q){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0;var E=0;return E=oB,oB=oB+32|0,0|Dg(E,e|=0,Q|=0)?A=-1:(KI(A,I,g,B,C,i,E),$A(E,32),A=0),oB=E,0|A}function xA(A,I,g){A|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+80|0,T(C+40|0,g|=0,I|=0),j(C,g,I),h(C,C),Q(A,C+40|0,C),oB=B}function XA(A){A|=0;var I=0,g=0,B=0;for(g=0;;){I=0,B=0;do{B=255&(nB[16+(g<<5)+I>>0]^nB[A+I>>0])|B,I=I+1|0}while(32!=(0|I));if(g=g+1|0,!B){I=1;break}if(g>>>0>=12){I=0;break}}return 0|I}function KA(A,I){I|=0;var g=0,B=0,C=0,i=0;FI(A|=0),g=0;do{i=0|dI(I+(g<<3)|0),C=tB[(B=A+(g<<3)|0)+4>>2]^wB,tB[B>>2]=tB[B>>2]^i,tB[B+4>>2]=C,g=g+1|0}while(8!=(0|g))}function VA(A,I,g){A|=0,I|=0,g|=0;var B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+384|0,lg(C,0,0,24),sg(C,I,32,0),sg(C,g,32,0),Hg(C,A,24),oB=B}function jA(A){A|=0;var I=0,g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+16|0,nB[B>>0]=0,I=0;do{nB[B>>0]=nB[B>>0]|nB[A+I>>0],I=I+1|0}while(4!=(0|I));return oB=g,(511+(0|rB[B>>0])|0)>>>8&1|0}function TA(A,I,g){var B=0;if((0|(I|=0))<(0|(A|=0))&(0|A)<(I+(g|=0)|0)){for(B=A,I=I+g|0,A=A+g|0;(0|g)>0;)I=I-1|0,g=g-1|0,nB[(A=A-1|0)>>0]=0|nB[I>>0];A=B}else v(A,I,g);return 0|A}function ZA(A,I){var g=0,B=0,C=0;return g=0|sB(65535&(I|=0),65535&(A|=0)),C=(g>>>16)+(0|sB(65535&I,A>>>16))|0,B=0|sB(I>>>16,65535&A),0|(wB=(C>>>16)+(0|sB(I>>>16,A>>>16))+(((65535&C)+B|0)>>>16)|0,C+B<<16|65535&g|0)}function WA(A,I,g,B,C){A|=0;var i=0;return i=oB,oB=oB+32|0,eI(i,I|=0,g|=0,B|=0,C|=0),C=0|Tg(A,i),C=0|((0|i)==(0|A)?-1:C)|GA(i,A,32),oB=i,0|C}function qA(A,I,g){A|=0;var B=0,C=0;return C=oB,B=oB=oB+63&-64,oB=oB+32|0,0|YA(B,g|=0,I|=0)?A=-1:(p(A,35368,B),A=0),oB=C,0|A}function OA(A,I,g,B,C,i,e){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,0|(A=B>>>0<0|0==(0|B)&g>>>0<16?-1:0|PA(A,I+16|0,I,B=0|Qg(0|g,0|B,-16,-1),wB,C,i,e))}function zA(A){var I=0,g=0,B=0,C=0;return g=0|rB[(A|=0)>>0],B=0|ZI(0|rB[A+1>>0],0,8),C=wB,I=0|ZI(0|rB[A+2>>0],0,16),C|=wB,A=0|ZI(0|rB[A+3>>0],0,24),wB|=C,B|g|I|A|0}function $A(A,I){A|=0,I|=0;var g=0,B=0;if(g=oB,B=oB=oB+63&-64,oB=oB+16|0,tB[B>>2]=A,0|I){A=0;do{nB[(0|tB[B>>2])+A>>0]=0,A=A+1|0}while((0|A)!=(0|I))}oB=g}function AI(A,I,g,B,C){A|=0;var i=0,e=0;return i=oB,e=oB=oB+63&-64,oB=oB+16|0,iI(e,I|=0,g|=0,B|=0,C|=0),C=0|Zg(A,e),oB=i,0|C}function II(A,I){T(A|=0,(I|=0)+40|0,I),j(A+40|0,I+40|0,I),fA(A+80|0,I+80|0),Q(A+120|0,I+120|0,1184)}function gI(A,I,g){A|=0,I|=0,(g|=0)?(tB[A+48>>2]=0|Fg(g),g=0|Fg(g+4|0)):(tB[A+48>>2]=0,g=0),tB[A+52>>2]=g,tB[A+56>>2]=0|Fg(I),tB[A+60>>2]=0|Fg(I+4|0)}function BI(A,I){Q(A|=0,I|=0,I+120|0),Q(A+40|0,I+40|0,I+80|0),Q(A+80|0,I+80|0,I+120|0),Q(A+120|0,I,I+40|0)}function CI(A,I){I|=0;var g=0,B=0;B=oB,oB=oB+64|0,yI(A|=0,B),A=B,g=I+32|0;do{nB[I>>0]=0|nB[A>>0],I=I+1|0,A=A+1|0}while((0|I)<(0|g));oB=B}function iI(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0;var i=0,e=0;i=oB,e=oB=oB+63&-64,oB=oB+96|0,EA(e,C|=0),d(e,I,g,B),H(e,A),oB=i}function eI(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0;var i=0;i=oB,oB=oB+416|0,Lg(i,C|=0),hg(i,I,g,B),CI(i,A),oB=i}function QI(A){var I=0,g=0;tB[(A|=0)+64>>2]=0,tB[A+64+4>>2]=0,tB[A+64+8>>2]=0,tB[A+64+12>>2]=0,I=400,g=A+64|0;do{tB[A>>2]=tB[I>>2],A=A+4|0,I=I+4|0}while((0|A)<(0|g))}function EI(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var C=0,i=0;C=oB,i=oB=oB+63&-64,oB=oB+208|0,QI(i),s(i,I,g,B),hI(i,A),oB=C}function nI(A,I,g){A|=0,I|=0;var B=0,C=0;if((g|=0)>>>3|0){B=0;do{FA(A+(B<<3)|0,0|tB[(C=I+(B<<3)|0)>>2],0|tB[C+4>>2]),B=B+1|0}while((0|B)!=(g>>>3|0))}}function tI(A,I,g){I|=0,g|=0;var B=0,C=0;return B=oB,C=oB=oB+63&-64,oB=oB+64|0,hI(A|=0,C),g=0|U(I,C,64,0,g,1),oB=B,0|g}function rI(A,I,g,B){I|=0,g|=0,B|=0;var C=0,i=0;C=oB,i=oB=oB+63&-64,oB=oB+64|0,hI(A|=0,i),J(I,g,i,64,0,B,1),oB=C}function aI(A,I,g){A|=0,I|=0,g=(g|=0)?0|Fg(g):0,tB[A+48>>2]=g,tB[A+52>>2]=0|Fg(I),tB[A+56>>2]=0|Fg(I+4|0),tB[A+60>>2]=0|Fg(I+8|0)}function oI(A,I,g){I|=0,g|=0,nB[(A|=0)>>0]=I,nB[A+1>>0]=I>>8,nB[A+2>>0]=I>>16,nB[A+3>>0]=I>>24,nB[A+4>>0]=g,nB[A+4+1>>0]=g>>8,nB[A+4+2>>0]=g>>16,nB[A+4+3>>0]=g>>24}function cI(A,I,g,B,C,i,e){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,B>>>0>0|0==(0|B)&g>>>0>4294967279?(EB(),0):0|LA(A+16|0,A,I,g,B,C,i,e)}function fI(A){return(0-(62^(A|=0))|0)>>>8&45^45|(A+65510|0)>>>8&255&A+65|(0-(63^A)|0)>>>8&95^95|(A+65484|0)>>>8&A+71&((A+65510|0)>>>8&255^255)|(A+65474|0)>>>8&A+252&((A+65484|0)>>>8&255^255)|0}function yI(A,I){I|=0;var g=0;g=oB,oB=oB+64|0,hI(A|=0,g),s(A+208|0,g,64,0),hI(A+208|0,I),$A(g,64),oB=g}function wI(A){return(0-(62^(A|=0))|0)>>>8&43^43|(A+65510|0)>>>8&255&A+65|(0-(63^A)|0)>>>8&47^47|(A+65484|0)>>>8&A+71&((A+65510|0)>>>8&255^255)|(A+65474|0)>>>8&A+252&((A+65484|0)>>>8&255^255)|0}function sI(A,I){Q(A|=0,I|=0,I+120|0),Q(A+40|0,I+40|0,I+80|0),Q(A+80|0,I+80|0,I+120|0)}function hI(A,I){I|=0;var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+704|0,cA(A|=0,B),nI(I,A,64),$A(B,704),$A(A,208),oB=g}function lI(A,I){A|=0,I|=0;var g=0,B=0,C=0;g=0;do{C=0|lA(I+(g<<3)|0),tB[(B=A+(g<<3)|0)>>2]=C,tB[B+4>>2]=wB,g=g+1|0}while(16!=(0|g))}function uI(A,I){A|=0,I|=0;var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+32|0,SI(B,32),bA(A,I,B),$A(B,32),oB=g}function pI(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,(I+-1|0)>>>0>63?A=-1:(DA(A,g,255&I,B,C),A=0),0|A}function DI(A){var I=0,g=0;return I=oB,g=oB=oB+63&-64,oB=oB+32|0,u(g,A|=0),A=0|Tg(g,35384),oB=I,0|A}function _I(A){A|=0;var I=0,g=0,B=0;for(g=0,I=1;;){if(B=A+g|0,I=(0|rB[B>>0])+I|0,nB[B>>0]=I,4==(0|(g=g+1|0)))break;I>>>=8}}function dI(A){return A|=0,wB=rB[A+4>>0]|rB[A+4+1>>0]<<8|rB[A+4+2>>0]<<16|rB[A+4+3>>0]<<24,rB[A>>0]|rB[A+1>>0]<<8|rB[A+2>>0]<<16|rB[A+3>>0]<<24|0}function GI(A,I,g){return A|=0,I|=0,(0|(g|=0))<32?(wB=I>>g,A>>>g|(I&(1<<g)-1)<<32-g):(wB=(0|I)<0?-1:0,I>>g-32|0)}function FI(A){var I=0,g=0,B=0;g=400,B=(I=A|=0)+64|0;do{tB[I>>2]=tB[g>>2],I=I+4|0,g=g+4|0}while((0|I)<(0|B));AA(A+64|0,0,293)}function HI(A,I,g){var B=0,C=0;return B=0|WI(0|(A|=0),0|(I|=0),0|(g|=0)),C=wB,g=0|ZI(0|A,0|I,64-g|0),wB|=C,g|B|0}function kI(A,I,g){var B=0,C=0;return B=0|ZI(0|(A|=0),0|(I|=0),0|(g|=0)),C=wB,g=0|WI(0|A,0|I,64-g|0),wB|=C,g|B|0}function MI(A,I,g,B){I|=0,B|=0;var C=0,i=0;return C=0|ZA(A|=0,g|=0),i=wB,0|(wB=(0|sB(I,g))+(0|sB(B,A))+i|0&i,0|C)}function YI(A){nB[(A|=0)>>0]=0,nB[A+1>>0]=0,nB[A+2>>0]=0,nB[A+3>>0]=0,nB[A+4>>0]=0,nB[A+4+1>>0]=0,nB[A+4+2>>0]=0,nB[A+4+3>>0]=0}function bI(A,I,g){return A|=0,I|=0,(g|=0)>>>0<256?0|V(A,I,255&g):(FB(33512,33532,103,33664),0)}function vI(A,I,g){A|=0,g|=0;var B=0;return I=0|ZI(255&(I|=0)|0,0,8),B=wB,g=0|ZI(255&g|0,0,16),wB|=B,I|255&A|g|0}function SI(A,I){A|=0;var g=0;if(0|(I|=0)){g=0;do{nB[A+g>>0]=0|AB(),g=g+1|0}while((0|g)!=(0|I))}}function mI(A,I){I|=0;var g=0;A=(g=(A|=0)+48|0)+16|0;do{nB[g>>0]=0|nB[I>>0],g=g+1|0,I=I+1|0}while((0|g)<(0|A))}function NI(A,I){fA(A|=0,I|=0),fA(A+40|0,I+40|0),fA(A+80|0,I+80|0)}function RI(A){var I=0,g=0;return g=oB,I=oB=oB+63&-64,oB=oB+32|0,u(I,A|=0),oB=g,1&nB[I>>0]|0}function UI(A,I){I|=0;var g=0;A=(g=(A|=0)+32|0)+16|0;do{nB[g>>0]=0|nB[I>>0],g=g+1|0,I=I+1|0}while((0|g)<(0|A))}function PI(){var A=0;(0|(A=0|DB(30)))>0?tB[8697]=A:A=0|tB[8697],A>>>0<16?EB():SI(35432,16)}function JI(A,I){A|=0,I|=0;var g=0,B=0;g=0;do{nB[(B=A+g|0)>>0]=nB[B>>0]^nB[I+g>>0],g=g+1|0}while(8!=(0|g))}function LI(A,I,g,B,C,i,e){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,0|M(A,I,g,B,C,i,e)}function xI(){var A=0,I=0;A=oB,I=oB=oB+63&-64,oB=oB+16|0,Mg(I),0|tB[I>>2]&&Mg(I),oB=A}function XI(A){og(A|=0),OI(A+40|0),OI(A+80|0),og(A+120|0)}function KI(A,I,g,B,C,i,e){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,F(A,I,g,B,C,i,e),0}function VI(A,I,g,B,C,i,e){SA(A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0)}function jI(A,I){A|=0;var g=0,B=0;g=oB,B=oB=oB+63&-64,oB=oB+128|0,NI(B,I|=0),wA(A,B),oB=g}function TI(A){nB[(A|=0)+32>>0]=0,nB[A+32+1>>0]=0,nB[A+32+2>>0]=0,nB[A+32+3>>0]=0,nB[A+32>>0]=1}function ZI(A,I,g){return A|=0,I|=0,(0|(g|=0))<32?(wB=I<<g|(A&(1<<g)-1<<32-g)>>>32-g,A<<g):(wB=A<<g-32,0)}function WI(A,I,g){return A|=0,I|=0,(0|(g|=0))<32?(wB=I>>>g,A>>>g|(I&(1<<g)-1)<<32-g):(wB=0,I>>>g-32|0)}function qI(A,I,g,B,C,i,e){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,0|MA(A,I,g,B,C,i,e)}function OI(A){var I=0;tB[(A|=0)>>2]=1,I=(A=A+4|0)+36|0;do{tB[A>>2]=0,A=A+4|0}while((0|A)<(0|I))}function zI(A,I,g,B,C,i){J(A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0)}function $I(A,I,g,B,C,i){G(A|=0,I|=0,g|=0,B|=0,C|=0,1,0,i|=0)}function Ag(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,0|U(A,I,g,B,C,0)}function Ig(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,0|AI(A,I,g,B,C)}function gg(A,I,g,B,C,i){G(A|=0,I|=0,g|=0,B|=0,C|=0,0,0,i|=0)}function Bg(A,I,g,B,C,i){kA(A|=0,I|=0,g|=0,B|=0,C|=0,1,0,i|=0)}function Cg(A,I,g){P(A|=0,I|=0,255&(g|=0)),P(A+40|0,I+40|0,255&g),P(A+80|0,I+80|0,255&g)}function ig(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,B=I-B-(g>>>0>A>>>0|0)>>>0,0|(wB=B,A-g>>>0|0)}function eg(A){OI(A|=0),OI(A+40|0),og(A+80|0)}function Qg(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,0|(wB=I+B+(A+g>>>0>>>0<A>>>0|0)>>>0,A+g>>>0|0)}function Eg(A){og(A|=0),OI(A+40|0),OI(A+80|0)}function ng(A,I,g,B){ug(A|=0,I|=0,g|=0,B|=0)}function tg(A,I){I|=0,QI(A|=0),0|I&&s(A,33857,34,0)}function rg(A){0|nB[(A|=0)+356>>0]&&Kg(A),tB[A+80>>2]=-1,tB[A+80+4>>2]=-1}function ag(A,I){I|=0,nB[(A|=0)>>0]=I,nB[A+1>>0]=I>>8,nB[A+2>>0]=I>>16,nB[A+3>>0]=I>>24}function og(A){var I=0;I=(A|=0)+40|0;do{tB[A>>2]=0,A=A+4|0}while((0|A)<(0|I))}function cg(A,I,g,B){X(A|=0,I|=0,g|=0,B|=0)}function fg(A,I,g,B,C){NA(A|=0,I|=0,g|=0,B|=0,C|=0)}function yg(A,I,g,B){SA(A|=0,I|=0,40,0,g|=0,0,B|=0)}function wg(A,I){return A|=0,I|=0,SI(I,32),0|Yg(A,I)}function sg(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,cg(A,I,g,B),0}function hg(A,I,g,B){pg(A|=0,I|=0,g|=0,B|=0)}function lg(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,0|_A(A,I,g,B)}function ug(A,I,g,B){d(A|=0,I|=0,g|=0,B|=0)}function pg(A,I,g,B){s(A|=0,I|=0,g|=0,B|=0)}function Dg(A,I,g){return A|=0,I|=0,g|=0,0|qA(A,I,g)}function _g(A){nB[(A|=0)>>0]=-8&nB[A>>0],nB[A+31>>0]=63&nB[A+31>>0]|64}function dg(A,I){return A|=0,I|=0,A=0|Z(A,I),0|((0|nB[A>>0])==(255&I)<<24>>24?A:0)}function Gg(A){return A|=0,255&(A=0|WI(A<<24>>24|0,((A<<24>>24|0)<0)<<31>>31|0,63))|0}function Fg(A){return A|=0,rB[A>>0]|rB[A+1>>0]<<8|rB[A+2>>0]<<16|rB[A+3>>0]<<24|0}function Hg(A,I,g){return A|=0,I|=0,g|=0,0|bI(A,I,g)}function kg(A){nB[(A|=0)>>0]=0,nB[A+1>>0]=0,nB[A+2>>0]=0,nB[A+3>>0]=0}function Mg(A){tB[(A|=0)>>2]=0,tB[A+4>>2]=0,tB[A+8>>2]=0,tB[A+12>>2]=0}function Yg(A,I){return A|=0,I|=0,0|hA(A,I)}function bg(A,I){xg(A|=0,I|=0)}function vg(A,I){Xg(A|=0,I|=0)}function Sg(A,I,g){return A|=0,I|=0,g|=0,0|YA(A,I,g)}function mg(A,I){return A|=0,I|=0,0|wg(A,I)}function Ng(A,I,g){b(A|=0,32,0,I|=0,g|=0)}function Rg(A,I,g){UA(A|=0,64,0,I|=0,g|=0)}function Ug(A){1!=(-7&(A|=0)|0)&&EB()}function Pg(A,I,g){f(A|=0,I|=0,g|=0)}function Jg(A,I){return A|=0,I|=0,0|Yg(A,I)}function Lg(A,I){W(A|=0,I|=0)}function xg(A,I){H(A|=0,I|=0)}function Xg(A,I){EA(A|=0,I|=0)}function Kg(A){tB[(A|=0)+88>>2]=-1,tB[A+88+4>>2]=-1}function Vg(A,I){return A|=0,I|=0,1&(0!=(0|A)|0!=(0|I))|0}function jg(A,I){return A|=0,((255&((I|=0)^A))-1|0)>>>31&255|0}function Tg(A,I){return A|=0,I|=0,0|dA(A,I,32)}function Zg(A,I){return A|=0,I|=0,0|dA(A,I,16)}function Wg(A,I){return A|=0,I|=0,A>>>(32-I|0)|A<<I|0}function qg(A){QI(A|=0)}function Og(){xI()}function zg(A){SI(A|=0,32)}function $g(){pB(1)}function AB(){return 0|pB(0)}function IB(){return 1}function gB(){return 8}function BB(){return 24}function CB(){return 16}function iB(){return 64}function eB(){return 32}function QB(){return 0}function EB(){_B()}var nB=new A.Int8Array(g),tB=(new A.Int16Array(g),new A.Int32Array(g)),rB=new A.Uint8Array(g),aB=(new A.Uint16Array(g),new A.Uint32Array(g),new A.Float32Array(g),new A.Float64Array(g),0|I.DYNAMICTOP_PTR),oB=(I.tempDoublePtr,I.ABORT,0|I.STACKTOP),cB=0|I.STACK_MAX,fB=0,yB=0,wB=(A.NaN,A.Infinity,0),sB=(A.Math.floor,A.Math.abs,A.Math.sqrt,A.Math.pow,A.Math.cos,A.Math.sin,A.Math.tan,A.Math.acos,A.Math.asin,A.Math.atan,A.Math.atan2,A.Math.exp,A.Math.log,A.Math.ceil,A.Math.imul),hB=(A.Math.min,A.Math.max,A.Math.clz32,I.abort,I.assert,I.enlargeMemory),lB=I.getTotalMemory,uB=I.abortOnCannotGrowMemory,pB=I._emscripten_asm_const_i,DB=I._sysconf,_B=I._abort,dB=I.___setErrNo,GB=I._emscripten_memcpy_big,FB=I.___assert_fail;return{_sodium_library_version_minor:QB,_crypto_secretstream_xchacha20poly1305_init_push:function(A,I,g){A|=0,g|=0;var B=0;return SI(I|=0,24),w(A,I,g,0),TI(A),B=rB[I+16>>0]|rB[I+16+1>>0]<<8|rB[I+16+2>>0]<<16|rB[I+16+3>>0]<<24,g=rB[I+16+4>>0]|rB[I+16+4+1>>0]<<8|rB[I+16+4+2>>0]<<16|rB[I+16+4+3>>0]<<24,nB[A+36>>0]=B,nB[A+36+1>>0]=B>>8,nB[A+36+2>>0]=B>>16,nB[A+36+3>>0]=B>>24,nB[A+36+4>>0]=g,nB[A+36+4+1>>0]=g>>8,nB[A+36+4+2>>0]=g>>16,nB[A+36+4+3>>0]=g>>24,nB[A+44>>0]=0,nB[A+44+1>>0]=0,nB[A+44+2>>0]=0,nB[A+44+3>>0]=0,nB[A+44+4>>0]=0,nB[A+44+4+1>>0]=0,nB[A+44+4+2>>0]=0,nB[A+44+4+3>>0]=0,0},_sodium_hex2bin:function(A,I,g,B,C,i,e){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0;var Q=0,E=0,n=0,t=0,r=0,a=0,o=0;A:do{if(B){E=0,t=0,n=0,a=0;I:for(;;){for(;Q=0|rB[g+n>>0],!(255&((r=(65526+(201+(223&Q)&255)^65520+(201+(223&Q)&255))>>>8)|(65526+(48^Q)|0)>>>8)|0);){if(!(0!=(0|C)&E<<24>>24==0)){Q=0;break I}if(!(0|dg(C,Q))){E=t,Q=0;break A}if(!((n=n+1|0)>>>0<B>>>0)){E=t,Q=0;break A}E=0}if(t>>>0>=I>>>0){o=9;break}if(Q=201+(223&Q)&255&r|(65526+(48^Q)|0)>>>8&(48^Q),E<<24>>24?(nB[A+t>>0]=Q|255&a,t=t+1|0,Q=a):Q=Q<<4&255,E=~E,!((n=n+1|0)>>>0<B>>>0)){Q=0;break}a=Q}9==(0|o)&&(tB[8242]=34,Q=-1),E<<24>>24?(tB[8242]=22,E=t,n=n+-1|0,Q=-1):E=t}else E=0,n=0,Q=0}while(0);return E=0==(0|Q)?E:0,e?tB[e>>2]=g+n:(0|n)!=(0|B)&&(tB[8242]=22,Q=-1),0|i&&(tB[i>>2]=E),0|Q},_bitshift64Lshr:WI,_crypto_kx_publickeybytes:eB,_sodium_unpad:function(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var C=0,i=0,e=0,Q=0,E=0,n=0,t=0;if(n=oB,E=oB=oB+63&-64,oB=oB+16|0,tB[E>>2]=0,(B+-1|0)>>>0<g>>>0){for(e=0,C=0,Q=0;C&=255,i=0|rB[I+(g+-1)+(0-e)>>0],t=(511+(0|tB[E>>2])&C+511&511+(128^i))>>>8,tB[E>>2]=1+(1^(-2|t))&e|tB[E>>2],e=e+1|0,Q=1&t|255&Q,(0|e)!=(0|B);)C|=i;tB[A>>2]=g+-1-(0|tB[E>>2]),C=Q+-1|0}else C=-1;return oB=n,0|C},_crypto_secretstream_xchacha20poly1305_statebytes:function(){return 52},_crypto_box_noncebytes:BB,_crypto_aead_chacha20poly1305_ietf_keybytes:eB,_crypto_aead_chacha20poly1305_ietf_encrypt_detached:x,_sodium_pad:function(A,I,g,B,C){A|=0,I|=0,g|=0,C|=0;var i=0,e=0,Q=0,E=0;if(E=oB,Q=oB=oB+63&-64,oB=oB+16|0,B|=0)if(i=B+-1&B?(g>>>0)%(B>>>0)|0:B+-1&g,(e=B+-1-i|0)>>>0>=~g>>>0&&EB(),(e+g|0)>>>0<C>>>0){0|A&&(tB[A>>2]=e+g+1),nB[Q>>0]=0,i=0;do{C=(65535+(i^e)|0)>>>8,nB[(A=I+(e+g)+(0-i)|0)>>0]=nB[Q>>0]&nB[A>>0]&255|128&C,nB[Q>>0]=0|rB[Q>>0]|C,i=i+1|0}while((0|i)!=(0|B));i=0}else i=-1;else i=-1;return oB=E,0|i},_crypto_scalarmult_base:Jg,_crypto_aead_chacha20poly1305_abytes:CB,_crypto_core_hchacha20_outputbytes:eB,_crypto_auth_bytes:eB,_crypto_sign_statebytes:function(){return 208},_crypto_sign_open:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0|tA(A,I,g,B,C,i)},_sbrk:RA,_memcpy:v,_crypto_kdf_bytes_max:iB,_crypto_kdf_bytes_min:CB,_crypto_box_seed_keypair:function(A,I,g){return A|=0,I|=0,g|=0,0|vA(A,I,g)},stackAlloc:function(A){var I=0;return I=oB,oB=oB+(A|=0)|0,oB=oB+15&-16,0|I},_crypto_box_open_easy_afternm:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0|(A=B>>>0<0|0==(0|B)&g>>>0<16?-1:0|LI(A,I+16|0,I,B=0|Qg(0|g,0|B,-16,-1),wB,C,i))},_crypto_sign_ed25519_sk_to_curve25519:function(A,I){A|=0;var g=0,B=0,C=0;B=oB,C=oB=oB+63&-64,oB=oB+64|0,EI(C,I|=0,32,0),nB[C>>0]=-8&nB[C>>0],nB[C+31>>0]=63&nB[C+31>>0]|64,I=C,g=A+32|0;do{nB[A>>0]=0|nB[I>>0],A=A+1|0,I=I+1|0}while((0|A)<(0|g));return $A(C,64),oB=B,0},_emscripten_get_global_libc:function(){return 35288},_crypto_secretstream_xchacha20poly1305_keybytes:eB,_free:function(A){var I=0,g=0,B=0,C=0,i=0,e=0,Q=0,E=0;if(A|=0){I=0|tB[8702],E=A+-8+(-8&(g=0|tB[A+-4>>2]))|0;do{if(1&g)Q=A+-8|0,I=-8&g,e=A+-8|0;else{if(B=0|tB[A+-8>>2],!(3&g))return;if(e=A+-8+(0-B)|0,i=B+(-8&g)|0,e>>>0<I>>>0)return;if((0|e)==(0|tB[8703])){if(3!=(3&(A=0|tB[E+4>>2])|0)){Q=e,I=i;break}return tB[8700]=i,tB[E+4>>2]=-2&A,tB[e+4>>2]=1|i,void(tB[e+i>>2]=i)}if(B>>>0<256){if(A=0|tB[e+8>>2],(0|(I=0|tB[e+12>>2]))==(0|A)){tB[8698]=tB[8698]&~(1<<(B>>>3)),Q=e,I=i;break}tB[A+12>>2]=I,tB[I+8>>2]=A,Q=e,I=i;break}C=0|tB[e+24>>2],A=0|tB[e+12>>2];do{if((0|A)==(0|e)){if(A=0|tB[e+16+4>>2])B=e+16+4|0;else{if(!(A=0|tB[e+16>>2])){A=0;break}B=e+16|0}for(;;)if(I=A+20|0,0|(g=0|tB[I>>2]))A=g,B=I;else{if(I=A+16|0,!(g=0|tB[I>>2]))break;A=g,B=I}tB[B>>2]=0}else Q=0|tB[e+8>>2],tB[Q+12>>2]=A,tB[A+8>>2]=Q}while(0);if(C){if(I=0|tB[e+28>>2],(0|e)==(0|tB[35096+(I<<2)>>2])){if(tB[35096+(I<<2)>>2]=A,!A){tB[8699]=tB[8699]&~(1<<I),Q=e,I=i;break}}else if(tB[C+16+(((0|tB[C+16>>2])!=(0|e)&1)<<2)>>2]=A,!A){Q=e,I=i;break}tB[A+24>>2]=C,0|(I=0|tB[e+16>>2])&&(tB[A+16>>2]=I,tB[I+24>>2]=A),(I=0|tB[e+16+4>>2])?(tB[A+20>>2]=I,tB[I+24>>2]=A,Q=e,I=i):(Q=e,I=i)}else Q=e,I=i}}while(0);if(!(e>>>0>=E>>>0)&&1&(g=0|tB[E+4>>2])){if(2&g)tB[E+4>>2]=-2&g,tB[Q+4>>2]=1|I,tB[e+I>>2]=I,C=I;else{if(A=0|tB[8703],(0|E)==(0|tB[8704])){if(E=(0|tB[8701])+I|0,tB[8701]=E,tB[8704]=Q,tB[Q+4>>2]=1|E,(0|Q)!=(0|A))return;return tB[8703]=0,void(tB[8700]=0)}if((0|E)==(0|A))return E=(0|tB[8700])+I|0,tB[8700]=E,tB[8703]=e,tB[Q+4>>2]=1|E,void(tB[e+E>>2]=E);C=(-8&g)+I|0;do{if(g>>>0<256){if(I=0|tB[E+8>>2],(0|(A=0|tB[E+12>>2]))==(0|I)){tB[8698]=tB[8698]&~(1<<(g>>>3));break}tB[I+12>>2]=A,tB[A+8>>2]=I;break}i=0|tB[E+24>>2],A=0|tB[E+12>>2];do{if((0|A)==(0|E)){if(A=0|tB[E+16+4>>2])B=E+16+4|0;else{if(!(A=0|tB[E+16>>2])){I=0;break}B=E+16|0}for(;;)if(I=A+20|0,0|(g=0|tB[I>>2]))A=g,B=I;else{if(I=A+16|0,!(g=0|tB[I>>2]))break;A=g,B=I}tB[B>>2]=0,I=A}else I=0|tB[E+8>>2],tB[I+12>>2]=A,tB[A+8>>2]=I,I=A}while(0);if(0|i){if(A=0|tB[E+28>>2],(0|E)==(0|tB[35096+(A<<2)>>2])){if(tB[35096+(A<<2)>>2]=I,!I){tB[8699]=tB[8699]&~(1<<A);break}}else if(tB[i+16+(((0|tB[i+16>>2])!=(0|E)&1)<<2)>>2]=I,!I)break;tB[I+24>>2]=i,0|(A=0|tB[E+16>>2])&&(tB[I+16>>2]=A,tB[A+24>>2]=I),0|(A=0|tB[E+16+4>>2])&&(tB[I+20>>2]=A,tB[A+24>>2]=I)}}while(0);if(tB[Q+4>>2]=1|C,tB[e+C>>2]=C,(0|Q)==(0|tB[8703]))return void(tB[8700]=C)}if(g=C>>>3,C>>>0<256)return(A=0|tB[8698])&1<<g?(A=0|tB[34832+(g<<1<<2)+8>>2],I=34832+(g<<1<<2)+8|0):(tB[8698]=A|1<<g,A=34832+(g<<1<<2)|0,I=34832+(g<<1<<2)+8|0),tB[I>>2]=Q,tB[A+12>>2]=Q,tB[Q+8>>2]=A,void(tB[Q+12>>2]=34832+(g<<1<<2));B=35096+((A=(A=C>>>8)?C>>>0>16777215?31:C>>>(7+(A=14-((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4|(A+1048320|0)>>>16&8|(245760+(E=A<<((A+1048320|0)>>>16&8)<<((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4))|0)>>>16&2)+(E<<((E+245760|0)>>>16&2)>>>15)|0)|0)&1|A<<1:0)<<2)|0,tB[Q+28>>2]=A,tB[Q+20>>2]=0,tB[Q+16>>2]=0,I=0|tB[8699],g=1<<A;do{if(I&g){for(I=C<<(31==(0|A)?0:25-(A>>>1)|0),g=0|tB[B>>2];;){if((-8&tB[g+4>>2]|0)==(0|C)){A=73;break}if(B=g+16+(I>>>31<<2)|0,!(A=0|tB[B>>2])){A=72;break}I<<=1,g=A}if(72==(0|A)){tB[B>>2]=Q,tB[Q+24>>2]=g,tB[Q+12>>2]=Q,tB[Q+8>>2]=Q;break}if(73==(0|A)){E=0|tB[(e=g+8|0)>>2],tB[E+12>>2]=Q,tB[e>>2]=Q,tB[Q+8>>2]=E,tB[Q+12>>2]=g,tB[Q+24>>2]=0;break}}else tB[8699]=I|g,tB[B>>2]=Q,tB[Q+24>>2]=B,tB[Q+12>>2]=Q,tB[Q+8>>2]=Q}while(0);if(E=(0|tB[8706])-1|0,tB[8706]=E,!E){for(A=35248;A=0|tB[A>>2];)A=A+8|0;tB[8706]=-1}}}},_crypto_aead_chacha20poly1305_keybytes:eB,stackSave:function(){return 0|oB},_crypto_secretstream_xchacha20poly1305_tag_message:QB,_crypto_box_seal:function(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0,C|=0;var i=0,e=0,Q=0,E=0;if(E=oB,oB=oB+96|0,0|mg(E+32|0,E))A=-1;else{e=E+32|0,Q=(i=A)+32|0;do{nB[i>>0]=0|nB[e>>0],i=i+1|0,e=e+1|0}while((0|i)<(0|Q));VA(E+64|0,E+32|0,C),A=0|cI(A+32|0,I,g,B,E+64|0,C,E),$A(E,32),$A(E+32|0,32),$A(E+64|0,24)}return oB=E,0|A},_crypto_aead_xchacha20poly1305_ietf_keygen:zg,_crypto_kx_keypair:function(A,I){return A|=0,I|=0,SI(I,32),0|Jg(A,I)},runPostSets:function(){},_crypto_kx_client_session_keys:function(A,I,g,B,C){I|=0,g|=0,B|=0,C|=0;var i=0,e=0,Q=0;if(Q=oB,e=oB=oB+63&-64,oB=oB+480|0,i=0==(0|(A|=0))?I:A,I=0==(0|I)?i:I,i||EB(),0|Sg(e+448|0,B,C))A=-1;else{lg(e,0,0,64),sg(e,e+448|0,32,0),$A(e+448|0,32),sg(e,g,32,0),sg(e,C,32,0),Hg(e,e+384|0,64),$A(e,384),A=0;do{nB[i+A>>0]=0|nB[e+384+A>>0],nB[I+A>>0]=0|nB[e+384+(A+32)>>0],A=A+1|0}while(32!=(0|A));$A(e+384|0,64),A=0}return oB=Q,0|A},_crypto_shorthash:function(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,t(A,I,g,B,C),0},_crypto_auth_keybytes:eB,_crypto_aead_chacha20poly1305_npubbytes:gB,_crypto_secretstream_xchacha20poly1305_tag_rekey:function(){return 2},_crypto_aead_xchacha20poly1305_ietf_abytes:CB,_crypto_sign_seedbytes:eB,_crypto_box_detached_afternm:KI,_crypto_auth:function(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,eI(A,I,g,B,C),0},_randombytes_random:AB,_crypto_sign_keypair:function(A,I){return A|=0,I|=0,uI(A,I),0},setThrew:function(A,I){A|=0,I|=0,fB||(fB=A,yB=I)},_crypto_generichash_statebytes:function(){return 384},_randombytes_buf_deterministic:function(A,I,g){fg(A|=0,I|=0,0,34646,g|=0)},_crypto_aead_chacha20poly1305_encrypt_detached:z,_crypto_secretstream_xchacha20poly1305_keygen:zg,_sodium_library_version_major:function(){return 10},_crypto_sign_final_verify:function(A,I,g){return A|=0,I|=0,g|=0,0|tI(A,I,g)},_crypto_box_sealbytes:function(){return 48},_crypto_secretbox_keygen:zg,_malloc:function(A){A|=0;var I=0,g=0,B=0,C=0,i=0,e=0,Q=0,E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0,w=0,s=0,h=0,l=0,u=0;u=oB,o=oB=oB+63&-64,oB=oB+16|0;do{if(A>>>0<245){if(a=A>>>0<11?16:A+11&-8,(t=0|tB[8698])>>>(a>>>3)&3|0)return A=34832+((t>>>(a>>>3)&1^1)+(a>>>3)<<1<<2)|0,I=0|tB[A+8>>2],g=0|tB[I+8>>2],(0|A)==(0|g)?tB[8698]=t&~(1<<(t>>>(a>>>3)&1^1)+(a>>>3)):(tB[g+12>>2]=A,tB[A+8>>2]=g),l=(t>>>(a>>>3)&1^1)+(a>>>3)<<3,tB[I+4>>2]=3|l,tB[I+l+4>>2]=1|tB[I+l+4>>2],l=I+8|0,oB=u,0|l;if(r=0|tB[8700],a>>>0>r>>>0){if(t>>>(a>>>3)|0)return A=t>>>(a>>>3)<<(a>>>3)&(2<<(a>>>3)|0-(2<<(a>>>3))),C=((A&0-A)-1|0)>>>(((A&0-A)-1|0)>>>12&16),B=C>>>(C>>>5&8)>>>(C>>>(C>>>5&8)>>>2&4),B=(C>>>5&8|((A&0-A)-1|0)>>>12&16|C>>>(C>>>5&8)>>>2&4|B>>>1&2|B>>>(B>>>1&2)>>>1&1)+(B>>>(B>>>1&2)>>>(B>>>(B>>>1&2)>>>1&1))|0,C=0|tB[34832+(B<<1<<2)+8>>2],A=0|tB[C+8>>2],(34832+(B<<1<<2)|0)==(0|A)?(tB[8698]=t&~(1<<B),A=t&~(1<<B)):(tB[A+12>>2]=34832+(B<<1<<2),tB[34832+(B<<1<<2)+8>>2]=A,A=t),tB[C+4>>2]=3|a,tB[C+a+4>>2]=(B<<3)-a|1,tB[C+a+((B<<3)-a)>>2]=(B<<3)-a,0|r&&(g=0|tB[8703],A&1<<(r>>>3)?(A=0|tB[34832+(r>>>3<<1<<2)+8>>2],I=34832+(r>>>3<<1<<2)+8|0):(tB[8698]=A|1<<(r>>>3),A=34832+(r>>>3<<1<<2)|0,I=34832+(r>>>3<<1<<2)+8|0),tB[I>>2]=g,tB[A+12>>2]=g,tB[g+8>>2]=A,tB[g+12>>2]=34832+(r>>>3<<1<<2)),tB[8700]=(B<<3)-a,tB[8703]=C+a,l=C+8|0,oB=u,0|l;if(n=0|tB[8699]){if(I=((n&0-n)-1|0)>>>(((n&0-n)-1|0)>>>12&16),A=I>>>(I>>>5&8)>>>(I>>>(I>>>5&8)>>>2&4),A=0|tB[35096+((I>>>5&8|((n&0-n)-1|0)>>>12&16|I>>>(I>>>5&8)>>>2&4|A>>>1&2|A>>>(A>>>1&2)>>>1&1)+(A>>>(A>>>1&2)>>>(A>>>(A>>>1&2)>>>1&1))<<2)>>2],I=(-8&tB[A+4>>2])-a|0,g=0|tB[A+16+((0==(0|tB[A+16>>2])&1)<<2)>>2]){do{I=(E=(Q=(-8&tB[g+4>>2])-a|0)>>>0<I>>>0)?Q:I,A=E?g:A,g=0|tB[g+16+((0==(0|tB[g+16>>2])&1)<<2)>>2]}while(0!=(0|g));E=A,e=I}else E=A,e=I;if(Q=E+a|0,E>>>0<Q>>>0){C=0|tB[E+24>>2],A=0|tB[E+12>>2];do{if((0|A)==(0|E)){if(I=E+20|0,!((A=0|tB[I>>2])||(I=E+16|0,A=0|tB[I>>2]))){I=0;break}for(;;)if(g=A+20|0,0|(B=0|tB[g>>2]))A=B,I=g;else{if(g=A+16|0,!(B=0|tB[g>>2]))break;A=B,I=g}tB[I>>2]=0,I=A}else I=0|tB[E+8>>2],tB[I+12>>2]=A,tB[A+8>>2]=I,I=A}while(0);do{if(0|C){if(A=0|tB[E+28>>2],(0|E)==(0|tB[35096+(A<<2)>>2])){if(tB[35096+(A<<2)>>2]=I,!I){tB[8699]=n&~(1<<A);break}}else if(tB[C+16+(((0|tB[C+16>>2])!=(0|E)&1)<<2)>>2]=I,!I)break;tB[I+24>>2]=C,0|(A=0|tB[E+16>>2])&&(tB[I+16>>2]=A,tB[A+24>>2]=I),0|(A=0|tB[E+20>>2])&&(tB[I+20>>2]=A,tB[A+24>>2]=I)}}while(0);return e>>>0<16?(l=e+a|0,tB[E+4>>2]=3|l,tB[(l=E+l+4|0)>>2]=1|tB[l>>2]):(tB[E+4>>2]=3|a,tB[Q+4>>2]=1|e,tB[Q+e>>2]=e,0|r&&(g=0|tB[8703],t&1<<(r>>>3)?(A=0|tB[34832+(r>>>3<<1<<2)+8>>2],I=34832+(r>>>3<<1<<2)+8|0):(tB[8698]=t|1<<(r>>>3),A=34832+(r>>>3<<1<<2)|0,I=34832+(r>>>3<<1<<2)+8|0),tB[I>>2]=g,tB[A+12>>2]=g,tB[g+8>>2]=A,tB[g+12>>2]=34832+(r>>>3<<1<<2)),tB[8700]=e,tB[8703]=Q),l=E+8|0,oB=u,0|l}}}}else if(A>>>0<=4294967231){if(a=A+11&-8,E=0|tB[8699]){Q=(A+11|0)>>>8?a>>>0>16777215?31:a>>>(7+(Q=14-((520192+(Q=(A+11|0)>>>8<<((1048320+((A+11|0)>>>8)|0)>>>16&8))|0)>>>16&4|(1048320+((A+11|0)>>>8)|0)>>>16&8|(245760+(Q<<((Q+520192|0)>>>16&4))|0)>>>16&2)+(Q<<((Q+520192|0)>>>16&4)<<((245760+(Q<<((Q+520192|0)>>>16&4))|0)>>>16&2)>>>15)|0)|0)&1|Q<<1:0,I=0|tB[35096+(Q<<2)>>2];A:do{if(I)for(A=0,g=0-a|0,e=a<<(31==(0|Q)?0:25-(Q>>>1)|0),C=0;;){if((B=(-8&tB[I+4>>2])-a|0)>>>0<g>>>0){if(!B){A=I,g=0,B=I,h=61;break A}A=I,g=B}if(B=0|tB[I+20>>2],I=0|tB[I+16+(e>>>31<<2)>>2],C=0==(0|B)|(0|B)==(0|I)?C:B,B=0==(0|I)){I=C,h=57;break}e<<=1&(1^B)}else I=0,A=0,g=0-a|0,h=57}while(0);if(57==(0|h)){if(0==(0|I)&0==(0|A)){if(A=2<<Q,!(E&(A|0-A)))break;t=(E&(A|0-A)&0-(E&(A|0-A)))-1|0,A=0,I=0|tB[35096+((t>>>(t>>>12&16)>>>5&8|t>>>12&16|(r=t>>>(t>>>12&16)>>>(t>>>(t>>>12&16)>>>5&8))>>>2&4|r>>>(r>>>2&4)>>>1&2|(I=r>>>(r>>>2&4)>>>(r>>>(r>>>2&4)>>>1&2))>>>1&1)+(I>>>(I>>>1&1))<<2)>>2]}I?(B=I,h=61):(Q=A,e=g)}if(61==(0|h))for(;;){if(h=0,I=(-8&tB[B+4>>2])-a|0,r=I>>>0<g>>>0,I=r?I:g,A=r?B:A,!(B=0|tB[B+16+((0==(0|tB[B+16>>2])&1)<<2)>>2])){Q=A,e=I;break}g=I,h=61}if(0!=(0|Q)?e>>>0<((0|tB[8700])-a|0)>>>0:0){if(i=Q+a|0,Q>>>0>=i>>>0)return l=0,oB=u,0|l;C=0|tB[Q+24>>2],A=0|tB[Q+12>>2];do{if((0|A)==(0|Q)){if(I=Q+20|0,!((A=0|tB[I>>2])||(I=Q+16|0,A=0|tB[I>>2]))){A=0;break}for(;;)if(g=A+20|0,0|(B=0|tB[g>>2]))A=B,I=g;else{if(g=A+16|0,!(B=0|tB[g>>2]))break;A=B,I=g}tB[I>>2]=0}else l=0|tB[Q+8>>2],tB[l+12>>2]=A,tB[A+8>>2]=l}while(0);do{if(C){if(I=0|tB[Q+28>>2],(0|Q)==(0|tB[35096+(I<<2)>>2])){if(tB[35096+(I<<2)>>2]=A,!A){tB[8699]=E&~(1<<I),B=E&~(1<<I);break}}else if(tB[C+16+(((0|tB[C+16>>2])!=(0|Q)&1)<<2)>>2]=A,!A){B=E;break}tB[A+24>>2]=C,0|(I=0|tB[Q+16>>2])&&(tB[A+16>>2]=I,tB[I+24>>2]=A),(I=0|tB[Q+20>>2])?(tB[A+20>>2]=I,tB[I+24>>2]=A,B=E):B=E}else B=E}while(0);do{if(e>>>0>=16){if(tB[Q+4>>2]=3|a,tB[i+4>>2]=1|e,tB[i+e>>2]=e,g=e>>>3,e>>>0<256){(A=0|tB[8698])&1<<g?(A=0|tB[34832+(g<<1<<2)+8>>2],I=34832+(g<<1<<2)+8|0):(tB[8698]=A|1<<g,A=34832+(g<<1<<2)|0,I=34832+(g<<1<<2)+8|0),tB[I>>2]=i,tB[A+12>>2]=i,tB[i+8>>2]=A,tB[i+12>>2]=34832+(g<<1<<2);break}if(A=e>>>8,A=A?e>>>0>16777215?31:e>>>(7+(A=14-((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4|(A+1048320|0)>>>16&8|(245760+(l=A<<((A+1048320|0)>>>16&8)<<((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4))|0)>>>16&2)+(l<<((l+245760|0)>>>16&2)>>>15)|0)|0)&1|A<<1:0,g=35096+(A<<2)|0,tB[i+28>>2]=A,tB[i+16+4>>2]=0,tB[i+16>>2]=0,I=1<<A,!(B&I)){tB[8699]=B|I,tB[g>>2]=i,tB[i+24>>2]=g,tB[i+12>>2]=i,tB[i+8>>2]=i;break}for(I=e<<(31==(0|A)?0:25-(A>>>1)|0),g=0|tB[g>>2];;){if((-8&tB[g+4>>2]|0)==(0|e)){h=97;break}if(B=g+16+(I>>>31<<2)|0,!(A=0|tB[B>>2])){h=96;break}I<<=1,g=A}if(96==(0|h)){tB[B>>2]=i,tB[i+24>>2]=g,tB[i+12>>2]=i,tB[i+8>>2]=i;break}if(97==(0|h)){l=0|tB[(h=g+8|0)>>2],tB[l+12>>2]=i,tB[h>>2]=i,tB[i+8>>2]=l,tB[i+12>>2]=g,tB[i+24>>2]=0;break}}else l=e+a|0,tB[Q+4>>2]=3|l,tB[(l=Q+l+4|0)>>2]=1|tB[l>>2]}while(0);return l=Q+8|0,oB=u,0|l}}}else a=-1}while(0);if((g=0|tB[8700])>>>0>=a>>>0)return A=g-a|0,I=0|tB[8703],A>>>0>15?(l=I+a|0,tB[8703]=l,tB[8700]=A,tB[l+4>>2]=1|A,tB[l+A>>2]=A,tB[I+4>>2]=3|a):(tB[8700]=0,tB[8703]=0,tB[I+4>>2]=3|g,tB[I+g+4>>2]=1|tB[I+g+4>>2]),l=I+8|0,oB=u,0|l;if((C=0|tB[8701])>>>0>a>>>0)return s=C-a|0,tB[8701]=s,l=0|tB[8704],h=l+a|0,tB[8704]=h,tB[h+4>>2]=1|s,tB[l+4>>2]=3|a,l=l+8|0,oB=u,0|l;if(0|tB[8816]?A=0|tB[8818]:(tB[8818]=4096,tB[8817]=4096,tB[8819]=-1,tB[8820]=-1,tB[8821]=0,tB[8809]=0,tB[o>>2]=-16&o^1431655768,tB[8816]=-16&o^1431655768,A=4096),e=a+48|0,Q=a+47|0,n=A+Q|0,E=0-A|0,(n&E)>>>0<=a>>>0)return l=0,oB=u,0|l;if(0|(A=0|tB[8808])?((o=0|tB[8806])+(n&E)|0)>>>0<=o>>>0?1:(o+(n&E)|0)>>>0>A>>>0:0)return l=0,oB=u,0|l;A:do{if(4&tB[8809])A=0,h=133;else{g=0|tB[8704];I:do{if(g){for(I=35240;!((A=0|tB[I>>2])>>>0<=g>>>0?(c=I+4|0,(A+(0|tB[c>>2])|0)>>>0>g>>>0):0);){if(!(A=0|tB[I+8>>2])){h=118;break I}I=A}if((n-C&E)>>>0<2147483647)if((0|(A=0|RA(n-C&E|0)))==((0|tB[I>>2])+(0|tB[c>>2])|0)){if(-1!=(0|A)){e=n-C&E,i=A,h=135;break A}A=n-C&E}else B=A,g=n-C&E,h=126;else A=0}else h=118}while(0);do{if(118==(0|h))if(-1!=(0|(I=0|RA(0)))?(y=0|tB[8817],y=(0==(y+-1&I|0)?0:(y+-1+I&0-y)-I|0)+(n&E)|0,f=0|tB[8806],y>>>0>a>>>0&y>>>0<2147483647):0){if(0|(c=0|tB[8808])?(y+f|0)>>>0<=f>>>0|(y+f|0)>>>0>c>>>0:0){A=0;break}if((0|(A=0|RA(0|y)))==(0|I)){e=y,i=I,h=135;break A}B=A,g=y,h=126}else A=0}while(0);do{if(126==(0|h)){if(I=0-g|0,!(e>>>0>g>>>0&g>>>0<2147483647&-1!=(0|B))){if(-1==(0|B)){A=0;break}e=g,i=B,h=135;break A}if(A=0|tB[8818],(A=Q-g+A&0-A)>>>0>=2147483647){e=g,i=B,h=135;break A}if(-1==(0|RA(0|A))){RA(0|I),A=0;break}e=A+g|0,i=B,h=135;break A}}while(0);tB[8809]=4|tB[8809],h=133}}while(0);if(!(133==(0|h)?(n&E)>>>0<2147483647:0)||(i=0|RA(n&E|0),w=0|RA(0),s=(w-i|0)>>>0>(a+40|0)>>>0,-1==(0|i)|1^s|i>>>0<w>>>0&-1!=(0|i)&-1!=(0|w)^1)||(e=s?w-i|0:A,h=135),135==(0|h)){A=(0|tB[8806])+e|0,tB[8806]=A,A>>>0>(0|tB[8807])>>>0&&(tB[8807]=A),E=0|tB[8704];do{if(E){for(A=35240;;){if(I=0|tB[A>>2],g=A+4|0,B=0|tB[g>>2],(0|i)==(I+B|0)){h=145;break}if(!(C=0|tB[A+8>>2]))break;A=C}if((145==(0|h)?0==(8&tB[A+12>>2]|0):0)?E>>>0<i>>>0&E>>>0>=I>>>0:0){tB[g>>2]=B+e,h=0==(E+8&7|0)?0:0-(E+8)&7,l=(0|tB[8701])+(e-h)|0,tB[8704]=E+h,tB[8701]=l,tB[E+h+4>>2]=1|l,tB[E+h+l+4>>2]=40,tB[8705]=tB[8820];break}for(i>>>0<(0|tB[8702])>>>0&&(tB[8702]=i),g=i+e|0,A=35240;;){if((0|tB[A>>2])==(0|g)){h=153;break}if(!(I=0|tB[A+8>>2]))break;A=I}if(153==(0|h)?0==(8&tB[A+12>>2]|0):0){tB[A>>2]=i,tB[(t=A+4|0)>>2]=(0|tB[t>>2])+e,n=(t=i+(0==(7&(t=i+8|0)|0)?0:0-t&7)|0)+a|0,Q=(A=g+(0==(g+8&7|0)?0:0-(g+8)&7)|0)-t-a|0,tB[t+4>>2]=3|a;do{if((0|A)!=(0|E)){if((0|A)==(0|tB[8703])){l=(0|tB[8700])+Q|0,tB[8700]=l,tB[8703]=n,tB[n+4>>2]=1|l,tB[n+l>>2]=l;break}if(1==(3&(e=0|tB[A+4>>2])|0)){A:do{if(e>>>0<256){if(I=0|tB[A+8>>2],(0|(g=0|tB[A+12>>2]))==(0|I)){tB[8698]=tB[8698]&~(1<<(e>>>3));break}tB[I+12>>2]=g,tB[g+8>>2]=I;break}i=0|tB[A+24>>2],I=0|tB[A+12>>2];do{if((0|I)==(0|A)){if(I=0|tB[A+16+4>>2])C=A+16+4|0;else{if(!(I=0|tB[A+16>>2])){I=0;break}C=A+16|0}for(;;)if(g=I+20|0,0|(B=0|tB[g>>2]))I=B,C=g;else{if(g=I+16|0,!(B=0|tB[g>>2]))break;I=B,C=g}tB[C>>2]=0}else l=0|tB[A+8>>2],tB[l+12>>2]=I,tB[I+8>>2]=l}while(0);if(!i)break;g=0|tB[A+28>>2];do{if((0|A)==(0|tB[35096+(g<<2)>>2])){if(tB[35096+(g<<2)>>2]=I,0|I)break;tB[8699]=tB[8699]&~(1<<g);break A}if(tB[i+16+(((0|tB[i+16>>2])!=(0|A)&1)<<2)>>2]=I,!I)break A}while(0);if(tB[I+24>>2]=i,0|(g=0|tB[A+16>>2])&&(tB[I+16>>2]=g,tB[g+24>>2]=I),!(g=0|tB[A+16+4>>2]))break;tB[I+20>>2]=g,tB[g+24>>2]=I}while(0);A=A+(-8&e)|0,C=(-8&e)+Q|0}else C=Q;if(g=A+4|0,tB[g>>2]=-2&tB[g>>2],tB[n+4>>2]=1|C,tB[n+C>>2]=C,g=C>>>3,C>>>0<256){(A=0|tB[8698])&1<<g?(A=0|tB[34832+(g<<1<<2)+8>>2],I=34832+(g<<1<<2)+8|0):(tB[8698]=A|1<<g,A=34832+(g<<1<<2)|0,I=34832+(g<<1<<2)+8|0),tB[I>>2]=n,tB[A+12>>2]=n,tB[n+8>>2]=A,tB[n+12>>2]=34832+(g<<1<<2);break}A=C>>>8;do{if(A){if(C>>>0>16777215){A=31;break}A=C>>>(7+(A=14-((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4|(A+1048320|0)>>>16&8|(245760+(l=A<<((A+1048320|0)>>>16&8)<<((520192+(A<<((A+1048320|0)>>>16&8))|0)>>>16&4))|0)>>>16&2)+(l<<((l+245760|0)>>>16&2)>>>15)|0)|0)&1|A<<1}else A=0}while(0);if(B=35096+(A<<2)|0,tB[n+28>>2]=A,tB[n+16+4>>2]=0,tB[n+16>>2]=0,I=0|tB[8699],g=1<<A,!(I&g)){tB[8699]=I|g,tB[B>>2]=n,tB[n+24>>2]=B,tB[n+12>>2]=n,tB[n+8>>2]=n;break}for(I=C<<(31==(0|A)?0:25-(A>>>1)|0),g=0|tB[B>>2];;){if((-8&tB[g+4>>2]|0)==(0|C)){h=194;break}if(B=g+16+(I>>>31<<2)|0,!(A=0|tB[B>>2])){h=193;break}I<<=1,g=A}if(193==(0|h)){tB[B>>2]=n,tB[n+24>>2]=g,tB[n+12>>2]=n,tB[n+8>>2]=n;break}if(194==(0|h)){l=0|tB[(h=g+8|0)>>2],tB[l+12>>2]=n,tB[h>>2]=n,tB[n+8>>2]=l,tB[n+12>>2]=g,tB[n+24>>2]=0;break}}else l=(0|tB[8701])+Q|0,tB[8701]=l,tB[8704]=n,tB[n+4>>2]=1|l}while(0);return l=t+8|0,oB=u,0|l}for(A=35240;!((I=0|tB[A>>2])>>>0<=E>>>0?(l=I+(0|tB[A+4>>2])|0)>>>0>E>>>0:0);)A=0|tB[A+8>>2];C=(C=l+-47+(0==(l+-47+8&7|0)?0:0-(l+-47+8)&7)|0)>>>0<(E+16|0)>>>0?E:C,h=i+(A=0==(7&(A=i+8|0)|0)?0:0-A&7)|0,A=e+-40-A|0,tB[8704]=h,tB[8701]=A,tB[h+4>>2]=1|A,tB[h+A+4>>2]=40,tB[8705]=tB[8820],tB[C+4>>2]=27,tB[C+8>>2]=tB[8810],tB[C+8+4>>2]=tB[8811],tB[C+8+8>>2]=tB[8812],tB[C+8+12>>2]=tB[8813],tB[8810]=i,tB[8811]=e,tB[8813]=0,tB[8812]=C+8,A=C+24|0;do{h=A,tB[(A=A+4|0)>>2]=7}while((h+8|0)>>>0<l>>>0);if((0|C)!=(0|E)){if(tB[C+4>>2]=-2&tB[C+4>>2],tB[E+4>>2]=C-E|1,tB[C>>2]=C-E,(C-E|0)>>>0<256){g=34832+((C-E|0)>>>3<<1<<2)|0,(A=0|tB[8698])&1<<((C-E|0)>>>3)?(A=0|tB[g+8>>2],I=g+8|0):(tB[8698]=A|1<<((C-E|0)>>>3),A=g,I=g+8|0),tB[I>>2]=E,tB[A+12>>2]=E,tB[E+8>>2]=A,tB[E+12>>2]=g;break}if(A=(C-E|0)>>>8?(C-E|0)>>>0>16777215?31:(C-E|0)>>>(7+(A=14-((520192+(A=(C-E|0)>>>8<<((1048320+((C-E|0)>>>8)|0)>>>16&8))|0)>>>16&4|(1048320+((C-E|0)>>>8)|0)>>>16&8|(245760+(A<<((A+520192|0)>>>16&4))|0)>>>16&2)+(A<<((A+520192|0)>>>16&4)<<((245760+(A<<((A+520192|0)>>>16&4))|0)>>>16&2)>>>15)|0)|0)&1|A<<1:0,B=35096+(A<<2)|0,tB[E+28>>2]=A,tB[E+20>>2]=0,tB[E+16>>2]=0,I=0|tB[8699],g=1<<A,!(I&g)){tB[8699]=I|g,tB[B>>2]=E,tB[E+24>>2]=B,tB[E+12>>2]=E,tB[E+8>>2]=E;break}for(I=C-E<<(31==(0|A)?0:25-(A>>>1)|0),g=0|tB[B>>2];;){if((-8&tB[g+4>>2]|0)==(C-E|0)){h=216;break}if(B=g+16+(I>>>31<<2)|0,!(A=0|tB[B>>2])){h=215;break}I<<=1,g=A}if(215==(0|h)){tB[B>>2]=E,tB[E+24>>2]=g,tB[E+12>>2]=E,tB[E+8>>2]=E;break}if(216==(0|h)){l=0|tB[(h=g+8|0)>>2],tB[l+12>>2]=E,tB[h>>2]=E,tB[E+8>>2]=l,tB[E+12>>2]=g,tB[E+24>>2]=0;break}}}else{0==(0|(l=0|tB[8702]))|i>>>0<l>>>0&&(tB[8702]=i),tB[8810]=i,tB[8811]=e,tB[8813]=0,tB[8707]=tB[8816],tB[8706]=-1,A=0;do{tB[12+(l=34832+(A<<1<<2)|0)>>2]=l,tB[l+8>>2]=l,A=A+1|0}while(32!=(0|A));h=i+(l=0==(7&(l=i+8|0)|0)?0:0-l&7)|0,l=e+-40-l|0,tB[8704]=h,tB[8701]=l,tB[h+4>>2]=1|l,tB[h+l+4>>2]=40,tB[8705]=tB[8820]}}while(0);if((A=0|tB[8701])>>>0>a>>>0)return s=A-a|0,tB[8701]=s,l=0|tB[8704],h=l+a|0,tB[8704]=h,tB[h+4>>2]=1|s,tB[l+4>>2]=3|a,l=l+8|0,oB=u,0|l}return tB[8242]=12,l=0,oB=u,0|l},_sodium_version_string:function(){return 34769},_crypto_generichash_keybytes_max:iB,_crypto_sign_ed25519_pk_to_curve25519:function(A,I){A|=0;var g=0,B=0;return B=oB,g=oB=oB+63&-64,oB=oB+400|0,((0==(0|XA(I|=0))?0==(0|Y(g+240|0,I)):0)?(_(g+80|0,g+240|0),0==(0|DI(g+80|0))):0)?(OI(g),j(g,g,g+240+40|0),h(g,g),OI(g+40|0),T(g+40|0,g+40|0,g+240+40|0),Q(g+40|0,g+40|0,g),u(A,g+40|0),A=0):A=-1,oB=B,0|A},_i64Add:Qg,_crypto_box_beforenmbytes:eB,_crypto_generichash:qI,getTempRet0:function(){return 0|wB},_crypto_aead_chacha20poly1305_ietf_nsecbytes:QB,_randombytes_stir:$g,_crypto_aead_chacha20poly1305_ietf_encrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,C>>>0>0|0==(0|C)&B>>>0>4294967279&&EB(),x(A,A+B|0,0,g,B,C,i,e,Q,0,n,t),0|I&&(n=0|Qg(0|B,0|C,16,0),tB[I>>2]=n,tB[I+4>>2]=wB),0},_crypto_secretstream_xchacha20poly1305_tag_push:IB,_crypto_core_hchacha20:w,_crypto_box_beforenm:Dg,_crypto_shorthash_keybytes:CB,_crypto_aead_chacha20poly1305_ietf_decrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,A=i>>>0>0|0==(0|i)&C>>>0>15?0|R(A,0,B,g=0|Qg(0|C,0|i,-16,-1),wB,B+C+-16|0,e,Q,E,n,t):-1,0|I&&(n=0==(0|A),i=0|Qg(0|C,0|i,-16,-1),tB[I>>2]=n?i:0,tB[I+4>>2]=n?wB:0),0|A},_randombytes_close:QB,_crypto_kx_server_session_keys:function(A,I,g,B,C){I|=0,g|=0,B|=0,C|=0;var i=0,e=0,Q=0;if(Q=oB,e=oB=oB+63&-64,oB=oB+480|0,i=0==(0|(A|=0))?I:A,I=0==(0|I)?i:I,i||EB(),0|Sg(e+448|0,B,C))A=-1;else{lg(e,0,0,64),sg(e,e+448|0,32,0),$A(e+448|0,32),sg(e,C,32,0),sg(e,g,32,0),Hg(e,e+384|0,64),$A(e,384),A=0;do{nB[I+A>>0]=0|nB[e+384+A>>0],nB[i+A>>0]=0|nB[e+384+(A+32)>>0],A=A+1|0}while(32!=(0|A));$A(e+384|0,64),A=0}return oB=Q,0|A},_crypto_secretstream_xchacha20poly1305_tag_final:function(){return 3},_crypto_core_hchacha20_constbytes:CB,_crypto_shorthash_bytes:gB,_crypto_kdf_keybytes:eB,establishStackSpace:function(A,I){oB=A|=0,cB=I|=0},_crypto_sign_final_create:function(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,rI(A,I,g,B),0},_crypto_aead_chacha20poly1305_encrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,C>>>0>0|0==(0|C)&B>>>0>4294967279&&EB(),z(A,A+B|0,0,g,B,C,i,e,Q,0,n,t),0|I&&(n=0|Qg(0|B,0|C,16,0),tB[I>>2]=n,tB[I+4>>2]=wB),0},_crypto_aead_xchacha20poly1305_ietf_encrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,C>>>0>4294967295|-1==(0|C)&B>>>0>4294967279&&EB(),BA(A,A+B|0,0,g,B,C,i,e,Q,0,n,t),0|I&&(n=0|Qg(0|B,0|C,16,0),tB[I>>2]=n,tB[I+4>>2]=wB),0},_crypto_kx_secretkeybytes:eB,_crypto_secretstream_xchacha20poly1305_messagebytes_max:function(){return-1},_crypto_secretstream_xchacha20poly1305_abytes:function(){return 17},_crypto_box_detached:LA,_randombytes_buf:SI,_bitshift64Ashr:GI,_crypto_box_open_detached:PA,_crypto_scalarmult_bytes:eB,_crypto_kx_seedbytes:eB,_crypto_auth_verify:function(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,0|WA(A,I,g,B,C)},_crypto_sign_detached:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,zI(A,I,g,B,C,i),0},_crypto_secretbox_detached:F,_crypto_secretbox_easy:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,B>>>0>0|0==(0|B)&g>>>0>4294967279?(EB(),0):(F(A+16|0,A,I,g,B,C,i),0)},_crypto_secretstream_xchacha20poly1305_init_pull:function(A,I,g){var B=0;return w(A|=0,I|=0,g|=0,0),TI(A),B=rB[I+16>>0]|rB[I+16+1>>0]<<8|rB[I+16+2>>0]<<16|rB[I+16+3>>0]<<24,g=rB[I+16+4>>0]|rB[I+16+4+1>>0]<<8|rB[I+16+4+2>>0]<<16|rB[I+16+4+3>>0]<<24,nB[A+36>>0]=B,nB[A+36+1>>0]=B>>8,nB[A+36+2>>0]=B>>16,nB[A+36+3>>0]=B>>24,nB[A+36+4>>0]=g,nB[A+36+4+1>>0]=g>>8,nB[A+36+4+2>>0]=g>>16,nB[A+36+4+3>>0]=g>>24,nB[A+44>>0]=0,nB[A+44+1>>0]=0,nB[A+44+2>>0]=0,nB[A+44+3>>0]=0,nB[A+44+4>>0]=0,nB[A+44+4+1>>0]=0,nB[A+44+4+2>>0]=0,nB[A+44+4+3>>0]=0,0},_crypto_aead_xchacha20poly1305_ietf_decrypt_detached:QA,_memset:AA,_crypto_generichash_keygen:zg,_crypto_box_open_detached_afternm:LI,_sodium_bin2hex:function(A,I,g,B){A|=0,g|=0;var C=0,i=0;if((B|=0)>>>0<2147483647&B<<1>>>0<(I|=0)>>>0||EB(),B)for(C=0,I=0;;){if(i=0|rB[g+C>>0],nB[A+I>>0]=87+(i>>>4)+((65526+(i>>>4)|0)>>>8&217),nB[A+(1|I)>>0]=(22272+((15&i)<<8)+(65526+(15&i)&55552)|0)>>>8,(0|(I=C+1|0))==(0|B)){I=B<<1;break}C=I,I<<=1}else I=0;return nB[A+I>>0]=0,0|A},_crypto_aead_xchacha20poly1305_ietf_decrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,A=i>>>0>0|0==(0|i)&C>>>0>15?0|QA(A,0,B,g=0|Qg(0|C,0|i,-16,-1),wB,B+C+-16|0,e,Q,E,n,t):-1,0|I&&(n=0==(0|A),i=0|Qg(0|C,0|i,-16,-1),tB[I>>2]=n?i:0,tB[I+4>>2]=n?wB:0),0|A},_crypto_aead_chacha20poly1305_ietf_keygen:zg,_crypto_box_seedbytes:eB,_crypto_core_hchacha20_inputbytes:CB,_crypto_auth_keygen:zg,_crypto_hash:function(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,EI(A,I,g,B),0},_sodium_library_minimal:IB,_crypto_box_easy_afternm:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,B>>>0>0|0==(0|B)&g>>>0>4294967279?(EB(),0):(KI(A+16|0,A,I,g,B,C,i),0)},_crypto_aead_xchacha20poly1305_ietf_encrypt_detached:BA,_sodium_bin2base64:function(A,I,g,B,C){A|=0,I|=0,g|=0,B|=0;var i=0,e=0,Q=0,E=0,n=0,t=0;Ug(C|=0),e=(0|sB((B>>>0)/3|0,-3))+B|0,i=((B>>>0)/3|0)<<2;do{if(e){if(2&C){i=(2|i)+(e>>>1)|0;break}i=i+4|0;break}}while(0);if(i>>>0>=I>>>0&&EB(),4&C)if(0|B){Q=0,n=0,e=0,C=0;do{for(C=0|rB[g+n>>0]|C<<8,t=Q+8|0,E=e;Q=t+-6|0,e=E+1|0,nB[A+E>>0]=0|fI(C>>>Q&63),Q>>>0>5;)t=Q,E=e;n=n+1|0}while((0|n)!=(0|B));Q&&(nB[A+e>>0]=0|fI(C<<12-t&63),e=E+2|0)}else e=0;else if(0|B){E=0,C=0,e=0,Q=0;do{for(C=0|rB[g+E>>0]|C<<8,t=e,n=Q+8|0;Q=n+-6|0,e=t+1|0,nB[A+t>>0]=0|wI(C>>>Q&63),Q>>>0>5;)t=e,n=Q;E=E+1|0}while((0|E)!=(0|B));Q&&(nB[A+e>>0]=0|wI(C<<12-n&63),e=t+2|0)}else e=0;return i>>>0<e>>>0&&FB(34716,34735,230,34751),i>>>0>e>>>0?AA(A+e|0,61,i-e|0):i=e,B=i+1|0,AA(A+i|0,0,(B>>>0<I>>>0?I:B)-i|0),0|A},_crypto_box_macbytes:CB,_randombytes_seedbytes:eB,_crypto_box_publickeybytes:eB,_crypto_aead_chacha20poly1305_decrypt_detached:K,_crypto_sign_secretkeybytes:iB,_crypto_box_secretkeybytes:eB,_crypto_aead_xchacha20poly1305_ietf_keybytes:eB,_crypto_scalarmult_scalarbytes:eB,_crypto_secretstream_xchacha20poly1305_rekey:S,_crypto_generichash_keybytes_min:CB,_crypto_aead_chacha20poly1305_keygen:zg,_crypto_kx_sessionkeybytes:eB,_crypto_secretstream_xchacha20poly1305_headerbytes:BB,_crypto_aead_chacha20poly1305_decrypt:function(A,I,g,B,C,i,e,Q,E,n,t){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0,t|=0,A=i>>>0>0|0==(0|i)&C>>>0>15?0|K(A,0,B,g=0|Qg(0|C,0|i,-16,-1),wB,B+C+-16|0,e,Q,E,n,t):-1,0|I&&(n=0==(0|A),i=0|Qg(0|C,0|i,-16,-1),tB[I>>2]=n?i:0,tB[I+4>>2]=n?wB:0),0|A},_memmove:TA,_crypto_aead_chacha20poly1305_ietf_decrypt_detached:R,_crypto_sign:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0|aA(A,I,g,B,C,i)},_crypto_secretbox_noncebytes:BB,_crypto_box_keypair:mg,_i64Subtract:ig,_crypto_generichash_keybytes:eB,_crypto_hash_bytes:iB,_crypto_generichash_bytes_min:CB,_sodium_init:function(){var A=0;return 0|tB[8696]?A=1:(Og(),$g(),PI(),tB[8696]=1,A=0),0|A},_crypto_secretbox_macbytes:CB,_crypto_secretbox_keybytes:eB,_crypto_aead_xchacha20poly1305_ietf_npubbytes:BB,_randombytes:function(A,I,g){A|=0,(g|=0)>>>0<1|1==(0|g)&(I|=0)>>>0<0?SI(A,I):FB(34658,34678,204,34704)},_crypto_sign_publickeybytes:eB,_crypto_sign_update:function(A,I,g,B){return A|=0,I|=0,g|=0,B|=0,pg(A,I,g,B),0},setTempRet0:function(A){wB=A|=0},_crypto_sign_seed_keypair:function(A,I,g){return A|=0,I|=0,g|=0,bA(A,I,g),0},_crypto_generichash_bytes:eB,_crypto_generichash_bytes_max:iB,_crypto_secretbox_open_detached:M,_crypto_sign_init:function(A){return A|=0,qg(A),0},_crypto_core_hchacha20_keybytes:eB,___muldi3:MI,_bitshift64Shl:ZI,_crypto_sign_verify_detached:function(A,I,g,B,C){return A|=0,I|=0,g|=0,B|=0,C|=0,0|Ag(A,I,g,B,C)},_crypto_kx_seed_keypair:function(A,I,g){return A|=0,I|=0,g|=0,qI(I,32,g,32,0,0,0),0|Jg(A,I)},_crypto_box_open_easy:OA,_crypto_generichash_init:lg,_crypto_aead_chacha20poly1305_nsecbytes:QB,_crypto_kdf_contextbytes:gB,_crypto_sign_bytes:iB,_crypto_generichash_update:sg,_crypto_scalarmult:Sg,_crypto_aead_chacha20poly1305_ietf_abytes:CB,stackRestore:function(A){oB=A|=0},_crypto_kdf_keygen:zg,_crypto_aead_xchacha20poly1305_ietf_nsecbytes:QB,_crypto_box_seal_open:function(A,I,g,B,C,i){A|=0,I|=0,C|=0,i|=0;var e=0,Q=0;return Q=oB,e=oB=oB+63&-64,oB=oB+32|0,(B|=0)>>>0<0|0==(0|B)&(g|=0)>>>0<48?A=-1:(g=0|Qg(0|g,0|B,-32,-1),B=wB,VA(e,I,C),A=0|OA(A,I+32|0,g,B,e,I,i)),oB=Q,0|A},_crypto_box_easy:cI,_crypto_secretstream_xchacha20poly1305_pull:function(A,I,g,B,C,i,e,Q,E,n){A|=0,I|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0;var t=0,r=0,a=0,o=0,c=0;c=oB,o=oB=oB+63&-64,oB=oB+352|0,0|(g|=0)&&(tB[g>>2]=0,tB[g+4>>2]=0),0|B&&(nB[B>>0]=-1);do{if(e>>>0<0|0==(0|e)&i>>>0<17)Q=-1;else{r=0|Qg(0|i,0|e,-17,-1),(a=wB)>>>0>0|0==(0|a)&r>>>0>4294967295&&EB(),fg(o+280|0,64,0,A+32|0,A),vg(o,o+280|0),$A(o+280|0,64),ng(o,Q,E,n),ng(o,35416,15&(Q=0|ig(0,0,0|E,0|n)),0),t=63+(Q=o+280+1|0)|0;do{nB[Q>>0]=0,Q=Q+1|0}while((0|Q)<(0|t));if(nB[o+280>>0]=0|nB[C>>0],VI(o+280|0,o+280|0,64,0,A+32|0,1,A),Q=0|nB[o+280>>0],nB[o+280>>0]=0|nB[C>>0],ng(o,o+280|0,64,0),ng(o,C+1|0,r,a),t=0|Qg(0|i,0|e,15,0),ng(o,35416,15&t,0),oI(o+272|0,E,n),ng(o,o+272|0,8,0),n=0|Qg(0|i,0|e,47,0),oI(o+272|0,n,wB),ng(o,o+272|0,8,0),bg(o,o+256|0),$A(o,256),0|GA(o+256|0,C+1+r|0,16)){$A(o+256|0,16),Q=-1;break}VI(I,C+1|0,r,a,A+32|0,2,A),JI(A+36|0,o+256|0),_I(A+32|0),(0==(2&Q)?!(0|jA(A+32|0)):0)||S(A),0|g&&(tB[g>>2]=r,tB[g+4>>2]=a),0|B?(nB[B>>0]=Q,Q=0):Q=0}}while(0);return oB=c,0|Q},_sodium_base642bin:function(A,I,g,B,C,i,e,Q){A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,e|=0,Q|=0;var E=0,n=0,t=0,r=0,a=0,o=0,c=0,f=0,y=0;if(y=oB,f=oB=oB+63&-64,oB=oB+16|0,tB[f>>2]=0,Ug(Q),B){n=0,r=0,t=0,E=0;A:for(;;){for(;o=0|nB[g+E>>0],255==(0|(a=4&Q?0|oA(o):0|yA(o)));){if(!C){a=18;break A}if(!(0|dg(C,o))){a=19;break A}if((E=E+1|0)>>>0>=B>>>0){a=17;break A}}if(r=a+(r<<6)|0,(a=n+6|0)>>>0>7){if(n=n+-2|0,t>>>0>=I>>>0){a=13;break}nB[A+t>>0]=r>>>n,t=t+1|0}else n=a;if((E=E+1|0)>>>0>=B>>>0){a=16;break}}13==(0|a)?(tB[f>>2]=E,tB[8242]=34,E=-1):16==(0|a)?(tB[f>>2]=E,E=0):17==(0|a)?(tB[f>>2]=E,E=0):18==(0|a)?(tB[f>>2]=E,E=0):19==(0|a)&&(tB[f>>2]=E,E=0),n>>>0>4?(E=-1,t=0):a=21}else E=0,t=0,r=0,n=0,a=21;do{if(21==(0|a))if((1<<n)-1&r)E=-1,t=0;else if(E|2&Q||(E=0|CA(g,B,f,C,n>>>1)),E)t=0;else if(0!=(0|C)?(c=0|tB[f>>2])>>>0<B>>>0:0){for(E=c;;){if(!(0|dg(C,0|nB[g+E>>0]))){a=30;break}if((E=E+1|0)>>>0>=B>>>0){a=29;break}}if(29==(0|a)){tB[f>>2]=E,E=0;break}if(30==(0|a)){tB[f>>2]=E,E=0;break}}else E=0}while(0);return n=0|tB[f>>2],e?tB[e>>2]=g+n:(0|n)!=(0|B)&&(tB[8242]=22,E=-1),0|i&&(tB[i>>2]=t),oB=y,0|E},_sodium_base64_encoded_len:function(A,I){A|=0;var g=0;return Ug(I|=0),g=(0|sB((A>>>0)/3|0,-3))+A|0,(((A>>>0)/3|0)<<2|1)+(4-(3-g&0-(I>>>1&1))&0-(1&(g>>>1|g)))|0},_crypto_secretbox_open_easy:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0|(A=B>>>0<0|0==(0|B)&g>>>0<16?-1:0|M(A,I+16|0,I,B=0|Qg(0|g,0|B,-16,-1),wB,C,i))},_crypto_generichash_final:Hg,_crypto_stream_keygen:zg,_randombytes_uniform:function(A){var I=0;if((A|=0)>>>0<2)A=0;else{do{I=0|AB()}while(I>>>0<(((0-A|0)>>>0)%(A>>>0)|0)>>>0);A=(I>>>0)%(A>>>0)|0}return 0|A},_crypto_secretstream_xchacha20poly1305_push:function(A,I,g,B,C,i,e,Q,E,n){A|=0,I|=0,B|=0,C|=0,i|=0,e|=0,Q|=0,E|=0,n|=0;var t=0,r=0,a=0;r=oB,a=oB=oB+63&-64,oB=oB+336|0,0|(g|=0)&&(tB[g>>2]=0,tB[g+4>>2]=0),i>>>0>0|0==(0|i)&C>>>0>4294967295&&EB(),fg(a+264|0,64,0,A+32|0,A),vg(a,a+264|0),$A(a+264|0,64),ng(a,e,Q,E),ng(a,35416,15&(e=0|ig(0,0,0|Q,0|E)),0),t=63+(e=a+264+1|0)|0;do{nB[e>>0]=0,e=e+1|0}while((0|e)<(0|t));return nB[a+264>>0]=n,VI(a+264|0,a+264|0,64,0,A+32|0,1,A),ng(a,a+264|0,64,0),nB[I>>0]=0|nB[a+264>>0],VI(I+1|0,B,C,i,A+32|0,2,A),ng(a,I+1|0,C,i),ng(a,35416,15&C,0),oI(a+256|0,Q,E),ng(a,a+256|0,8,0),E=0|Qg(0|C,0|i,64,0),oI(a+256|0,E,wB),ng(a,a+256|0,8,0),bg(a,I+1+C|0),$A(a,256),JI(A+36|0,I+1+C|0),_I(A+32|0),(0==(2&n)?!(0|jA(A+32|0)):0)||S(A),0|g&&(a=0|Qg(0|C,0|i,17,0),tB[g>>2]=a,tB[g+4>>2]=wB),oB=r,0},_crypto_kdf_derive_from_key:function(A,I,g,B,C,i){return A|=0,I|=0,g|=0,B|=0,C|=0,i|=0,0|q(A,I,g,B,C,i)},_crypto_shorthash_keygen:function(A){SI(A|=0,16)},_crypto_aead_chacha20poly1305_ietf_npubbytes:function(){return 12}}}(P.asmGlobalArg,P.asmLibraryArg,gA),XA=(P._sodium_library_version_minor=xA._sodium_library_version_minor,P._crypto_secretstream_xchacha20poly1305_init_push=xA._crypto_secretstream_xchacha20poly1305_init_push,P._bitshift64Lshr=xA._bitshift64Lshr,P._crypto_kx_publickeybytes=xA._crypto_kx_publickeybytes,P._sodium_unpad=xA._sodium_unpad,P._crypto_secretstream_xchacha20poly1305_statebytes=xA._crypto_secretstream_xchacha20poly1305_statebytes,P._crypto_box_noncebytes=xA._crypto_box_noncebytes,P._crypto_aead_chacha20poly1305_ietf_keybytes=xA._crypto_aead_chacha20poly1305_ietf_keybytes,P._crypto_aead_chacha20poly1305_ietf_encrypt_detached=xA._crypto_aead_chacha20poly1305_ietf_encrypt_detached,P._sodium_pad=xA._sodium_pad,P._crypto_scalarmult_base=xA._crypto_scalarmult_base,P._crypto_aead_chacha20poly1305_abytes=xA._crypto_aead_chacha20poly1305_abytes,P._crypto_core_hchacha20_outputbytes=xA._crypto_core_hchacha20_outputbytes,P._crypto_auth_bytes=xA._crypto_auth_bytes,P._crypto_sign_statebytes=xA._crypto_sign_statebytes,P._crypto_sign_open=xA._crypto_sign_open,P._crypto_aead_chacha20poly1305_decrypt_detached=xA._crypto_aead_chacha20poly1305_decrypt_detached,P._sbrk=xA._sbrk,P._memcpy=xA._memcpy,P._crypto_kdf_bytes_max=xA._crypto_kdf_bytes_max,P._crypto_kdf_bytes_min=xA._crypto_kdf_bytes_min,P._crypto_box_seed_keypair=xA._crypto_box_seed_keypair,P._crypto_box_beforenmbytes=xA._crypto_box_beforenmbytes,P._crypto_box_open_easy_afternm=xA._crypto_box_open_easy_afternm,P._crypto_sign_ed25519_sk_to_curve25519=xA._crypto_sign_ed25519_sk_to_curve25519,P._emscripten_get_global_libc=xA._emscripten_get_global_libc,P._free=xA._free),KA=(P.stackAlloc=xA.stackAlloc,P._crypto_aead_chacha20poly1305_keybytes=xA._crypto_aead_chacha20poly1305_keybytes,P.stackSave=xA.stackSave,P._crypto_secretstream_xchacha20poly1305_tag_message=xA._crypto_secretstream_xchacha20poly1305_tag_message,P._crypto_box_seal=xA._crypto_box_seal,P._crypto_aead_xchacha20poly1305_ietf_keygen=xA._crypto_aead_xchacha20poly1305_ietf_keygen,P._crypto_kx_keypair=xA._crypto_kx_keypair,P.runPostSets=xA.runPostSets,P._crypto_kx_client_session_keys=xA._crypto_kx_client_session_keys,P._crypto_generichash_bytes_min=xA._crypto_generichash_bytes_min,P._crypto_shorthash=xA._crypto_shorthash,P._crypto_auth_keybytes=xA._crypto_auth_keybytes,P._crypto_aead_chacha20poly1305_npubbytes=xA._crypto_aead_chacha20poly1305_npubbytes,P._crypto_secretstream_xchacha20poly1305_tag_rekey=xA._crypto_secretstream_xchacha20poly1305_tag_rekey,P._crypto_aead_xchacha20poly1305_ietf_abytes=xA._crypto_aead_xchacha20poly1305_ietf_abytes,P._crypto_sign_seedbytes=xA._crypto_sign_seedbytes,P._crypto_box_detached_afternm=xA._crypto_box_detached_afternm,P._crypto_auth=xA._crypto_auth,P._randombytes_random=xA._randombytes_random,P._crypto_sign_keypair=xA._crypto_sign_keypair,P._crypto_generichash_keybytes_min=xA._crypto_generichash_keybytes_min,P._crypto_generichash_statebytes=xA._crypto_generichash_statebytes,P._randombytes_buf_deterministic=xA._randombytes_buf_deterministic,P._crypto_aead_chacha20poly1305_encrypt_detached=xA._crypto_aead_chacha20poly1305_encrypt_detached,P._crypto_secretstream_xchacha20poly1305_keygen=xA._crypto_secretstream_xchacha20poly1305_keygen,P._sodium_library_version_major=xA._sodium_library_version_major,P._crypto_sign_final_verify=xA._crypto_sign_final_verify,P._crypto_secretbox_keygen=xA._crypto_secretbox_keygen,P._crypto_secretstream_xchacha20poly1305_headerbytes=xA._crypto_secretstream_xchacha20poly1305_headerbytes,P._sodium_version_string=xA._sodium_version_string,P._crypto_generichash_keybytes_max=xA._crypto_generichash_keybytes_max,P._crypto_sign_ed25519_pk_to_curve25519=xA._crypto_sign_ed25519_pk_to_curve25519,P._crypto_aead_chacha20poly1305_nsecbytes=xA._crypto_aead_chacha20poly1305_nsecbytes,P._crypto_secretstream_xchacha20poly1305_push=xA._crypto_secretstream_xchacha20poly1305_push,P._crypto_generichash=xA._crypto_generichash,P.getTempRet0=xA.getTempRet0,P._crypto_aead_chacha20poly1305_ietf_nsecbytes=xA._crypto_aead_chacha20poly1305_ietf_nsecbytes,P._randombytes_stir=xA._randombytes_stir,P._crypto_aead_chacha20poly1305_ietf_encrypt=xA._crypto_aead_chacha20poly1305_ietf_encrypt,P._crypto_secretstream_xchacha20poly1305_tag_push=xA._crypto_secretstream_xchacha20poly1305_tag_push,P._crypto_core_hchacha20=xA._crypto_core_hchacha20,P._crypto_box_beforenm=xA._crypto_box_beforenm,P._crypto_aead_chacha20poly1305_ietf_decrypt=xA._crypto_aead_chacha20poly1305_ietf_decrypt,P._randombytes_close=xA._randombytes_close,P._crypto_kx_server_session_keys=xA._crypto_kx_server_session_keys,P._crypto_secretstream_xchacha20poly1305_tag_final=xA._crypto_secretstream_xchacha20poly1305_tag_final,P._crypto_core_hchacha20_constbytes=xA._crypto_core_hchacha20_constbytes,P._crypto_shorthash_bytes=xA._crypto_shorthash_bytes,P._crypto_kdf_keybytes=xA._crypto_kdf_keybytes,P.setThrew=xA.setThrew,P.establishStackSpace=xA.establishStackSpace,P._crypto_sign_final_create=xA._crypto_sign_final_create,P._crypto_aead_chacha20poly1305_encrypt=xA._crypto_aead_chacha20poly1305_encrypt,P._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=xA._crypto_aead_xchacha20poly1305_ietf_decrypt_detached,P._crypto_kx_secretkeybytes=xA._crypto_kx_secretkeybytes,P._crypto_secretstream_xchacha20poly1305_messagebytes_max=xA._crypto_secretstream_xchacha20poly1305_messagebytes_max,P._crypto_secretstream_xchacha20poly1305_abytes=xA._crypto_secretstream_xchacha20poly1305_abytes,P._crypto_box_detached=xA._crypto_box_detached,P._randombytes_buf=xA._randombytes_buf,P._bitshift64Ashr=xA._bitshift64Ashr,P._crypto_generichash_init=xA._crypto_generichash_init,P._crypto_box_open_detached=xA._crypto_box_open_detached,P._crypto_scalarmult_bytes=xA._crypto_scalarmult_bytes,P._crypto_kx_seedbytes=xA._crypto_kx_seedbytes,P._crypto_auth_verify=xA._crypto_auth_verify,P._crypto_box_seal_open=xA._crypto_box_seal_open,P._crypto_secretbox_detached=xA._crypto_secretbox_detached,P._crypto_aead_xchacha20poly1305_ietf_nsecbytes=xA._crypto_aead_xchacha20poly1305_ietf_nsecbytes,P._crypto_secretbox_easy=xA._crypto_secretbox_easy,P._crypto_secretstream_xchacha20poly1305_init_pull=xA._crypto_secretstream_xchacha20poly1305_init_pull,P._crypto_aead_xchacha20poly1305_ietf_encrypt=xA._crypto_aead_xchacha20poly1305_ietf_encrypt,P._memset=xA._memset,P._crypto_generichash_keygen=xA._crypto_generichash_keygen,P._crypto_box_open_detached_afternm=xA._crypto_box_open_detached_afternm,P._sodium_bin2hex=xA._sodium_bin2hex,P._crypto_aead_xchacha20poly1305_ietf_decrypt=xA._crypto_aead_xchacha20poly1305_ietf_decrypt,P._crypto_aead_chacha20poly1305_ietf_keygen=xA._crypto_aead_chacha20poly1305_ietf_keygen,P._crypto_box_seedbytes=xA._crypto_box_seedbytes,P._crypto_core_hchacha20_inputbytes=xA._crypto_core_hchacha20_inputbytes,P._crypto_auth_keygen=xA._crypto_auth_keygen,P._crypto_hash=xA._crypto_hash,P._sodium_library_minimal=xA._sodium_library_minimal,P._crypto_box_easy_afternm=xA._crypto_box_easy_afternm,P._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=xA._crypto_aead_xchacha20poly1305_ietf_encrypt_detached,P._sodium_bin2base64=xA._sodium_bin2base64,P._crypto_box_macbytes=xA._crypto_box_macbytes,P._randombytes_seedbytes=xA._randombytes_seedbytes,P._crypto_box_publickeybytes=xA._crypto_box_publickeybytes,P._crypto_box_sealbytes=xA._crypto_box_sealbytes,P._crypto_sign_secretkeybytes=xA._crypto_sign_secretkeybytes,P._crypto_box_secretkeybytes=xA._crypto_box_secretkeybytes,P._crypto_aead_xchacha20poly1305_ietf_keybytes=xA._crypto_aead_xchacha20poly1305_ietf_keybytes,P._crypto_scalarmult_scalarbytes=xA._crypto_scalarmult_scalarbytes,P._crypto_secretstream_xchacha20poly1305_rekey=xA._crypto_secretstream_xchacha20poly1305_rekey,P._crypto_shorthash_keybytes=xA._crypto_shorthash_keybytes,P._crypto_aead_chacha20poly1305_keygen=xA._crypto_aead_chacha20poly1305_keygen,P._crypto_kx_sessionkeybytes=xA._crypto_kx_sessionkeybytes,P._malloc=xA._malloc);P._crypto_aead_chacha20poly1305_decrypt=xA._crypto_aead_chacha20poly1305_decrypt,P._crypto_secretbox_open_easy=xA._crypto_secretbox_open_easy,P._crypto_aead_chacha20poly1305_ietf_decrypt_detached=xA._crypto_aead_chacha20poly1305_ietf_decrypt_detached,P._crypto_sign=xA._crypto_sign,P._crypto_secretbox_noncebytes=xA._crypto_secretbox_noncebytes,P._crypto_box_keypair=xA._crypto_box_keypair,P._i64Subtract=xA._i64Subtract,P._crypto_generichash_keybytes=xA._crypto_generichash_keybytes,P._sodium_hex2bin=xA._sodium_hex2bin,P._sodium_init=xA._sodium_init,P._crypto_secretbox_macbytes=xA._crypto_secretbox_macbytes,P._crypto_secretbox_keybytes=xA._crypto_secretbox_keybytes,P._crypto_aead_xchacha20poly1305_ietf_npubbytes=xA._crypto_aead_xchacha20poly1305_ietf_npubbytes,P._randombytes=xA._randombytes,P._crypto_sign_publickeybytes=xA._crypto_sign_publickeybytes,P._crypto_sign_update=xA._crypto_sign_update,P.setTempRet0=xA.setTempRet0,P._crypto_generichash_bytes=xA._crypto_generichash_bytes,P._crypto_generichash_bytes_max=xA._crypto_generichash_bytes_max,P._crypto_secretbox_open_detached=xA._crypto_secretbox_open_detached,P._crypto_sign_init=xA._crypto_sign_init,P._crypto_core_hchacha20_keybytes=xA._crypto_core_hchacha20_keybytes,P.___muldi3=xA.___muldi3,P._bitshift64Shl=xA._bitshift64Shl,P._crypto_sign_verify_detached=xA._crypto_sign_verify_detached,P._crypto_kx_seed_keypair=xA._crypto_kx_seed_keypair,P._crypto_box_open_easy=xA._crypto_box_open_easy,P._crypto_hash_bytes=xA._crypto_hash_bytes,P._i64Add=xA._i64Add,P._crypto_kdf_contextbytes=xA._crypto_kdf_contextbytes,P._crypto_sign_bytes=xA._crypto_sign_bytes,P._crypto_generichash_update=xA._crypto_generichash_update,P._crypto_scalarmult=xA._crypto_scalarmult,P._crypto_aead_chacha20poly1305_ietf_abytes=xA._crypto_aead_chacha20poly1305_ietf_abytes,P.stackRestore=xA.stackRestore,P._crypto_kdf_keygen=xA._crypto_kdf_keygen,P._crypto_secretstream_xchacha20poly1305_keybytes=xA._crypto_secretstream_xchacha20poly1305_keybytes,P._crypto_sign_detached=xA._crypto_sign_detached,P._crypto_box_easy=xA._crypto_box_easy,P._crypto_secretstream_xchacha20poly1305_pull=xA._crypto_secretstream_xchacha20poly1305_pull,P._sodium_base642bin=xA._sodium_base642bin,P._sodium_base64_encoded_len=xA._sodium_base64_encoded_len,P._memmove=xA._memmove,P._crypto_generichash_final=xA._crypto_generichash_final,P._crypto_stream_keygen=xA._crypto_stream_keygen,P._randombytes_uniform=xA._randombytes_uniform,P._crypto_sign_seed_keypair=xA._crypto_sign_seed_keypair,P._crypto_kdf_derive_from_key=xA._crypto_kdf_derive_from_key,P._crypto_shorthash_keygen=xA._crypto_shorthash_keygen,P._crypto_aead_chacha20poly1305_ietf_npubbytes=xA._crypto_aead_chacha20poly1305_ietf_npubbytes;if(Z.stackAlloc=P.stackAlloc,Z.stackSave=P.stackSave,Z.stackRestore=P.stackRestore,Z.establishStackSpace=P.establishStackSpace,Z.setTempRet0=P.setTempRet0,Z.getTempRet0=P.getTempRet0,P.asm=xA,mA)if("function"==typeof P.locateFile?mA=P.locateFile(mA):P.memoryInitializerPrefixURL&&(mA=P.memoryInitializerPrefixURL+mA),K||V){var VA=P.readBinary(mA);CA.set(VA,Z.GLOBAL_BASE)}else{k();var jA=function(A){A.byteLength&&(A=new Uint8Array(A)),CA.set(A,Z.GLOBAL_BASE),P.memoryInitializerRequest&&delete P.memoryInitializerRequest.response,M()};function TA(){P.readAsync(mA,jA,function(){throw"could not load memory initializer "+mA})}var ZA=S(mA);if(ZA)jA(ZA.buffer);else if(P.memoryInitializerRequest){function WA(){var A=P.memoryInitializerRequest,I=A.response;if(200!==A.status&&0!==A.status){var g=S(P.memoryInitializerRequestURL);if(!g)return void TA();I=g.buffer}jA(I)}P.memoryInitializerRequest.response?setTimeout(WA,0):P.memoryInitializerRequest.addEventListener("load",WA)}else TA()}m.prototype=new Error,m.prototype.constructor=m;var qA,OA=null,zA=!1;SA=function A(){P.calledRun||N(),P.calledRun||(SA=A)},P.callMain=P.callMain=function(A){function I(){for(var A=0;A<3;A++)B.push(0)}A=A||[],u();var g=A.length+1,B=[e(b(P.thisProgram),"i8",0)];I();for(var C=0;C<g-1;C+=1)B.push(e(b(A[C]),"i8",0)),I();B.push(0),B=e(B,"i32",0);try{R(P._main(g,B,0),!0)}catch(A){if(A instanceof m)return;if("SimulateInfiniteLoop"==A)return void(P.noExitRuntime=!0);var i=A;A&&"object"==typeof A&&A.stack&&(i=[A,A.stack]),P.printErr("exception thrown: "+i),P.quit(1,A)}finally{zA=!0}},P.run=P.run=N,P.exit=P.exit=R;var $A=[];if(P.abort=P.abort=U,P.preInit)for("function"==typeof P.preInit&&(P.preInit=[P.preInit]);P.preInit.length>0;)P.preInit.pop()();var AI=!0;P.noInitialRun&&(AI=!1),P.noExitRuntime=!0,N()}),"object"==typeof process&&process.removeAllListeners("uncaughtException"),I} true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (I),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==typeof exports&&"string"!=typeof exports.nodeName?I(exports):A.libsodium=I(A.libsodium_mod||(A.commonJsStrict={}))}(this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(1).Buffer, __webpack_require__(7)))

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),
/* 106 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var intSize = 4
var zeroBuffer = new Buffer(intSize)
zeroBuffer.fill(0)

var charSize = 8
var hashSize = 16

function toArray (buf) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize))
    buf = Buffer.concat([buf, zeroBuffer], len)
  }

  var arr = new Array(buf.length >>> 2)
  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {
    arr[j] = buf.readInt32LE(i)
  }

  return arr
}

module.exports = function hash (buf, fn) {
  var arr = fn(toArray(buf), buf.length * charSize)
  buf = new Buffer(hashSize)
  for (var i = 0; i < arr.length; i++) {
    buf.writeInt32LE(arr[i], i << 2, true)
  }
  return buf
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var Transform = __webpack_require__(24).Transform
var inherits = __webpack_require__(0)

function HashBase (blockSize) {
  Transform.call(this)

  this._block = new Buffer(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)
    this.update(chunk)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this._digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function (data) {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)
  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 109 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(2).Buffer;
/*</replacement>*/

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(112);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(7)))

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(57);

/*<replacement>*/
var util = __webpack_require__(16);
util.inherits = __webpack_require__(0);
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(38);


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(12);


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(37).Transform


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(37).PassThrough


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(0)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(0)
var Sha256 = __webpack_require__(58)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0)
var SHA512 = __webpack_require__(59)
var Hash = __webpack_require__(13)
var Buffer = __webpack_require__(2).Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(0)
var Buffer = __webpack_require__(2).Buffer

var Base = __webpack_require__(11)

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(61)


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {var checkParameters = __webpack_require__(63)
var defaultEncoding = __webpack_require__(64)
var sync = __webpack_require__(65)
var Buffer = __webpack_require__(2).Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}
function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]
  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }
  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) {
      return browserPbkdf2(password, salt, iterations, keylen, algo)
    } else {
      return sync(password, salt, iterations, keylen, digest)
    }
  }), callback)
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(7)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var ebtk = __webpack_require__(26)
var aes = __webpack_require__(41)
var DES = __webpack_require__(138)
var desModes = __webpack_require__(144)
var aesModes = __webpack_require__(42)
function createCipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}
function createDecipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createCipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createDecipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite,
      decrypt: true
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var inherits = __webpack_require__(0)
var HashBase = __webpack_require__(128)

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(2).Buffer
var Transform = __webpack_require__(24).Transform
var inherits = __webpack_require__(0)

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var MODES = __webpack_require__(42)
var AuthCipher = __webpack_require__(69)
var Buffer = __webpack_require__(2).Buffer
var StreamCipher = __webpack_require__(70)
var Transform = __webpack_require__(11)
var aes = __webpack_require__(27)
var ebtk = __webpack_require__(26)
var inherits = __webpack_require__(0)

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),
/* 130 */
/***/ (function(module, exports) {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(17)

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer
var xor = __webpack_require__(17)

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var xor = __webpack_require__(17)

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(2).Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

var AuthCipher = __webpack_require__(69)
var Buffer = __webpack_require__(2).Buffer
var MODES = __webpack_require__(42)
var StreamCipher = __webpack_require__(70)
var Transform = __webpack_require__(11)
var aes = __webpack_require__(27)
var ebtk = __webpack_require__(26)
var inherits = __webpack_require__(0)

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var CipherBase = __webpack_require__(11)
var des = __webpack_require__(43)
var inherits = __webpack_require__(0)

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(6);

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(6);
var inherits = __webpack_require__(0);

var des = __webpack_require__(43);
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(6);
var inherits = __webpack_require__(0);

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(6);
var inherits = __webpack_require__(0);

var des = __webpack_require__(43);
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),
/* 144 */
/***/ (function(module, exports) {

exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var generatePrime = __webpack_require__(71)
var primes = __webpack_require__(149)

var DH = __webpack_require__(150)

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 146 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 147 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 148 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 149 */
/***/ (function(module, exports) {

module.exports = {"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var BN = __webpack_require__(3);
var MillerRabin = __webpack_require__(72);
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(71);
var randomBytes = __webpack_require__(14);
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(15)
var stream = __webpack_require__(24)
var inherits = __webpack_require__(0)
var sign = __webpack_require__(152)
var verify = __webpack_require__(188)

var algorithms = __webpack_require__(61)
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = __webpack_require__(60)
var crt = __webpack_require__(44)
var EC = __webpack_require__(5).ec
var BN = __webpack_require__(3)
var parseKeys = __webpack_require__(29)
var curves = __webpack_require__(82)

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 153 */
/***/ (function(module, exports) {

module.exports = {"name":"elliptic","version":"6.4.0","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^1.4.3","coveralls":"^2.11.3","grunt":"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2","istanbul":"^0.4.2","jscs":"^2.9.0","jshint":"^2.6.0","mocha":"^2.1.0"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;
var BN = __webpack_require__(3);
var minAssert = __webpack_require__(6);
var minUtils = __webpack_require__(74);

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(3);
var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(28);
var elliptic = __webpack_require__(5);
var BN = __webpack_require__(3);
var inherits = __webpack_require__(0);
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(28);
var BN = __webpack_require__(3);
var inherits = __webpack_require__(0);
var Base = curve.base;

var elliptic = __webpack_require__(5);
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(28);
var elliptic = __webpack_require__(5);
var BN = __webpack_require__(3);
var inherits = __webpack_require__(0);
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curves = exports;

var hash = __webpack_require__(45);
var elliptic = __webpack_require__(5);

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = __webpack_require__(166);
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(161);
exports.sha224 = __webpack_require__(162);
exports.sha256 = __webpack_require__(76);
exports.sha384 = __webpack_require__(163);
exports.sha512 = __webpack_require__(77);


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var common = __webpack_require__(18);
var shaCommon = __webpack_require__(75);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var SHA256 = __webpack_require__(76);

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);

var SHA512 = __webpack_require__(77);

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var common = __webpack_require__(18);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(8);
var assert = __webpack_require__(6);

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),
/* 166 */
/***/ (function(module, exports) {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(3);
var HmacDRBG = __webpack_require__(168);
var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = __webpack_require__(169);
var Signature = __webpack_require__(170);

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(45);
var utils = __webpack_require__(74);
var assert = __webpack_require__(6);

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(3);
var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(3);

var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(45);
var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(172);
var Signature = __webpack_require__(173);

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(3);
var elliptic = __webpack_require__(5);
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.


var asn1 = __webpack_require__(19)

exports.certificate = __webpack_require__(185)

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = __webpack_require__(19);
var inherits = __webpack_require__(0);

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = __webpack_require__(176).runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(177);

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};


/***/ }),
/* 177 */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var Reporter = __webpack_require__(20).Reporter;
var EncoderBuffer = __webpack_require__(20).EncoderBuffer;
var DecoderBuffer = __webpack_require__(20).DecoderBuffer;
var assert = __webpack_require__(6);

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be ommited only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(79);

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var decoders = exports;

decoders.der = __webpack_require__(80);
decoders.pem = __webpack_require__(182);


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);
var Buffer = __webpack_require__(1).Buffer;

var DERDecoder = __webpack_require__(80);

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var encoders = exports;

encoders.der = __webpack_require__(81);
encoders.pem = __webpack_require__(184);


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(0);

var DEREncoder = __webpack_require__(81);

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(19)

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate


/***/ }),
/* 186 */
/***/ (function(module, exports) {

module.exports = {"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\n\r?DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\n\r?\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?-----END \1-----$/m
var evp = __webpack_require__(26)
var ciphers = __webpack_require__(41)
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = __webpack_require__(3)
var EC = __webpack_require__(5).ec
var parseKeys = __webpack_require__(29)
var curves = __webpack_require__(82)

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var elliptic = __webpack_require__(5);
var BN = __webpack_require__(3);

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

exports.publicEncrypt = __webpack_require__(191);
exports.privateDecrypt = __webpack_require__(192);

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(29);
var randomBytes = __webpack_require__(14);
var createHash = __webpack_require__(15);
var mgf = __webpack_require__(83);
var xor = __webpack_require__(84);
var bn = __webpack_require__(3);
var withPublic = __webpack_require__(85);
var crt = __webpack_require__(44);

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(29);
var mgf = __webpack_require__(83);
var xor = __webpack_require__(84);
var bn = __webpack_require__(3);
var crt = __webpack_require__(44);
var createHash = __webpack_require__(15);
var withPublic = __webpack_require__(85);
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))

/***/ })
/******/ ]);